"use strict";(self.webpackChunklongyu_website=self.webpackChunklongyu_website||[]).push([[2864],{3905:function(e,i,n){n.d(i,{Zo:function(){return d},kt:function(){return m}});var t=n(7294);function c(e,i,n){return i in e?Object.defineProperty(e,i,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[i]=n,e}function a(e,i){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);i&&(t=t.filter((function(i){return Object.getOwnPropertyDescriptor(e,i).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var i=1;i<arguments.length;i++){var n=null!=arguments[i]?arguments[i]:{};i%2?a(Object(n),!0).forEach((function(i){c(e,i,n[i])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(i){Object.defineProperty(e,i,Object.getOwnPropertyDescriptor(n,i))}))}return e}function p(e,i){if(null==e)return{};var n,t,c=function(e,i){if(null==e)return{};var n,t,c={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],i.indexOf(n)>=0||(c[n]=e[n]);return c}(e,i);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],i.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}var s=t.createContext({}),r=function(e){var i=t.useContext(s),n=i;return e&&(n="function"==typeof e?e(i):l(l({},i),e)),n},d=function(e){var i=r(e.components);return t.createElement(s.Provider,{value:i},e.children)},o={inlineCode:"code",wrapper:function(e){var i=e.children;return t.createElement(t.Fragment,{},i)}},u=t.forwardRef((function(e,i){var n=e.components,c=e.mdxType,a=e.originalType,s=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),u=r(n),m=c,_=u["".concat(s,".").concat(m)]||u[m]||o[m]||a;return n?t.createElement(_,l(l({ref:i},d),{},{components:n})):t.createElement(_,l({ref:i},d))}));function m(e,i){var n=arguments,c=i&&i.mdxType;if("string"==typeof e||c){var a=n.length,l=new Array(a);l[0]=u;var p={};for(var s in i)hasOwnProperty.call(i,s)&&(p[s]=i[s]);p.originalType=e,p.mdxType="string"==typeof e?e:c,l[1]=p;for(var r=2;r<a;r++)l[r]=n[r];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6360:function(e,i,n){n.r(i),n.d(i,{assets:function(){return d},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return p},metadata:function(){return r},toc:function(){return o}});var t=n(7462),c=n(3366),a=(n(7294),n(3905)),l=["components"],p={},s="pciutils \u529f\u80fd\u53ca\u5176\u5b9e\u73b0\u5206\u6790",r={unversionedId:"\u6280\u672f\u535a\u5ba2/linux-system/\u547d\u4ee4\u5b9e\u73b0\u539f\u7406\u5206\u6790/pciutils \u529f\u80fd\u53ca\u5176\u5b9e\u73b0\u5206\u6790",id:"\u6280\u672f\u535a\u5ba2/linux-system/\u547d\u4ee4\u5b9e\u73b0\u539f\u7406\u5206\u6790/pciutils \u529f\u80fd\u53ca\u5176\u5b9e\u73b0\u5206\u6790",title:"pciutils \u529f\u80fd\u53ca\u5176\u5b9e\u73b0\u5206\u6790",description:"1. pciutils \u7684\u529f\u80fd\u53ca\u5e38\u7528\u547d\u4ee4",source:"@site/docs/\u6280\u672f\u535a\u5ba2/linux-system/\u547d\u4ee4\u5b9e\u73b0\u539f\u7406\u5206\u6790/pciutils \u529f\u80fd\u53ca\u5176\u5b9e\u73b0\u5206\u6790.md",sourceDirName:"\u6280\u672f\u535a\u5ba2/linux-system/\u547d\u4ee4\u5b9e\u73b0\u539f\u7406\u5206\u6790",slug:"/\u6280\u672f\u535a\u5ba2/linux-system/\u547d\u4ee4\u5b9e\u73b0\u539f\u7406\u5206\u6790/pciutils \u529f\u80fd\u53ca\u5176\u5b9e\u73b0\u5206\u6790",permalink:"/longyu.github.io/\u6280\u672f\u535a\u5ba2/linux-system/\u547d\u4ee4\u5b9e\u73b0\u539f\u7406\u5206\u6790/pciutils \u529f\u80fd\u53ca\u5176\u5b9e\u73b0\u5206\u6790",draft:!1,editUrl:"https://github.com/longyuwlz/longyu.github.io/docs/\u6280\u672f\u535a\u5ba2/linux-system/\u547d\u4ee4\u5b9e\u73b0\u539f\u7406\u5206\u6790/pciutils \u529f\u80fd\u53ca\u5176\u5b9e\u73b0\u5206\u6790.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"linux \u547d\u4ee4\u5206\u6790\u4e4b chroot \u7684\u539f\u7406",permalink:"/longyu.github.io/\u6280\u672f\u535a\u5ba2/linux-system/\u547d\u4ee4\u5b9e\u73b0\u539f\u7406\u5206\u6790/linux \u547d\u4ee4\u5206\u6790\u4e4b chroot \u7684\u539f\u7406"},next:{title:"lspci \u4e0e setpci",permalink:"/longyu.github.io/\u6280\u672f\u535a\u5ba2/linux-system/\u547d\u4ee4\u5b9e\u73b0\u539f\u7406\u5206\u6790/setpci \u547d\u4ee4\u4e0e\u5185\u6838 pci_enable_device \u4e0e pci_disable_device \u51fd\u6570"}},d={},o=[{value:"1. pciutils \u7684\u529f\u80fd\u53ca\u5e38\u7528\u547d\u4ee4",id:"1-pciutils-\u7684\u529f\u80fd\u53ca\u5e38\u7528\u547d\u4ee4",level:2},{value:"2. pciutils \u7f16\u8bd1\u4f7f\u7528",id:"2-pciutils-\u7f16\u8bd1\u4f7f\u7528",level:2},{value:"\u771f\u6b63\u7684\u95ee\u9898\u662f\u5565\uff1f",id:"\u771f\u6b63\u7684\u95ee\u9898\u662f\u5565",level:2},{value:"4. libpci \u5e93\u7684\u5b9e\u73b0\u539f\u7406",id:"4-libpci-\u5e93\u7684\u5b9e\u73b0\u539f\u7406",level:2},{value:"\u4e0d\u540c\u5e73\u53f0 pci_methods \u65b9\u6cd5\u7684\u6ce8\u518c\u8fc7\u7a0b",id:"\u4e0d\u540c\u5e73\u53f0-pci_methods-\u65b9\u6cd5\u7684\u6ce8\u518c\u8fc7\u7a0b",level:2},{value:"pci \u8bbe\u5907\u626b\u63cf\u8fc7\u7a0b",id:"pci-\u8bbe\u5907\u626b\u63cf\u8fc7\u7a0b",level:2},{value:"\u7528\u6237\u6001\u7a0b\u5e8f\u8c03\u7528 pciutils \u63d0\u4f9b\u7684 pci \u4fe1\u606f\u83b7\u53d6\u3001\u8bbe\u5b9a pci \u63a5\u53e3\u4fe1\u606f",id:"\u7528\u6237\u6001\u7a0b\u5e8f\u8c03\u7528-pciutils-\u63d0\u4f9b\u7684-pci-\u4fe1\u606f\u83b7\u53d6\u8bbe\u5b9a-pci-\u63a5\u53e3\u4fe1\u606f",level:2},{value:"\u603b\u7ed3",id:"\u603b\u7ed3",level:2}],u={toc:o};function m(e){var i=e.components,n=(0,c.Z)(e,l);return(0,a.kt)("wrapper",(0,t.Z)({},u,n,{components:i,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"pciutils-\u529f\u80fd\u53ca\u5176\u5b9e\u73b0\u5206\u6790"},"pciutils \u529f\u80fd\u53ca\u5176\u5b9e\u73b0\u5206\u6790"),(0,a.kt)("h2",{id:"1-pciutils-\u7684\u529f\u80fd\u53ca\u5e38\u7528\u547d\u4ee4"},"1. pciutils \u7684\u529f\u80fd\u53ca\u5e38\u7528\u547d\u4ee4"),(0,a.kt)("p",null,"pciutils \u5305\u542b\u4e00\u4e2a\u7528\u4e0e\u8bbf\u95ee pci \u603b\u7ebf\u914d\u7f6e\u5bc4\u5b58\u5668\u7684\u53ef\u79fb\u690d\u5e93\u53ca\u57fa\u4e8e\u8fd9\u4e2a\u5e93\u5f00\u53d1\u7684\u51e0\u4e2a\u5b9e\u7528\u7a0b\u5e8f\u3002"),(0,a.kt)("p",null,"pciutils \u652f\u6301\u7684\u5e73\u53f0\u53ca\u4e0d\u540c\u5e73\u53f0\u4e0a\u8bbf\u95ee pci bus \u7684\u65b9\u6cd5\u5217\u8868\u5982\u4e0b\uff1a"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"center"},"\u652f\u6301\u7684\u5e73\u53f0"),(0,a.kt)("th",{parentName:"tr",align:"left"},"\u8bbf\u95ee pci bus \u7684\u65b9\u6cd5"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"Linux"),(0,a.kt)("td",{parentName:"tr",align:"left"},"via /sys/bus/pci, /proc/bus/pci or i386 ports")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"FreeBSD"),(0,a.kt)("td",{parentName:"tr",align:"left"},"via /dev/pci")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"NetBSD"),(0,a.kt)("td",{parentName:"tr",align:"left"},"via libpci")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"OpenBSD"),(0,a.kt)("td",{parentName:"tr",align:"left"},"via /dev/pci")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"GNU/kFreeBSD"),(0,a.kt)("td",{parentName:"tr",align:"left"},"via /dev/pci")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"Solaris/i386"),(0,a.kt)("td",{parentName:"tr",align:"left"},"direct port access")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"Aix"),(0,a.kt)("td",{parentName:"tr",align:"left"},"via /dev/pci and odmget")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"GNU Hurd"),(0,a.kt)("td",{parentName:"tr",align:"left"},"direct port access")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"Windows"),(0,a.kt)("td",{parentName:"tr",align:"left"},"direct port access, see README.Windows for caveats")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"CYGWIN"),(0,a.kt)("td",{parentName:"tr",align:"left"},"direct port access")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"BeOS"),(0,a.kt)("td",{parentName:"tr",align:"left"},"via syscalls")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"Haiku"),(0,a.kt)("td",{parentName:"tr",align:"left"},"via /dev/misc/poke")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"Darwin"),(0,a.kt)("td",{parentName:"tr",align:"left"},"via IOKit")))),(0,a.kt)("p",null,"\u4ece\u4e0a\u8ff0\u8868\u683c\u53ef\u4ee5\u770b\u51fa\uff0cpciutils \u652f\u6301\u7684\u5e73\u53f0\u662f\u975e\u5e38\u591a\u7684\uff0c\u4e14\u8fd9\u4e9b\u4e0d\u540c\u5e73\u53f0\u8bbf\u95ee pci bus \u603b\u7ebf\u7684\u65b9\u6cd5\u4e5f\u6709\u6240\u533a\u522b\uff0cpciutils \u5b8c\u5168\u517c\u5bb9\u4e86\u8fd9\u4e9b\u5e73\u53f0\uff0c\u5177\u6709\u5f88\u597d\u7684\u53ef\u79fb\u690d\u6027\uff0c\u8fd9\u662f\u540e\u9762\u63cf\u8ff0 pciutils \u539f\u7406\u65f6\uff0c\u8981\u91cd\u70b9\u5206\u6790\u7684\u5185\u5bb9\uff01"),(0,a.kt)("p",null,"pciutils \u652f\u6301\u5982\u4e0b\u51e0\u4e2a\u5b9e\u7528\u7a0b\u5e8f\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"lspci -- \u663e\u793a\u6240\u6709 pci \u603b\u7ebf\u4e0e\u8bbe\u5907\u7684\u8be6\u7ec6\u4fe1\u606f"),(0,a.kt)("li",{parentName:"ol"},"setpci -- \u5141\u8bb8\u7528\u6237\u4ece pci \u914d\u7f6e\u7a7a\u95f4\u5bc4\u5b58\u5668\u8bfb\u53d6\u4e0e\u5199\u5165\u6570\u636e"),(0,a.kt)("li",{parentName:"ol"},"update-pciids -- \u4ece\u7f51\u7edc\u4e0a\u4e0b\u8f7d pci.ids \u6587\u4ef6\u7684\u5f53\u524d\u7248\u672c"),(0,a.kt)("li",{parentName:"ol"},"pcimodules -- \u5217\u51fa\u5f53\u524d\u7cfb\u7edf\u4e0a\u6240\u6709\u63d2\u5165\u7684 pci \u8bbe\u5907\u53ef\u7528\u7684\u5185\u6838\u9a71\u52a8")),(0,a.kt)("h2",{id:"2-pciutils-\u7f16\u8bd1\u4f7f\u7528"},"2. pciutils \u7f16\u8bd1\u4f7f\u7528"),(0,a.kt)("p",null,"\u7f16\u8bd1\u73af\u5883\uff1adebian10\ngcc \u7248\u672c\uff1agcc version 8.3.0 (Debian 8.3.0-6)\npciutils \u7248\u672c\uff1apciutils-3.5.2"),(0,a.kt)("p",null,"pciutils \u6e90\u7801\u901a\u8fc7\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u83b7\u53d6\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get source pciutils\n")),(0,a.kt)("p",null,"\u6267\u884c\u540e\u8fdb\u5165 pciutils-3.5.2 \u6e90\u7801\u76ee\u5f55\u4e2d\uff0c\u6267\u884c sudo make \u547d\u4ee4\uff0c\u53d1\u73b0 lspci \u7a0b\u5e8f\u94fe\u63a5\u7684\u65f6\u5019\u6709\u5982\u4e0b\u62a5\u9519\u4fe1\u606f\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"gcc   lspci.o ls-vpd.o ls-caps.o ls-caps-vendor.o ls-ecaps.o ls-kernel.o ls-tree.o ls-map.o common.o lib/libpci.a  -lz -lresolv -ludev  -o lspci\n/usr/bin/ld: lspci.o: in function `config_fetch':\n/tmp/pciutils-3.5.2/lspci.c:104: undefined reference to `pci_read_block'\n/usr/bin/ld: lspci.o: in function `scan_device':\n/tmp/pciutils-3.5.2/lspci.c:117: undefined reference to `pci_filter_match'\n/usr/bin/ld: /tmp/pciutils-3.5.2/lspci.c:126: undefined reference to `pci_read_block'\n/usr/bin/ld: /tmp/pciutils-3.5.2/lspci.c:140: undefined reference to `pci_setup_cache'\n/usr/bin/ld: /tmp/pciutils-3.5.2/lspci.c:141: undefined reference to `pci_fill_info'\n..........\n")),(0,a.kt)("p",null,"\u62a5\u9519\u4fe1\u606f\u8868\u660e pci_xxx \u8fd9\u4e9b\u51fd\u6570\u672a\u5b9a\u4e49\uff0cnm \u67e5\u770b lib/libpci.a \u6587\u4ef6\u76f8\u5173\u7684\u51fd\u6570\u5b9a\u4e49\u4fe1\u606f\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"0000000000003030 t pci_fill_info\n0000000000002fd0 t pci_fill_info_v35\n0000000000002e00 t pci_read_block\n0000000000002ca0 t pci_read_byte\n0000000000002d80 t pci_read_long\n0000000000002e10 t pci_read_vpd\n0000000000002cf0 t pci_read_word\n0000000000003040 t pci_setup_cache\n")),(0,a.kt)("p",null,"\u7b2c\u4e8c\u5217\u4e3a t \u8868\u660e\u51fd\u6570\u6709\u5b9a\u4e49\uff0c\u5370\u8c61\u4e2d\u8fd8\u6709\u4e2a\u5927\u5199\u7684 T \u7c7b\u578b\uff0cman nm \u53d1\u73b0 T/t \u7c7b\u578b\u89e3\u91ca\u4e00\u81f4\u3002"),(0,a.kt)("p",null,"\u8fd9\u91cc lspci \u7a0b\u5e8f\u7f16\u8bd1\u65f6\u5c06 lib/libpci.a \u653e\u5230\u4e86\u76f8\u5bf9\u9760\u540e\u7684\u4f4d\u7f6e\uff0c\u4fdd\u8bc1\u4e86\u5728\u94fe\u63a5\u7684\u65f6\u5019\u80fd\u591f\u627e\u5230\u76f8\u5e94\u7684\u7b26\u53f7\uff0c",(0,a.kt)("strong",{parentName:"p"},"\u90a3\u4e3a\u5565\u8fd8\u62a5\u7b26\u53f7\u672a\u5b9a\u4e49\u5462\uff1f")),(0,a.kt)("p",null,"\u4e3a\u4e86\u89e3\u51b3\u6b64\u95ee\u9898\u8fdb\u884c\u4e86\u5982\u4e0b\u5c1d\u8bd5\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u7f16\u8bd1 lspci \u7a0b\u5e8f\u65f6\u6539\u4e3a\u4f7f\u7528 lib \u4e0b\u7684 .o\uff0c\u6bcf\u6dfb\u52a0\u4e00\u4e2a .o \u89c2\u5bdf\u62a5\u9519\uff0c\u53d1\u73b0\u968f\u7740 .o \u6587\u4ef6\u7684\u52a0\u5165\u672a\u5b9a\u4e49\u95ee\u9898\u9010\u6e10\u6d88\u5931\u3002"),(0,a.kt)("li",{parentName:"ol"},"\u8fdb\u5165\u5230 lib \u5b50\u76ee\u5f55\u4e2d\uff0c\u6267\u884c ar -r libpci-test.a *.o \u624b\u52a8\u751f\u6210 libpci-test.a \u6587\u4ef6\uff0c\u4f7f\u7528\u8fd9\u4e2a\u6587\u4ef6\u94fe\u63a5\uff0c\u94fe\u63a5\u6210\u529f\u3002"),(0,a.kt)("li",{parentName:"ol"},"\u67e5\u770b README \u6587\u4ef6\uff0c\u6267\u884c make clean \u540e\uff0c\u6267\u884c make SHARED=yes\uff0c\u80fd\u591f\u6210\u529f\u7f16\u8bd1\u3002")),(0,a.kt)("p",null,"\u91cd\u65b0 clean \u540e\u6267\u884c make \u547d\u4ee4\uff0c\u67e5\u770b libpci.a \u7f16\u8bd1\u8fc7\u7a0b\uff0c\u83b7\u53d6\u5230\u5982\u4e0b\u4fe1\u606f\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},".............\ngcc -O2 -g -Wall -W -Wno-parentheses -Wstrict-prototypes -Wmissing-prototypes -fPIC -fvisibility=hidden   -c -o names-cache.o names-cache.c\ngcc -O2 -g -Wall -W -Wno-parentheses -Wstrict-prototypes -Wmissing-prototypes -fPIC -fvisibility=hidden   -c -o names-hwdb.o names-hwdb.c\ngcc -O2 -g -Wall -W -Wno-parentheses -Wstrict-prototypes -Wmissing-prototypes -fPIC -fvisibility=hidden   -c -o params.o params.c\ngcc -O2 -g -Wall -W -Wno-parentheses -Wstrict-prototypes -Wmissing-prototypes -fPIC -fvisibility=hidden   -c -o caps.o caps.c\ngcc -O2 -g -Wall -W -Wno-parentheses -Wstrict-prototypes -Wmissing-prototypes -fPIC -fvisibility=hidden   -c -o sysfs.o sysfs.c\ngcc -O2 -g -Wall -W -Wno-parentheses -Wstrict-prototypes -Wmissing-prototypes -fPIC -fvisibility=hidden   -c -o proc.o proc.c\ngcc -O2 -g -Wall -W -Wno-parentheses -Wstrict-prototypes -Wmissing-prototypes -fPIC -fvisibility=hidden   -c -o i386-ports.o i386-ports.c\ngcc -shared   -Wl,--version-script=libpci.ver -o libpci.a init.o access.o generic.o dump.o names.o filter.o names-hash.o names-parse.o names-net.o names-cache.o names-hwdb.o params.o caps.o sysfs.o proc.o i386-ports.o \n")),(0,a.kt)("p",null,"\u53ef\u4ee5\u53d1\u73b0\u7f16\u8bd1 libpci.a \u65f6\uff0c\u547d\u4ee4\u884c\u4e2d\u6709 ",(0,a.kt)("inlineCode",{parentName:"p"},"-fvisibility=hidden"),"\u53c2\u6570\uff0c\u4fee\u6539 lib/Makefile \u6587\u4ef6\uff0c\u53bb\u6389\u8fd9\u4e2a\u7f16\u8bd1\u53c2\u6570\u540e\uff0c\u91cd\u65b0 clean \u540e\u7f16\u8bd1\uff0c\u8fd9\u6b21\u6210\u529f\u4e86\u3002"),(0,a.kt)("h2",{id:"\u771f\u6b63\u7684\u95ee\u9898\u662f\u5565"},"\u771f\u6b63\u7684\u95ee\u9898\u662f\u5565\uff1f"),(0,a.kt)("p",null,"\u7f51\u4e0a\u641c\u7d22 ",(0,a.kt)("inlineCode",{parentName:"p"},"-fvisibility=hidden"),"\u53c2\u6570\uff0c\u53d1\u73b0\u8fd9\u4e2a\u53c2\u6570\u8bbe\u5b9a\u540e\uff0c\u7f16\u8bd1\u5bf9\u8c61\u4e2d\u7684\u6240\u6709\u672a\u901a\u8fc7 ",(0,a.kt)("inlineCode",{parentName:"p"},'__attribute__((visibility("default")))'),"\u4fee\u9970\u7684\u7b26\u53f7\u90fd\u4f1a\u88ab\u9690\u85cf\u4e3a\u672c\u5730\u7b26\u53f7\uff0c\u4f5c\u7528\u8303\u56f4\u4ec5\u5728\u5f53\u524d\u5bf9\u8c61\u4e2d\uff0c\u65e0\u6cd5\u88ab\u5176\u5b83\u5916\u90e8\u5bf9\u8c61\u5f15\u7528\u3002\u4e5f\u53ef\u4ee5\u6307\u5b9a\u94fe\u63a5\u53c2\u6570\u4f7f\u7528 version-script \u6765\u5b8c\u6210\u8fd9\u4e00\u529f\u80fd\u3002"),(0,a.kt)("p",null,"nm \u770b\u5230 libpci.a \u4e2d pci_xx \u7684\u7b26\u53f7\u7c7b\u578b\u90fd\u662f t \u8868\u793a\u8fd9\u4e9b\u7b26\u53f7\u90fd\u662f\u672c\u5730\u7b26\u53f7\uff0cT \u7c7b\u578b\u7684\u7b26\u53f7\u662f\u5168\u5c40\u7b26\u53f7\uff0c\u53ef\u4ee5\u88ab\u5176\u5b83\u5bf9\u8c61\u5f15\u7528\u3002"),(0,a.kt)("p",null,"lib/Makefile \u6587\u4ef6\u4e2d\u76f8\u5173\u4ee3\u7801\u8d34\u5230\u8fd9\u91cc\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"#ifeq ($(SHARED),no)\n$(PCILIBA): $(addsuffix .o,$(OBJS))\n    rm -f $@\n    $(AR) rcs $@ $^\n    $(RANLIB) $@\n#else\nCFLAGS += -fPIC -fvisibility=hidden\n$(PCILIB): $(addsuffix .o,$(OBJS))\n ifdef PCI_HAVE_PM_DARWIN_DEVICE\n    $(CC) -shared $(LDFLAGS) $(SONAME) -Wl,-install_name,$(LIBDIR)/$(PCILIB) -o $@ $^ $(LIB_LDLIBS)\n else\n    $(CC) -shared $(LDFLAGS) $(SONAME) -Wl,--version-script=libpci.ver -o $@ $^ $(LIB_LDLIBS)\n endif\n#endif\n")),(0,a.kt)("p",null,"SHARED \u672a\u8bbe\u5b9a\u65f6\u9ed8\u8ba4\u503c\u4e3a no\uff0c\u6309\u7167\u4e0a\u9762\u7684\u903b\u8f91\uff0c\u5e94\u8be5\u4e0d\u4f1a\u8bbe\u5b9a ",(0,a.kt)("inlineCode",{parentName:"p"},"-fvisibility=hidden"),"\u6807\u5fd7\uff0c\u53ef\u6267\u884c\u8fc7\u7a0b\u660e\u786e\u8868\u793a\uff0c\u4f7f\u7528\u7684\u662f else \u4e2d\u7684\u4ee3\u7801\u3002"),(0,a.kt)("p",null,"make \u7f16\u8bd1\u65f6\u6709\u5982\u4e0b\u8b66\u544a\u4fe1\u606f\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"Makefile:66: warning: overriding recipe for target 'libpci.a'\nMakefile:57: warning: ignoring old recipe for target 'libpci.a'\n")),(0,a.kt)("p",null,"57 \u884c\u662f SHARED \u4e3a no \u7684\u4ee3\u7801\uff0c66 \u884c\u662f SHARED \u4e0d\u4e3a no \u7684\u4ee3\u7801\uff0c\u62a5\u9519\u4fe1\u606f\u8868\u660e 57 \u884c\u6307\u5b9a\u7684 libpci.a \u76ee\u6807\u7684\u7f16\u8bd1\u8bed\u53e5\u88ab 66 \u884c\u6307\u5b9a\u7684\u76f8\u540c\u76ee\u6807\u7f16\u8bd1\u8bed\u53e5\u8986\u76d6\u3002"),(0,a.kt)("p",null,"\u4ece ",(0,a.kt)("a",{parentName:"p",href:"https://www.gnu.org/software/make/manual/html_node/Error-Messages.html"},"Appendix B Errors Generated by Make")," \u4e0a\u627e\u5230\u5982\u4e0b\u4fe1\u606f\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"\u2018warning: overriding recipe for target `xxx'\u2019\n\u2018warning: ignoring old recipe for target `xxx'\u2019\n\n    GNU make allows only one recipe to be specified per target (except for double-colon rules). If you give a recipe for a target which already has been defined to have one, this warning is issued and the second recipe will overwrite the first. See Multiple Rules for One Target.\n")),(0,a.kt)("p",null,"\u5f53\u63cf\u8ff0\u4e86\u540c\u4e00\u4e2a\u7f16\u8bd1\u76ee\u6807\u7684\u4e24\u4e2a\u7f16\u8bd1\u8fc7\u7a0b\u65f6\uff0c\u7b2c\u4e8c\u4e2a\u7f16\u8bd1\u8fc7\u7a0b\u5c06\u4f1a\u8986\u76d6\u7b2c\u4e00\u4e2a\u5e76\u6253\u5370 ",(0,a.kt)("strong",{parentName:"p"},"overriding recipe for target `xxx'")," \u8fd9\u79cd\u8b66\u544a\u4fe1\u606f\u3002"),(0,a.kt)("p",null,"\u8fdb\u4e00\u6b65\u786e\u8ba4\u53d1\u73b0 debian10 \u4ed3\u5e93\u5e93\u4e2d\u7ef4\u62a4\u7684 pciutils \u6e90\u7801\u4e0b\u8f7d\u540e\u4f1a\u6253\u4e0a\u5185\u90e8\u8865\u4e01\uff0c\u4e0e lib/Makefile \u76f8\u5173\u7684\u8865\u4e01\u5185\u5bb9\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-patch"},"===================================================================\n--- pciutils-3.5.2.orig/lib/Makefile\n+++ pciutils-3.5.2/lib/Makefile\n@@ -47,13 +47,16 @@ OBJS += darwin\n endif\n \n all: $(PCILIB) $(PCILIBPC)\n+PCILIBA=libpci.a\n \n-ifeq ($(SHARED),no)\n-$(PCILIB): $(addsuffix .o,$(OBJS))\n+all: $(PCILIB) $(PCILIBA) $(PCILIBPC)\n+\n+#ifeq ($(SHARED),no)\n+$(PCILIBA): $(addsuffix .o,$(OBJS))\n    rm -f $@\n    $(AR) rcs $@ $^\n    $(RANLIB) $@\n-else\n+#else\n CFLAGS += -fPIC -fvisibility=hidden\n $(PCILIB): $(addsuffix .o,$(OBJS))\n  ifdef PCI_HAVE_PM_DARWIN_DEVICE\n@@ -61,7 +64,7 @@ $(PCILIB): $(addsuffix .o,$(OBJS))\n  else\n    $(CC) -shared $(LDFLAGS) $(SONAME) -Wl,--version-script=libpci.ver -o $@ $^ $(LIB_LDLIBS)\n  endif\n-endif\n+#endif\n")),(0,a.kt)("p",null,"\u6d4b\u8bd5\u76f4\u63a5\u7f16\u8bd1\u672a\u6253\u8fd9\u4e2a\u8865\u4e01\u7684\u7248\u672c\uff0c\u80fd\u591f\u6210\u529f\u7f16\u8bd1\uff0c\u95ee\u9898\u786e\u5b9a\u4e3a debian10 \u7684\u8fd9\u4e2a\u8865\u4e01\u4e2d\u6dfb\u52a0\u7684 PCILIBA \u4e0e PCILIB \u76ee\u6807\u662f\u540c\u4e00\u4e2a\u76ee\u6807\uff0c\u7f16\u8bd1\u65b9\u6cd5\u5374\u4e0d\u540c\uff0c\u6545\u800c\u8986\u76d6\u4e86\u8001\u65b9\u6cd5\uff0cdebian10 \u4e2d pciutils \u7684\u7f16\u8bd1\u547d\u4ee4\u884c\u5728 rules \u6587\u4ef6\u4e2d\u6307\u5b9a\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Makefile"},' 32 build:\n 33     dh_testdir\n 34     OPT="$(CFLAGS)" $(MAKE) $(CROSS) $(PATHS) SHARED=yes $(LINUX_FEATURES)\n')),(0,a.kt)("p",null,"\u53ef\u4ee5\u770b\u5230\u5b83\u8bbe\u5b9a\u4e86 SHARED=yes\uff0c\u4f1a\u5c06 libpci \u7f16\u8bd1\u4e3a\u52a8\u6001\u5e93\uff0c\u8fd9\u79cd\u65b9\u5f0f\u662f\u6ca1\u6709\u95ee\u9898\u6ef4\uff01"),(0,a.kt)("h1",{id:"3-pciutils-example-\u7a0b\u5e8f\u7f16\u8bd1\u6267\u884c"},"3. pciutils example \u7a0b\u5e8f\u7f16\u8bd1\u6267\u884c"),(0,a.kt)("p",null,"pciutils \u6839\u76ee\u5f55\u4e2d\u653e\u4e86\u4e00\u4e2a example \u7a0b\u5e8f\uff0c\u6b64\u7a0b\u5e8f\u4ee3\u7801\u975e\u5e38\u5c11\uff0c\u5374\u4e0e lspci\u3001setpci \u7b49\u5de5\u5177\u7684\u6d41\u7a0b\u5b8c\u5168\u4e00\u81f4\uff0c\u5728\u8fdb\u4e00\u6b65\u5206\u6790 pciutils \u5185\u90e8\u539f\u7406\u524d\u6211\u4eec\u5148\u770b\u770b\u8fd9\u4e2a\u5e93\u8981\u600e\u4e48\u4f7f\u7528\u3002"),(0,a.kt)("p",null,"\u6267\u884c example \u7684\u90e8\u5206\u8f93\u51fa\u4fe1\u606f\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"[longyu@debian-10:15:50:16] pciutils-3.5.2 $ ./example \n0000:00:1f.4 vendor=8086 device=9da3 class=0c05 irq=16 (pin 1) base0=400010c004 (Cannon Point-LP SMBus Controller)\n0000:00:14.0 vendor=8086 device=9ded class=0c03 irq=126 (pin 1) base0=c1200004 (Cannon Point-LP USB 3.1 xHCI Controller)\n0000:00:02.0 vendor=8086 device=3ea0 class=0300 irq=129 (pin 1) base0=c0000004 (UHD Graphics 620 (Whiskey Lake))\n0000:00:14.2 vendor=8086 device=9def class=0500 irq=0 (pin 0) base0=c1216004 (Cannon Point-LP Shared SRAM)\n.........\n")),(0,a.kt)("p",null,"example \u8f93\u51fa\u4e86\u7cfb\u7edf\u4e0a\u6bcf\u4e00\u4e2a pci \u8bbe\u5907\u7684\u4fe1\u606f\u8bf8\u5982 pci \u53f7\u3001vendor id\u3001device id\u3001class\u3001irq \u53f7\u3001\u57fa\u5730\u5740\u7b49\u7b49\u4fe1\u606f\uff0c\u90e8\u5206\u4fe1\u606f\u5728 lspci \u547d\u4ee4\u7684\u8f93\u51fa\u4e2d\u4e5f\u80fd\u591f\u770b\u5230\u3002"),(0,a.kt)("p",null,"example \u7a0b\u5e8f\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'/*\n *  The PCI Library -- Example of use (simplistic lister of PCI devices)\n *\n *  Written by Martin Mares and put to public domain. You can do\n *  with it anything you want, but I don\'t give you any warranty.\n */\n\n#include <stdio.h>\n\n#include "lib/pci.h"\n\nint main(void)\n{\n  struct pci_access *pacc;\n  struct pci_dev *dev;\n  unsigned int c;\n  char namebuf[1024], *name;\n\n  pacc = pci_alloc();       /* Get the pci_access structure */\n  /* Set all options you want -- here we stick with the defaults */\n  pci_init(pacc);       /* Initialize the PCI library */\n  pci_scan_bus(pacc);       /* We want to get the list of devices */\n  for (dev=pacc->devices; dev; dev=dev->next)   /* Iterate over all devices */\n    {\n      pci_fill_info(dev, PCI_FILL_IDENT | PCI_FILL_BASES | PCI_FILL_CLASS); /* Fill in header info we need */\n      c = pci_read_byte(dev, PCI_INTERRUPT_PIN);                /* Read config register directly */\n      printf("%04x:%02x:%02x.%d vendor=%04x device=%04x class=%04x irq=%d (pin %d) base0=%lx",\n         dev->domain, dev->bus, dev->dev, dev->func, dev->vendor_id, dev->device_id,\n         dev->device_class, dev->irq, c, (long) dev->base_addr[0]);\n\n      /* Look up and print the full name of the device */\n      name = pci_lookup_name(pacc, namebuf, sizeof(namebuf), PCI_LOOKUP_DEVICE, dev->vendor_id, dev->device_id);\n      printf(" (%s)\\n", name);\n    }\n  pci_cleanup(pacc);        /* Close everything */\n  return 0;\n}\n')),(0,a.kt)("p",null,"\u4ee3\u7801\u91cf\u975e\u5e38\u5c11\uff0c\u4e3b\u8981\u8fc7\u7a0b\u5982\u4e0b\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u6267\u884c pci_alloc \u521d\u59cb\u5316 pci_access \u7ed3\u6784"),(0,a.kt)("li",{parentName:"ol"},"\u6267\u884c pci_init \u521d\u59cb\u5316 pci \u5e93"),(0,a.kt)("li",{parentName:"ol"},"\u6267\u884c pci_scan_bus \u626b\u63cf pci \u8bbe\u5907"),(0,a.kt)("li",{parentName:"ol"},"\u904d\u5386 pci_access \u7ed3\u6784\u4e2d\u7684 pci \u8bbe\u5907\u5217\u8868\uff0c\u8c03\u7528 libpci \u5e93\u63d0\u4f9b\u7684\u83b7\u53d6 pci \u8bbe\u5907\u4fe1\u606f\u7684\u51fd\u6570\u83b7\u53d6\u4fe1\u606f\uff0c\u7136\u540e\u8f93\u51fa")),(0,a.kt)("p",null,"\u4ee5\u4e0a\u51e0\u4e2a\u6b65\u9aa4\u90fd\u662f\u901a\u8fc7\u8c03\u7528 libpci \u5e93\u63d0\u4f9b\u7684\u51fd\u6570\u5b8c\u6210\u7684\uff0c\u53ef\u4ee5\u770b\u51fa libpci \u5e93\u7684\u63a5\u53e3\u662f\u975e\u5e38\u7b80\u5355\u7684\uff0c\u8fd9\u5927\u5927\u7b80\u5316\u4e86\u57fa\u4e8e\u8fd9\u4e2a\u5e93\u5f00\u53d1\u7684\u7a0b\u5e8f\u7684\u590d\u6742\u6027\uff0c\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5e93\u5b9e\u4f8b\u3002"),(0,a.kt)("h2",{id:"4-libpci-\u5e93\u7684\u5b9e\u73b0\u539f\u7406"},"4. libpci \u5e93\u7684\u5b9e\u73b0\u539f\u7406"),(0,a.kt)("p",null,"libpci \u5e93\u5b9e\u73b0\u7684\u4e3b\u8981\u9700\u6c42\u5982\u4e0b\uff1a"),(0,a.kt)("p",null,"1.\u63d0\u4f9b pci \u8bbe\u5907\u4fe1\u606f\u8bbf\u95ee\u4e0e\u67e5\u8be2\u7684\u63a5\u53e3\n2. \u5b9e\u73b0\u4e00\u5957\u63a5\u53e3\u517c\u5bb9\u591a\u79cd\u5e73\u53f0"),(0,a.kt)("p",null,"\u7b2c\u4e00\u7ae0\u4e2d\u5df2\u7ecf\u63d0\u5230 pciutils \u5177\u6709\u5f88\u597d\u7684\u53ef\u79fb\u690d\u6027\uff0c\u652f\u6301\u591a\u79cd\u4e0d\u540c\u7684\u5e73\u53f0\u3002pci \u603b\u7ebf\u53ca\u8bbe\u5907\u662f\u6807\u51c6\u5316\u7684\uff0c\u4e0d\u5b58\u5728\u5e73\u53f0\u7684\u5dee\u5f02\u6027\uff0c\u7528\u4ee5\u63cf\u8ff0\u8fd9\u4e9b pci \u8bbe\u5907\u7684\u7ed3\u6784\u662f\u5e73\u53f0\u72ec\u7acb\u7684\uff0c\u4f46\u662f\u4e0d\u540c\u7684\u5e73\u53f0\u4e0a\u626b\u63cf\u3001\u83b7\u53d6 pci \u8bbe\u5907\u4fe1\u606f\u7684\u65b9\u6cd5\u662f\u4e0d\u4e00\u81f4\u7684\u3002"),(0,a.kt)("p",null,"\u8981\u5b9e\u73b0\u7edf\u4e00\u63a5\u53e3\uff0c\u9700\u8981\u589e\u52a0\u4e00\u4e2a\u9002\u914d\u5c42\uff0c\u5c06\u4e0d\u540c\u5e73\u53f0\u83b7\u53d6 pci \u8bbe\u5907\u7684\u4e0d\u540c\u65b9\u6cd5\u7684\u53d8\u5316\u5c01\u88c5\u5230\u8fd9\u4e00\u9002\u914d\u5c42\u4e2d\uff0cpciutils \u5185\u90e8\u62bd\u8c61\u51fa\u4e86 pci_methods \u7ed3\u6784\u4f53\uff0c\u6b64\u7ed3\u6784\u4f53\u5c01\u88c5\u4e86\u4e0d\u540c\u5e73\u53f0 pci \u65b9\u6cd5\uff0cpci \u4e0a\u5c42\u63a5\u53e3\u901a\u8fc7\u8c03\u7528 pci_methods \u4e2d\u7684\u4e0d\u540c\u65b9\u6cd5\u6765\u4e0e\u5e95\u5c42\u4e0d\u540c\u5e73\u53f0\u4e0a\u7684\u63a5\u53e3\u4ea4\u4e92\uff0c\u8fbe\u6210\u4e86\u4e0a\u5c42\u63a5\u53e3\u7edf\u4e00\u7684\u76ee\u7684\u3002"),(0,a.kt)("p",null,"pci_methods \u7ed3\u6784\u4f53\u5b9a\u4e49\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"struct pci_methods {\n  char *name;\n  char *help;\n  void (*config)(struct pci_access *);\n  int (*detect)(struct pci_access *);\n  void (*init)(struct pci_access *);\n  void (*cleanup)(struct pci_access *);\n  void (*scan)(struct pci_access *);\n  int (*fill_info)(struct pci_dev *, int flags);\n  int (*read)(struct pci_dev *, int pos, byte *buf, int len);\n  int (*write)(struct pci_dev *, int pos, byte *buf, int len);\n  int (*read_vpd)(struct pci_dev *, int pos, byte *buf, int len);\n  void (*init_dev)(struct pci_dev *);\n  void (*cleanup_dev)(struct pci_dev *);\n};\n")),(0,a.kt)("p",null,"\u5982\u679c\u5c06\u4e0a\u9762\u8fd9\u4e2a\u7ed3\u6784\u4f53\u770b\u505a\u662f\u4e00\u4e2a\u7c7b\u7684\u65b9\u6cd5\uff0c\u6839\u636e c \u8bed\u8a00\u5b9e\u73b0\u9762\u5411\u5bf9\u8c61\u7684\u601d\u8def\u770b\uff0c\u865a\u51fd\u6570\u4e2d\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u6307\u5411\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u8fd9\u4e2a\u7ed3\u6784\u4f53\u7684\u65b9\u6cd5\u53ef\u4ee5\u5f52\u5c5e\u5230\u4e24\u7c7b\u5bf9\u8c61\u4e2d\u3002"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"pci_access \u5bf9\u8c61"),(0,a.kt)("li",{parentName:"ol"},"pci_dev \u5bf9\u8c61")),(0,a.kt)("p",null,"pci_access \u5bf9\u8c61\u8d1f\u8d23\u63cf\u8ff0\u5f53\u524d\u7cfb\u7edf\u4e0a pci \u8bbf\u95ee\u65b9\u6cd5\uff0c\u5e76\u53c2\u4e0e pci \u626b\u63cf\u8fc7\u7a0b\uff0cpci_dev \u5219\u8d1f\u8d23\u63cf\u8ff0\u6bcf\u4e2a pci \u8bbe\u5907\uff0c\u4e5f\u5c06\u6bcf\u4e2a pci \u8bbe\u5907\u7ed1\u5b9a\u5230\u5bf9\u5e94\u7684 pci \u4fe1\u606f\u8bbf\u95ee\u63a5\u53e3\u4e0a\uff0cpciutils \u6b63\u662f\u901a\u8fc7\u8fd9\u4e24\u4e2a\u7ed3\u6784\u7684\u7ec4\u5408\u5b9e\u73b0\u7684\u3002"),(0,a.kt)("h2",{id:"\u4e0d\u540c\u5e73\u53f0-pci_methods-\u65b9\u6cd5\u7684\u6ce8\u518c\u8fc7\u7a0b"},"\u4e0d\u540c\u5e73\u53f0 pci_methods \u65b9\u6cd5\u7684\u6ce8\u518c\u8fc7\u7a0b"),(0,a.kt)("p",null,"\u4e0a\u6587\u63d0\u5230 pciutils \u901a\u8fc7 pci_methods \u7ed3\u6784\u62bd\u8c61\u5e95\u5c42\u4e0d\u540c\u5e73\u53f0 pci \u8bbe\u5907\u64cd\u4f5c\u65b9\u6cd5\u63a5\u53e3\uff0c\u65e2\u7136 pciutils \u652f\u6301\u591a\u4e2a\u5e73\u53f0\uff0c\u76f8\u5e94\u7684 pci_methods \u7ed3\u6784\u4e5f\u6709\u591a\u4efd\u4e0d\u540c\u7684\u5b9e\u4f8b\uff0c",(0,a.kt)("strong",{parentName:"p"},"\u4e0d\u540c\u7684\u5e73\u53f0\u4e0a pci_methods \u5b9e\u4f8b\u5316\u65b9\u6cd5\u5176\u6ce8\u518c\u8fc7\u7a0b\u662f\u600e\u6837\u7684\u5462"),"\uff1f"),(0,a.kt)("p",null,"pciutils \u5185\u90e8\u5b9a\u4e49\u4e86\u4e00\u4e2a pci_methods \u7ed3\u6784\u7684\u6307\u9488\u6570\u7ec4\uff0c\u4e5f\u53eb pci_methods\uff0c\u6bcf\u4e00\u4e2a\u5e73\u53f0\u5b9e\u4f8b\u5316\u7684 pci_methods \u7ed3\u6784\u7684\u6307\u9488\u5360\u636e pci_methods \u6570\u7ec4\u7684\u4e00\u4e2a\u8868\u9879\uff0c\u540c\u65f6\u901a\u8fc7\u5b8f\u6765\u63a7\u5236\u662f\u5426\u52a0\u5165\u7279\u5b9a\u7684\u5e73\u53f0\u3002"),(0,a.kt)("p",null,"\u76f8\u5173\u4fe1\u606f\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"static struct pci_methods *pci_methods[PCI_ACCESS_MAX] = {\n  NULL,\n#ifdef PCI_HAVE_PM_LINUX_SYSFS\n  &pm_linux_sysfs,\n#else\n  NULL,\n#endif\n#ifdef PCI_HAVE_PM_LINUX_PROC\n  &pm_linux_proc,\n#else\n  NULL,\n#endif\n#ifdef PCI_HAVE_PM_INTEL_CONF\n  &pm_intel_conf1,\n  &pm_intel_conf2,\n#else\n")),(0,a.kt)("p",null,"\u6bcf\u4e00\u4e2a\u9879\u76ee\u90fd\u901a\u8fc7\u5b8f\u6765\u63a7\u5236\uff0c\u5f53\u672a\u5b9a\u4e49\u76f8\u5173\u7684\u5b8f\u65f6\uff0c\u8868\u9879\u4e3a NULL\u3002\u8fd9\u4e9b\u5b8f\u901a\u8fc7 lib/configure \u751f\u6210 lib/config.h \u6765\u751f\u6210\u5b9a\u4e49\uff0c\u751f\u6210\u540e\u5305\u542b\u8fd9\u4e2a\u5934\u6587\u4ef6\u5c31\u5728\u7f16\u8bd1\u65f6\u5c06\u5f53\u524d\u5e73\u53f0\u652f\u6301\u7684 pci_methods \u65b9\u6cd5\u6ce8\u518c\u5230\u4e86 pci_methods \u6570\u7ec4\u4e2d\u3002"),(0,a.kt)("p",null,"\u65e2\u7136\u5df2\u7ecf\u660e\u786e\u4e86\u6bcf\u4e2a\u5e73\u53f0 pci_methods \u65b9\u6cd5\u6ce8\u518c\u7684\u8fc7\u7a0b\uff0c\u4e0b\u4e00\u6b65\u9700\u8981\u786e\u5b9a\u7684\u5c31\u662f\u5f53\u524d\u5e73\u53f0\u5982\u4f55\u83b7\u53d6\u5230\u76f8\u5e94\u7684 pci_methods \u65b9\u6cd5\u3002"),(0,a.kt)("p",null,"pci_methods \u7ed3\u6784\u4e2d\u7684 config \u4e0e detect \u65b9\u6cd5\u5171\u540c\u627f\u62c5\u4e86\u8fd9\u4e00\u4efb\u52a1\uff0c\u5176\u4e3b\u8981\u8fc7\u7a0b\u5982\u4e0b\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u5728 pci_alloc \u51fd\u6570\u4e2d\u521b\u5efa\u4e00\u4e2a pci_access \u7ed3\u6784\uff0c\u7136\u540e\u904d\u5386 pci_methods \u6570\u7ec4\u4e2d\u7684\u6bcf\u4e00\u4e2a pci_methods \u5b9e\u4f8b\u5316\u65b9\u6cd5\uff0c\u8c03\u7528 config \u865a\u51fd\u6570\u6ce8\u518c\u4e00\u4e2a\u6807\u8bc6\u6027\u7684\u53c2\u6570\u3002"),(0,a.kt)("li",{parentName:"ol"},"\u5728 pci_init \u51fd\u6570\u4e2d\u904d\u5386 pci_methods \u6570\u7ec4\u4e2d\u7684\u6bcf\u4e00\u4e2a\u8868\u9879\uff0c\u8c03\u7528 detect \u865a\u51fd\u6570\u83b7\u53d6 config \u865a\u51fd\u6570\u4e2d\u6ce8\u518c\u7684\u53c2\u6570\u5e76\u6839\u636e\u83b7\u53d6\u5230\u7684\u503c\u5224\u65ad\u5f53\u524d\u7cfb\u7edf\u662f\u5426\u652f\u6301\uff0c\u652f\u6301\u5219\u8fd4\u56de 0\u3002"),(0,a.kt)("li",{parentName:"ol"},"\u83b7\u53d6\u5230\u7b2c\u4e00\u4e2a\u652f\u6301\u7684 pci_methods \u65b9\u6cd5\u5219\u586b\u5145\u5230 pci_alloc \u4e2d\u521b\u5efa\u7684 pci_access \u7ed3\u6784\u4e2d\u7684 methods \u53d8\u91cf\uff0c\u5e76\u5c06\u6b64\u65b9\u6cd5\u5728 pci_methods \u6570\u7ec4\u4e2d\u7684\u5c0f\u6807\u4fdd\u5b58\u5230 pci_access \u7684 method \u53d8\u91cf\u4e2d\uff0c\u5e76\u8c03\u7528 pci_methods \u65b9\u6cd5\u7684\u521d\u59cb\u5316\u51fd\u6570\uff0c\u8fd9\u5c31\u5b8c\u6210\u4e86\u83b7\u53d6\u5f53\u524d\u7cfb\u7edf\u652f\u6301\u7684 pci_methods \u65b9\u6cd5\u7684\u4efb\u52a1\u3002")),(0,a.kt)("h2",{id:"pci-\u8bbe\u5907\u626b\u63cf\u8fc7\u7a0b"},"pci \u8bbe\u5907\u626b\u63cf\u8fc7\u7a0b"),(0,a.kt)("p",null,"\u83b7\u53d6\u5230\u5f53\u524d\u5e73\u53f0\u652f\u6301\u7684 pci_methods \u5e76\u6ce8\u518c\u5230 pci_access \u7ed3\u6784\u540e\uff0c\u5c31\u5f00\u59cb\u626b\u63cf pci \u8bbe\u5907\uff0c\u4e0a\u5c42\u51fd\u6570\u4e3a pci_scan_bus\uff0c\u5176\u6e90\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"void\npci_scan_bus(struct pci_access *a)\n{\n  a->methods->scan(a);\n}\n")),(0,a.kt)("p",null,"\u6b64\u51fd\u6570\u76f4\u63a5\u8c03\u7528\u5f53\u524d pci_access \u7ed3\u6784\u4e2d\u7684 pci_methods \u65b9\u6cd5\u4e2d\u7684 scan \u865a\u51fd\u6570\u5b8c\u6210\u529f\u80fd\u3002"),(0,a.kt)("p",null,"\u4f7f\u7528 linux \u4e2d sysfs pci_methods \u65b9\u6cd5\u65f6\uff0cscan \u51fd\u6570\u4e3a sysfs_scan \u51fd\u6570\uff0c\u5176\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'static void sysfs_scan(struct pci_access *a)\n{\n  char dirname[1024];\n  DIR *dir;\n  struct dirent *entry;\n  int n;\n\n  n = snprintf(dirname, sizeof(dirname), "%s/devices", sysfs_name(a));\n  if (n < 0 || n >= (int) sizeof(dirname))\n    a->error("Directory name too long");\n  dir = opendir(dirname);\n  if (!dir)\n    a->error("Cannot open %s", dirname);\n  while ((entry = readdir(dir)))\n    {\n      struct pci_dev *d;\n      unsigned int dom, bus, dev, func;\n\n      /* ".", ".." or a special non-device perhaps */\n      if (entry->d_name[0] == \'.\')\n    continue;\n\n      d = pci_alloc_dev(a);\n      if (sscanf(entry->d_name, "%x:%x:%x.%d", &dom, &bus, &dev, &func) < 4)\n    a->error("sysfs_scan: Couldn\'t parse entry name %s", entry->d_name);\n\n      /* Ensure kernel provided domain that fits in a signed integer */\n      if (dom > 0x7fffffff)\n    a->error("sysfs_scan: Invalid domain %x", dom);\n\n      d->domain = dom;\n      d->bus = bus;\n      d->dev = dev;\n      d->func = func;\n      if (!a->buscentric)\n    {\n      sysfs_get_resources(d);\n      d->irq = sysfs_get_value(d, "irq", 1);\n      /*\n       *  We could read these faster from the config registers, but we want to give\n       *  the kernel a chance to fix up ID\'s and especially classes of broken devices.\n       */\n      d->vendor_id = sysfs_get_value(d, "vendor", 1);\n      d->device_id = sysfs_get_value(d, "device", 1);\n      d->device_class = sysfs_get_value(d, "class", 1) >> 8;\n      d->known_fields = PCI_FILL_IDENT | PCI_FILL_CLASS | PCI_FILL_IRQ | PCI_FILL_BASES | PCI_FILL_ROM_BASE | PCI_FILL_SIZES | PCI_FILL_IO_FLAGS;\n    }\n      pci_link_dev(a, d);\n    }\n  closedir(dir);\n}\n')),(0,a.kt)("p",null,"\u6b64\u51fd\u6570\u7684\u4e3b\u8981\u6d41\u7a0b\u4e3a\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u6253\u5f00 /sys/bus/pci/devices/ \u76ee\u5f55"),(0,a.kt)("li",{parentName:"ol"},"\u904d\u5386 /sys/bus/pci/devices \u76ee\u5f55\uff0c\u8c03\u7528 pci_alloc_dev \u51fd\u6570\u4e3a\u6bcf\u4e2a\u626b\u63cf\u5230\u7684 pci \u8bbe\u5907\u521b\u5efa\u4e00\u4e2a pci_dev \u7ed3\u6784\uff0c\u626b\u63cf\u5b50\u76ee\u5f55\uff0c\u89e3\u6790\u540e\u586b\u5145\u5230 pci_dev \u7ed3\u6784\u7684\u4e0d\u540c\u5b57\u6bb5\u4e2d\uff0c\u6700\u540e\u8c03\u7528 pci_link_dev \u5c06\u5f53\u524d pci_dev \u7ed3\u6784\u63d2\u5230 pci_access \u7ed3\u6784\u4e2d devices \u94fe\u8868\u7684\u5934\u90e8\u3002")),(0,a.kt)("p",null,"\u4e0a\u6587\u5df2\u7ecf\u8bf4\u660e\u4e86 pci_methods \u7ed3\u6784\u4f53\u4e2d\u7684\u4e00\u4e9b\u65b9\u6cd5\u662f pci_dev \u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u90a3\u81ea\u7136 pci_dev \u7ed3\u6784\u4e2d\u4e5f\u8981\u5173\u8054\u5230 pci_methods \u65b9\u6cd5\u4e0a\uff0cpci_dev \u7ed3\u6784\u4e2d\u4e5f\u6709\u4e00\u4e2a methods \u5b57\u6bb5\uff0c\u5728 pci_alloc_dev \u7684\u65f6\u5019\u8d4b\u503c\u4e3a pci_access \u4e2d\u7684 methods \u5b57\u6bb5\u7684\u503c\u3002"),(0,a.kt)("p",null,"pci_alloc_dev \u51fd\u6570\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"struct pci_dev *\npci_alloc_dev(struct pci_access *a)\n{\n  struct pci_dev *d = pci_malloc(a, sizeof(struct pci_dev));\n\n  memset(d, 0, sizeof(*d));\n  d->access = a;\n  d->methods = a->methods;\n  d->hdrtype = -1;\n  d->numa_node = -1;\n  if (d->methods->init_dev)\n    d->methods->init_dev(d);\n  return d;\n}\n")),(0,a.kt)("p",null,"\u6b64\u51fd\u6570\u5c06 pci_dev \u4e0e pci_access \u5173\u8054\u8d77\u6765\uff0cpci_dev \u4e2d\u7684 access \u53d8\u91cf\u6307\u5411 pci_access \u7ed3\u6784\uff0c\u5f53 pci_dev \u5173\u8054\u7684 pci_methods \u4e2d\u7684 init_dev \u65b9\u6cd5\u5b58\u5728\u65f6\u8c03\u7528\u4e4b\u3002"),(0,a.kt)("p",null,"pci \u8bbe\u5907\u626b\u63cf\u5b8c\u6210\u540e\uff0c\u901a\u8fc7 pci_access \u7ed3\u6784\u4e2d\u7684 devices \u6307\u9488\u5c31\u80fd\u591f\u8bbf\u95ee\u5230\u6240\u6709\u7684 pci_dev \u7ed3\u6784\u3002"),(0,a.kt)("h2",{id:"\u7528\u6237\u6001\u7a0b\u5e8f\u8c03\u7528-pciutils-\u63d0\u4f9b\u7684-pci-\u4fe1\u606f\u83b7\u53d6\u8bbe\u5b9a-pci-\u63a5\u53e3\u4fe1\u606f"},"\u7528\u6237\u6001\u7a0b\u5e8f\u8c03\u7528 pciutils \u63d0\u4f9b\u7684 pci \u4fe1\u606f\u83b7\u53d6\u3001\u8bbe\u5b9a pci \u63a5\u53e3\u4fe1\u606f"),(0,a.kt)("p",null,"example \u7a0b\u5e8f\u4e2d\u76f8\u5173\u4fe1\u606f\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'  for (dev=pacc->devices; dev; dev=dev->next)   /* Iterate over all devices */\n    {\n      pci_fill_info(dev, PCI_FILL_IDENT | PCI_FILL_BASES | PCI_FILL_CLASS); /* Fill in header info we need */\n      c = pci_read_byte(dev, PCI_INTERRUPT_PIN);                /* Read config register directly */\n      printf("%04x:%02x:%02x.%d vendor=%04x device=%04x class=%04x irq=%d (pin %d) base0=%lx",\n         dev->domain, dev->bus, dev->dev, dev->func, dev->vendor_id, dev->device_id,\n         dev->device_class, dev->irq, c, (long) dev->base_addr[0]);\n\n      /* Look up and print the full name of the device */\n      name = pci_lookup_name(pacc, namebuf, sizeof(namebuf), PCI_LOOKUP_DEVICE, dev->vendor_id, dev->device_id);\n      printf(" (%s)\\n", name);\n    }\n')),(0,a.kt)("p",null,"\u4e0a\u8ff0\u4ee3\u7801\u901a\u8fc7\u904d\u5386\u626b\u63cf\u5230\u7684 pci \u94fe\u8868\uff0c\u83b7\u53d6\u5230\u6bcf\u4e2a pci_dev \u7ed3\u6784\uff0c\u5e76\u8c03\u7528 pci_fill_info\u3001pci_read_byte\u3001pci_lookup_name \u51fd\u6570\u6765\u83b7\u53d6\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u683c\u5f0f\u5316\u540e\u8f93\u51fa\u3002"),(0,a.kt)("p",null,"pci_fill_info \u4e0e pci_read_byte \u901a\u8fc7\u8c03\u7528\u7ed1\u5b9a\u5230\u5f53\u524d pci_dev \u4e0a\u7684 pci_methods \u4e2d\u7684 fill_info \u4e0e read \u51fd\u6570\u5b9e\u73b0\uff0c\u7c7b\u4f3c\u7684\u51fd\u6570\u53ef\u4ee5\u5728 lib/access.c \u4e2d\u627e\u5230\u3002"),(0,a.kt)("p",null,"pci_lookup_name \u51fd\u6570\u901a\u8fc7 device id \u4e0e vendor id \u68c0\u7d22\u6307\u5b9a\u4f4d\u7f6e\u7684\u6570\u636e\u5e93\uff0c\u83b7\u53d6\u5230\u8be6\u7ec6\u7684\u8bbe\u5907\u63cf\u8ff0\u4fe1\u606f\u3002"),(0,a.kt)("p",null,"\u8fd9\u4e2a\u6570\u636e\u5e93\u6709\u5982\u4e0b\u51e0\u4e2a\u7c7b\u522b\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u672c\u5730\u6570\u636e\u5e93"),(0,a.kt)("li",{parentName:"ol"},"\u672c\u5730 cache \u6570\u636e\u5e93"),(0,a.kt)("li",{parentName:"ol"},"udev hwdb \u6570\u636e\u5e93"),(0,a.kt)("li",{parentName:"ol"},"\u901a\u8fc7 DNS \u6765\u89e3\u6790\u672a\u77e5 ID")),(0,a.kt)("p",null,"\u6bcf\u4e2a pci_access \u7ed3\u6784\u4e2d\u90fd\u6709\u4e00\u4e2a id_hash\uff0cpci_lookup_name \u4f1a\u5728 id_hash \u6ca1\u6709\u521d\u59cb\u5316\u65f6\u5148\u4ece\u672c\u5730\u8f7d\u5165\u6570\u636e\u5e93\u63d2\u5165\u5230 id_hash \u7ed3\u6784\u4e2d\uff0c\u5176\u5b83\u7684\u51e0\u4e2a\u6570\u636e\u5e93\u4e5f\u4f1a\u5728\u68c0\u7d22\u6210\u529f\u540e\u63d2\u5165\u5230 id_hash \u7ed3\u6784\u4e2d\u3002"),(0,a.kt)("p",null,"\u6b64\u540e\u901a\u8fc7 hash \u51fd\u6570\u5c31\u80fd\u591f\u5feb\u901f\u7684\u627e\u5230\u8bbe\u5907\u63cf\u8ff0\u4fe1\u606f\u3002\u5728 linux \u4e2d\uff0c\u672c\u5730\u6570\u636e\u5e93\u7684\u8def\u5f84\u4e3a /usr/share/misc/pci.ids.gz\u3001/usr/shard/misc/pci.ids\uff0c\u4f7f\u7528 strace \u8ddf\u8e2a example \u7a0b\u5e8f\u5c31\u80fd\u591f\u770b\u5230\u5bf9\u8fd9\u4e9b\u6587\u4ef6\u7684\u8bbf\u95ee\u8fc7\u7a0b\u3002"),(0,a.kt)("h2",{id:"\u603b\u7ed3"},"\u603b\u7ed3"),(0,a.kt)("p",null,"pciutils \u5305\u901a\u8fc7\u62bd\u8c61 pci_methods \u7ed3\u6784\u5e76\u57fa\u4e8e\u6b64\u63a5\u53e3\u5c01\u88c5\u4e0a\u5c42\u63a5\u53e3\u5c4f\u853d\u4e86\u5e95\u5c42\u5e73\u53f0\u7684\u5dee\u5f02\uff0c\u8fbe\u6210\u4e86\u4e00\u5957\u63a5\u53e3\u591a\u5e73\u53f0\u652f\u6301\u7684\u9700\u6c42\u3002"),(0,a.kt)("p",null,"pci_methods \u7ed3\u6784\u662f\u5bf9\u53e6\u5916\u4e24\u4e2a\u5bf9\u8c61\u2014\u2014pci_access \u4e0e pci_dev \u5bf9\u8c61\u7684\u7ec4\u5408\uff0c\u8fd9\u4e00\u7ec4\u5408\u7b80\u5316\u4e86\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u8fc7\u7a0b\u3002"),(0,a.kt)("p",null,"\u672c\u6587\u4ece pciutils \u7684\u4ecb\u7ecd\u5165\u624b\u9010\u6b65\u6df1\u5165\u5230 pciutils \u7684\u5b9e\u73b0\u7ec6\u8282\u4e2d\uff0c\u63cf\u8ff0\u4e86 pciutils \u4e2d libpci \u5e93\u7684\u4e3b\u4f53\u6846\u67b6\uff0c\u5176\u5b83\u7684\u7ec6\u8282\u7559\u5f85\u4ee5\u540e\u7ee7\u7eed\u63a2\u7d22\uff01"))}m.isMDXComponent=!0}}]);