"use strict";(self.webpackChunklongyu_website=self.webpackChunklongyu_website||[]).push([[8524],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return c}});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},l=Object.keys(e);for(o=0;o<l.length;o++)t=l[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)t=l[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var m=o.createContext({}),i=function(e){var n=o.useContext(m),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=i(e.components);return o.createElement(m.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,m=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),u=i(t),c=r,k=u["".concat(m,".").concat(c)]||u[c]||d[c]||l;return t?o.createElement(k,s(s({ref:n},p),{},{components:t})):o.createElement(k,s({ref:n},p))}));function c(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,s=new Array(l);s[0]=u;var a={};for(var m in n)hasOwnProperty.call(n,m)&&(a[m]=n[m]);a.originalType=e,a.mdxType="string"==typeof e?e:r,s[1]=a;for(var i=2;i<l;i++)s[i]=t[i];return o.createElement.apply(null,s)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},404:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return m},default:function(){return c},frontMatter:function(){return a},metadata:function(){return i},toc:function(){return d}});var o=t(7462),r=t(3366),l=(t(7294),t(3905)),s=["components"],a={},m="\u4fee\u6539\u6a21\u5757\u7b26\u53f7 crc \u6821\u9a8c\u7801\u5e76\u63a2\u8ba8 modpost \u7684\u90e8\u5206\u5de5\u4f5c\u539f\u7406",i={unversionedId:"\u6280\u672f\u535a\u5ba2/linux-system/\u5185\u6838\u6a21\u5757/\u5b9e\u73b0\u539f\u7406/\u4fee\u6539\u6a21\u5757\u7b26\u53f7 crc \u6821\u9a8c\u7801\u5e76\u63a2\u8ba8 modpost \u7684\u90e8\u5206\u5de5\u4f5c\u539f\u7406",id:"\u6280\u672f\u535a\u5ba2/linux-system/\u5185\u6838\u6a21\u5757/\u5b9e\u73b0\u539f\u7406/\u4fee\u6539\u6a21\u5757\u7b26\u53f7 crc \u6821\u9a8c\u7801\u5e76\u63a2\u8ba8 modpost \u7684\u90e8\u5206\u5de5\u4f5c\u539f\u7406",title:"\u4fee\u6539\u6a21\u5757\u7b26\u53f7 crc \u6821\u9a8c\u7801\u5e76\u63a2\u8ba8 modpost \u7684\u90e8\u5206\u5de5\u4f5c\u539f\u7406",description:"\u524d\u8a00",source:"@site/docs/\u6280\u672f\u535a\u5ba2/linux-system/\u5185\u6838\u6a21\u5757/\u5b9e\u73b0\u539f\u7406/\u4fee\u6539\u6a21\u5757\u7b26\u53f7 crc \u6821\u9a8c\u7801\u5e76\u63a2\u8ba8 modpost \u7684\u90e8\u5206\u5de5\u4f5c\u539f\u7406.md",sourceDirName:"\u6280\u672f\u535a\u5ba2/linux-system/\u5185\u6838\u6a21\u5757/\u5b9e\u73b0\u539f\u7406",slug:"/\u6280\u672f\u535a\u5ba2/linux-system/\u5185\u6838\u6a21\u5757/\u5b9e\u73b0\u539f\u7406/\u4fee\u6539\u6a21\u5757\u7b26\u53f7 crc \u6821\u9a8c\u7801\u5e76\u63a2\u8ba8 modpost \u7684\u90e8\u5206\u5de5\u4f5c\u539f\u7406",permalink:"/longyu.github.io/\u6280\u672f\u535a\u5ba2/linux-system/\u5185\u6838\u6a21\u5757/\u5b9e\u73b0\u539f\u7406/\u4fee\u6539\u6a21\u5757\u7b26\u53f7 crc \u6821\u9a8c\u7801\u5e76\u63a2\u8ba8 modpost \u7684\u90e8\u5206\u5de5\u4f5c\u539f\u7406",draft:!1,editUrl:"https://github.com/longyuwlz/longyu.github.io/docs/\u6280\u672f\u535a\u5ba2/linux-system/\u5185\u6838\u6a21\u5757/\u5b9e\u73b0\u539f\u7406/\u4fee\u6539\u6a21\u5757\u7b26\u53f7 crc \u6821\u9a8c\u7801\u5e76\u63a2\u8ba8 modpost \u7684\u90e8\u5206\u5de5\u4f5c\u539f\u7406.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"linux \u5185\u6838\u6a21\u5757\u4e2d\u5f15\u7528\u7b26\u53f7\u662f\u5982\u4f55\u94fe\u63a5\u7684\uff1f",permalink:"/longyu.github.io/\u6280\u672f\u535a\u5ba2/linux-system/\u5185\u6838\u6a21\u5757/\u5b9e\u73b0\u539f\u7406/linux \u5185\u6838\u6a21\u5757\u4e2d\u5f15\u7528\u7b26\u53f7\u662f\u5982\u4f55\u94fe\u63a5\u7684\uff1f"},next:{title:"linux \u5916\u90e8\u5185\u6838\u6a21\u5757\u8bbe\u5b9a CFLAGS",permalink:"/longyu.github.io/\u6280\u672f\u535a\u5ba2/linux-system/\u5185\u6838\u6a21\u5757/\u7f16\u8bd1\u76f8\u5173/linux \u5916\u90e8\u5185\u6838\u6a21\u5757\u8bbe\u5b9a CFLAGS"}},p={},d=[{value:"\u524d\u8a00",id:"\u524d\u8a00",level:2},{value:"\u9700\u8981\u8fbe\u6210\u7684\u76ee\u6807",id:"\u9700\u8981\u8fbe\u6210\u7684\u76ee\u6807",level:2},{value:"\u5148\u8d34\u51fa\u53ef\u7528\u7684\u65b9\u6848",id:"\u5148\u8d34\u51fa\u53ef\u7528\u7684\u65b9\u6848",level:2},{value:"\u65b9\u6848 1\uff1a\u4ece\u751f\u6210\u539f\u7406\u4e0a\u51fa\u53d1",id:"\u65b9\u6848-1\u4ece\u751f\u6210\u539f\u7406\u4e0a\u51fa\u53d1",level:3},{value:"\u65b9\u6848 2:\u4ece elf \u6587\u4ef6\u51fa\u53d1",id:"\u65b9\u6848-2\u4ece-elf-\u6587\u4ef6\u51fa\u53d1",level:3},{value:"\u4e0a\u8ff0\u65b9\u6848\u80cc\u540e\u7684\u539f\u7406",id:"\u4e0a\u8ff0\u65b9\u6848\u80cc\u540e\u7684\u539f\u7406",level:2},{value:"1. \u4e3a\u4ec0\u4e48\u8981\u91cd\u547d\u540d .tmp_versions \u76ee\u5f55\u4e2d\u7684 .mod \u540e\u7f00\u7684\u6587\u4ef6\uff1f",id:"1-\u4e3a\u4ec0\u4e48\u8981\u91cd\u547d\u540d-tmp_versions-\u76ee\u5f55\u4e2d\u7684-mod-\u540e\u7f00\u7684\u6587\u4ef6",level:3},{value:"2. \u4e3a\u4ec0\u4e48\u8981\u91cd\u547d\u540d vmlinux",id:"2-\u4e3a\u4ec0\u4e48\u8981\u91cd\u547d\u540d-vmlinux",level:3},{value:"3. \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528 make -C \u8fd9\u79cd\u5916\u90e8\u6a21\u5757\u7f16\u8bd1\u65b9\u6cd5\u8fdb\u884c\u7f16\u8bd1\u5462\uff1f",id:"3-\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528-make--c-\u8fd9\u79cd\u5916\u90e8\u6a21\u5757\u7f16\u8bd1\u65b9\u6cd5\u8fdb\u884c\u7f16\u8bd1\u5462",level:3},{value:"4. modpost \u547d\u4ee4\u5230\u5e95\u5728\u73a9\u4e9b\u4ec0\u4e48\uff1f",id:"4-modpost-\u547d\u4ee4\u5230\u5e95\u5728\u73a9\u4e9b\u4ec0\u4e48",level:3},{value:"\u603b\u7ed3",id:"\u603b\u7ed3",level:2}],u={toc:d};function c(e){var n=e.components,t=(0,r.Z)(e,s);return(0,l.kt)("wrapper",(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"\u4fee\u6539\u6a21\u5757\u7b26\u53f7-crc-\u6821\u9a8c\u7801\u5e76\u63a2\u8ba8-modpost-\u7684\u90e8\u5206\u5de5\u4f5c\u539f\u7406"},"\u4fee\u6539\u6a21\u5757\u7b26\u53f7 crc \u6821\u9a8c\u7801\u5e76\u63a2\u8ba8 modpost \u7684\u90e8\u5206\u5de5\u4f5c\u539f\u7406"),(0,l.kt)("h2",{id:"\u524d\u8a00"},"\u524d\u8a00"),(0,l.kt)("p",null,"\u5728 ",(0,l.kt)("a",{parentName:"p",href:"https://blog.csdn.net/Longyu_wlz/article/details/103292251"},"could not insert module test.ko: Invalid parameters")," \u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u63cf\u8ff0\u8fc7\nMODVERSIONS \u529f\u80fd\u5bf9\u6a21\u5757\u4f9d\u8d56\u7684\u5916\u90e8\u7b26\u53f7\u6821\u9a8c\u7684\u529f\u80fd\u3002"),(0,l.kt)("p",null,"\u6700\u8fd1\u5728\u641e\u4e00\u4e2a\u9879\u76ee\u65f6\uff0c\u9700\u8981",(0,l.kt)("strong",{parentName:"p"},"\u4fee\u6539 Module.symvers")," \u4e2d\u7684",(0,l.kt)("strong",{parentName:"p"},"\u7b26\u53f7 crc \u503c"),"\u6765\u8df3\u8fc7\u5185\u6838\n\u7684\u7b26\u53f7\u6821\u9a8c\u8fc7\u7a0b\u4ee5\u6210\u529f\u52a0\u8f7d\u9a71\u52a8\uff0c\u5c31\u6309\u7167\u4ee5\u524d\u7684\u8ba4\u8bc6\u4fee\u6539\u4e86 Module.symvers \u6587\n\u4ef6\u5185\u5bb9\uff0c\u5374\u53d1\u73b0\u5e76\u6ca1\u6709\u751f\u6548\u3002"),(0,l.kt)("p",null,"\u7ecf\u8fc7\u4e00\u7cfb\u5217\u7684\u5c1d\u8bd5\u6211\u53d1\u73b0\u4e4b\u524d\u5bf9 Module.symvers \u6587\u4ef6\u7684\u7406\u89e3\u5f88\u4e0d\u5230\u4f4d\uff0c\u53ea\u63cf\u8ff0\n\u4e86\u5176\u4e2d\u7684\u4e00\u661f\u534a\u70b9\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u901a\u8fc7\u4e00\u4e2a\u4e2a\u5b9e\u9a8c\u9010\u6b65\u63ed\u5f00\nModule.symvers \u6587\u4ef6\u80cc\u540e\u7684\u8c1c\u56e2\u3002"),(0,l.kt)("h2",{id:"\u9700\u8981\u8fbe\u6210\u7684\u76ee\u6807"},"\u9700\u8981\u8fbe\u6210\u7684\u76ee\u6807"),(0,l.kt)("p",null,"\u6211\u7684\u76ee\u6807\u5728\u4e8e",(0,l.kt)("strong",{parentName:"p"},"\u4f7f\u4fee\u6539\u540e\u7684 Module.symvers \u4e2d\u7684\u7b26\u53f7\u7684 crc \u7801\u80fd\u591f\u5728\u6a21\u5757\u4e2d\u751f\n\u6548"),"\uff0c\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee xx.mod.c \u6587\u4ef6\u6765\u5224\u65ad\uff0c\u6b64\u6587\u4ef6\u4e2d\u7684\u76f8\u5173\u5185\u5bb9\u7684\u4e00\u4e2a\u793a\u4f8b\u5982\u4e0b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},'static const struct modversion_info ____versions[]\n__used\n__attribute__((section("__versions"))) = {\n    { 0x53dfe382, "module_layout" },\n    { 0xa96ff6c5, "alloc_pages_current" },\n    { 0x2d3385d3, "system_wq" },\n    { 0xadcf987e, "netdev_info" },\n')),(0,l.kt)("p",null,"\u8fd9\u4e2a ",(0,l.kt)("strong",{parentName:"p"},"__versions section")," \u4e2d\u5b58\u50a8\u4e86",(0,l.kt)("strong",{parentName:"p"},"\u7b26\u53f7\u7684 crc \u503c\u4e0e\u7b26\u53f7\u540d\u79f0"),"\u3002\u8fd9\u4e2a xx.mod.c\n\u6587\u4ef6\u88ab\u7528\u6765\u751f\u6210 xx.ko \u6587\u4ef6\u3002"),(0,l.kt)("p",null,"\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6267\u884c ",(0,l.kt)("strong",{parentName:"p"},"modprobe")," \u547d\u4ee4\u6765 dump xx.ko \u6587\u4ef6\u4e2d\u7684 ",(0,l.kt)("strong",{parentName:"p"},"modversions")," \u4fe1\u606f\u6765\n\u5224\u65ad\uff0c\u4e00\u4e2a\u547d\u4ee4\u884c\u793a\u4f8b\u5982\u4e0b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"[longyu@debian-10:10:51:45] linux.git $ /sbin/modprobe --dump-modversions ./drivers/net/ethernet/intel/e1000/e1000.ko\n0x53dfe382  module_layout\n0xa96ff6c5  alloc_pages_current\n0x2d3385d3  system_wq\n0xadcf987e  netdev_info\n")),(0,l.kt)("p",null,"\u8fd9\u91cc\u4ee5\u5217\u8868\u7684\u5f62\u5f0f\u5217\u51fa\u4e86 ko \u6587\u4ef6\u4e2d\u7684 modversions \u5185\u5bb9\uff0c",(0,l.kt)("strong",{parentName:"p"},"\u7b2c\u4e00\u5217\u4e3a crc \u503c\uff0c\n\u7b2c\u4e8c\u5217\u4e3a\u7b26\u53f7\u7684\u540d\u79f0\u3002")),(0,l.kt)("h2",{id:"\u5148\u8d34\u51fa\u53ef\u7528\u7684\u65b9\u6848"},"\u5148\u8d34\u51fa\u53ef\u7528\u7684\u65b9\u6848"),(0,l.kt)("h3",{id:"\u65b9\u6848-1\u4ece\u751f\u6210\u539f\u7406\u4e0a\u51fa\u53d1"},"\u65b9\u6848 1\uff1a\u4ece\u751f\u6210\u539f\u7406\u4e0a\u51fa\u53d1"),(0,l.kt)("p",null,"\u8fd9\u91cc\u9996\u5148\u9700\u8981\u7f16\u8bd1\u5185\u6838\uff0c\u7f16\u8bd1\u5b8c\u6210\u5185\u6838\u540e\uff0c\u9700\u8981\u6ce8\u610f\u5982\u4e0b\u6587\u4ef6\u3001\u76ee\u5f55\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Module.symvers\nvmlinux\n.tmp_versions\n")),(0,l.kt)("p",null,"\u5177\u4f53\u7684\u64cd\u4f5c\u6b65\u9aa4\u5982\u4e0b\uff1a"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"\u8fdb\u5165\u5230 .tmp_version \u76ee\u5f55\u4e2d\uff0c\u91cd\u547d\u540d\u6240\u6709\u7684\u540e\u7f00\u540d\u4e3a .mod \u7684\u6587\u4ef6"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"\u7531\u4e8e\u6709\u591a\u4e2a .mod \u540e\u7f00\u7684\u6587\u4ef6\uff0c\u6211\u4f7f\u7528 rename perl \u811a\u672c\u6765\u91cd\u547d\u540d\uff0c\u793a\u4f8b\u547d\n")),(0,l.kt)("p",{parentName:"li"},"\u4ee4\u5982\u4e0b\uff1a"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"    [longyu@debian-10:10:59:37] .tmp_versions $ rename 's/\\.mod$/.bak/' *.mod \n")),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"\u91cd\u547d\u540d vmlinux \u6587\u4ef6")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"    mv ./vmlinux vmlinux-bak\n")),(0,l.kt)("ol",{start:3},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"\u4fee\u6539 Module.symvers \u6587\u4ef6"),(0,l.kt)("p",{parentName:"li"},"\u6211\u8fd9\u91cc\u901a\u8fc7\u4fee\u6539 module_layout \u7684 crc \u6821\u9a8c\u7801\u4f5c\u4e3a\u793a\u4f8b\uff0c\u547d\u4ee4\u5982\u4e0b\uff1a"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"    sed -i  '/module_layout/ s/0x[0-9a-f][0-9a-f]*/0xffffffff/' Module.symvers\n")),(0,l.kt)("p",null,"\u6267\u884c\u4e0a\u8ff0\u547d\u4ee4\u5c31\u5c06 module_layout \u7684 crc \u7801\u8bbe\u5b9a\u4e3a\u5168 f\u3002"),(0,l.kt)("ol",{start:4},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"\u91cd\u65b0\u7f16\u8bd1\u6a21\u5757"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"\u9700\u8981\u8fdb\u5165\u5230\u6a21\u5757\u6e90\u7801\u5b50\u76ee\u5f55\u4e2d\u8fdb\u884c\u7f16\u8bd1\uff0c\u76f4\u63a5\u4f7f\u7528 make xx/xx.ko \u8fd9\u79cd\u65b9\u5f0f\u4e0d\n")),(0,l.kt)("p",{parentName:"li"},"\u4f1a\u751f\u6210 crc \u503c\u4e0e\u7b26\u53f7\u8868\u3002"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"\u793a\u4f8b\u547d\u4ee4\u5982\u4e0b\uff1b\n")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"    [longyu@debian-10:11:08:21] linux.git $ cd ./drivers/net/ethernet/intel/e1000/\n    [longyu@debian-10:11:15:51] e1000 $ make -C ~/linux.git/ M=$PWD modules \n    ........\n    [longyu@debian-10:11:16:07] e1000 $ grep 'module_layout' ./*.mod.c\n        { 0xffffffff, \"module_layout\" },\n    [longyu@debian-10:11:20:27] e1000 $ /sbin/modprobe --dump-modversions ./e1000.ko  | grep module_layout\n    0xffffffff  module_layout\n")),(0,l.kt)("p",null,"\u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u7684\u751f\u6210\u7684 xx.mod.c \u4e0e ko \u6587\u4ef6\u4e2d\u7684 module_layout \u7b26\u53f7\u7684 crc\n\u5747\u53d8\u4e3a\u4e86\u5168 F\uff0c\u8fbe\u5230\u4e86\u6211\u4eec\u9884\u671f\u7684\u6548\u679c\u3002"),(0,l.kt)("h3",{id:"\u65b9\u6848-2\u4ece-elf-\u6587\u4ef6\u51fa\u53d1"},"\u65b9\u6848 2:\u4ece elf \u6587\u4ef6\u51fa\u53d1"),(0,l.kt)("p",null,"\u7f16\u8bd1\u5185\u6838\u6a21\u5757\u6700\u7ec8\u751f\u6210\u7684 xx.ko \u4e5f\u662f\u4e2a elf \u6587\u4ef6\uff0c\u53ef\u4ee5\u76f4\u63a5\u4fee\u6539 elf \u6587\u4ef6\u5185\n\u5bb9\u6765\u5b8c\u6210\u8fd9\u4e2a\u529f\u80fd\uff0c\u4e3b\u8981\u6b65\u9aa4\u5982\u4e0b\uff1b"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"objcopy --dump-section __versions=versions ./e1000.ko "),(0,l.kt)("li",{parentName:"ol"},"hexedit versions"),(0,l.kt)("li",{parentName:"ol"},"objcopy --update-section __versions=versions ./e1000.ko "),(0,l.kt)("li",{parentName:"ol"},"/sbin/modprobe --dump-modversions ./e1000.ko ")),(0,l.kt)("p",null,"\u53ef\u4ee5\u7528\u5982\u4e0b\u7a0b\u5e8f\u904d\u5386 dump \u51fa\u7684 versions \u6587\u4ef6\u7684\u5185\u5bb9\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <unistd.h>\n#include <sys/types.h>\n#include <sys/stat.h>\n#include <fcntl.h>\n\n#define MAX_PARAM_PREFIX_LEN (64 - sizeof(unsigned long))\n#define MODULE_NAME_LEN MAX_PARAM_PREFIX_LEN\n\nstruct modversion_info {\n    unsigned long crc;\n    char name[MODULE_NAME_LEN];\n};\n\nint main(int argc, char *argv[])\n{\n    int fd = open(argv[1], O_RDWR);\n    void *buff = NULL;\n\n    if (fd < 0) {\n        printf("open %s failed\\n", argv[1]);\n        exit(-1);\n    }\n    \n    if ((buff = malloc(sizeof(struct modversion_info))) == NULL) {\n        printf("malloc failed\\n");\n        exit(-1);\n    }\n\n    memset(buff, 0x00, sizeof(buff));\n    \n    while (read(fd, buff, sizeof(struct modversion_info))) {\n        struct modversion_info *info =  (struct modversion_info *)buff;\n        printf("0x%x\\t%s\\n", info->crc, info->name);\n    }\n\n    free(buff);\n    close(fd);\n    \n    return 0;\n}\n')),(0,l.kt)("p",null,"\u8fd9\u91cc\u4f7f\u7528 ",(0,l.kt)("strong",{parentName:"p"},"hexedit")," \u6765\u4fee\u6539 versions \u6587\u4ef6\uff0c\u5176\u5b9e\u53ef\u4ee5\u4ece modpost \u62f7\u8d1d\u4ee3\u7801\uff0c\u8bfb\n\u5165\u65b0\u7684 Module.symvers \u5efa\u7acb\u54c8\u5e0c\u8868\uff0c\u5728\u8bfb\u7684\u8fc7\u7a0b\u4e2d\u76f4\u63a5\u5339\u914d\uff0c\u5e76\u4fee\u6539\uff0c\u7136\u540e\u5199\n\u5165\u5230\u6587\u4ef6\u4e2d\u3002"),(0,l.kt)("p",null,"\u4e5f\u53ef\u4ee5\u4f7f\u7528 vim \u6765\u76f4\u63a5\u4fee\u6539 versions \u6587\u4ef6\uff0c\u8fc7\u7a0b\u5982\u4e0b\uff1a"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"vim -b versions \u6253\u5f00\u6587\u4ef6"),(0,l.kt)("li",{parentName:"ol"},":%!xxd dump \u5341\u516d\u8fdb\u5236"),(0,l.kt)("li",{parentName:"ol"},"\u4fee\u6539\u5185\u5bb9"),(0,l.kt)("li",{parentName:"ol"},":%!xxd -r \u8f6c\u6362\u683c\u5f0f"),(0,l.kt)("li",{parentName:"ol"},"\uff1awq \u4fdd\u5b58\u5e76\u9000\u51fa")),(0,l.kt)("p",null,"\u8fd9\u91cc\u6211\u5fc5\u987b\u5410\u69fd\u4e00\u4e0b\uff0c\u6700\u5f00\u59cb\u6211\u4f7f\u7528\u7684\u65f6\u5019\u641c\u5230\u4e86\u4e00\u7bc7\u535a\u5ba2\uff0c\u53ea\u63cf\u8ff0\u4e86\u4f7f\u7528\n:%!xxd \u8fd9\u4e2a\u547d\u4ee4\uff0c\u6253\u5f00\u4e0e\u8f6c\u6362\u56de\u53bb\u7684\u683c\u5f0f\u90fd\u6ca1\u6709\u63cf\u8ff0\uff0c\u6211\u4ee5\u4e3a\u4e0e\u6807\u51c6\u7684\u683c\u5f0f\u4e00\n\u6837\uff0c\u7ed3\u679c\u53d1\u73b0\u76f4\u63a5\u4fdd\u5b58\u540e\u5185\u5bb9\u5df2\u7ecf\u53d8\u4e86\uff0c\u7528 objcopy \u66f4\u65b0\u56de\u53bb\u540e modprobe \u65e0\n\u6cd5\u8bc6\u522b\uff01"),(0,l.kt)("p",null,"\u4e0a\u4e00\u6b21\u7528 vim \u76f4\u63a5\u7f16\u8f91 interp section \u6587\u4ef6\uff0cvim \u4f5c\u4e3a\u666e\u901a\u6587\u672c\u6253\u5f00\uff0c\u5728\u6587\u4ef6\n\u540e\u8ffd\u52a0\u4e86\u4e2a\u884c\u53f7\uff0c\u5bfc\u81f4 elf \u683c\u5f0f\u4e0d\u53ef\u7528\uff0c\u4eca\u5929\u53c8\u88ab\u5751\u4e86\u4e00\u6b21\uff0c",(0,l.kt)("strong",{parentName:"p"},"\u770b\u6765\u6211\u8fd8\u662f\u5e94\u8be5\n\u5c11\u770b\u70b9\u535a\u5ba2\uff0c\u5199\u535a\u5ba2\u8981\u8fdc\u80dc\u4e8e\u8bfb\u535a\u5ba2\uff0c\u5b66\u4e60\u5e94\u8be5\u901a\u8fc7\u9605\u8bfb\u4e00\u624b\u8d44\u6599\uff0c\u800c\u4e0d\u662f\u9605\u8bfb\n\u535a\u5ba2\uff01")),(0,l.kt)("h2",{id:"\u4e0a\u8ff0\u65b9\u6848\u80cc\u540e\u7684\u539f\u7406"},"\u4e0a\u8ff0\u65b9\u6848\u80cc\u540e\u7684\u539f\u7406"),(0,l.kt)("p",null,"\u4e0a\u9762\u7684\u65b9\u6848\u5176\u5b9e\u4e5f\u4f53\u73b0\u4e86 modversion \u80cc\u540e\u7684\u4e00\u4e9b\u539f\u7406\uff0c\u8fd9\u91cc\u6211\u9488\u5bf9\u4e0a\u9762\u7684\n\u65b9\u6848\u63d0\u51fa\u5982\u4e0b\u51e0\u4e2a\u95ee\u9898\uff1a"),(0,l.kt)("h3",{id:"1-\u4e3a\u4ec0\u4e48\u8981\u91cd\u547d\u540d-tmp_versions-\u76ee\u5f55\u4e2d\u7684-mod-\u540e\u7f00\u7684\u6587\u4ef6"},"1. \u4e3a\u4ec0\u4e48\u8981\u91cd\u547d\u540d .tmp_versions \u76ee\u5f55\u4e2d\u7684 .mod \u540e\u7f00\u7684\u6587\u4ef6\uff1f"),(0,l.kt)("p",null,"make V=1 \u8f93\u51fa\u7f16\u8bd1\u547d\u4ee4\u4f1a\u53d1\u73b0 modpost \u4f1a\u4f7f\u7528 .tmp_versions \u76ee\u5f55\u4e2d\u7684\u540e\u7f00\n\u540d\u4e3a .mod \u7684\u6587\u4ef6\u5236\u4f5c\u53c2\u6570\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"  find .tmp_versions -name '*.mod' | xargs -r grep -h '\\.ko$' | sort -u | sed 's/\\.ko$/.o/' | scripts/mod/modpost -m  -o ./Module.symvers    -S    -s -T -\n")),(0,l.kt)("p",null,"\u4e0a\u9762\u7684\u547d\u4ee4\u884c\u5c06\u4f1a\u641c\u7d22 .tmp_versions \u76ee\u5f55\u4e2d\u7684\u540e\u7f00\u540d\u4e3a .mod \u7684\u6587\u4ef6\u7684\u5185\u5bb9\n\u4e2d\u6709 .ko \u7684\u9879\u76ee\uff0c\u6392\u5e8f\u540e\u5c06 .ko \u66ff\u6362\u4e3a .o \u540e\u5c06\u53c2\u6570\u4f20\u7ed9 modpost \u547d\u4ee4\uff1a"),(0,l.kt)("p",null,"xx.mod \u6587\u4ef6\u7684\u4e00\u4e2a\u793a\u4f8b\u4fe1\u606f\u5982\u4e0b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"[longyu@debian-10:14:23:32] linux.git $ cat ./.tmp_versions/e1000.mod \ndrivers/net/ethernet/intel/e1000/e1000.ko\ndrivers/net/ethernet/intel/e1000/e1000_main.o drivers/net/ethernet/intel/e1000/e1000_hw.o drivers/net/ethernet/intel/e1000/e1000_ethtool.o drivers/net/ethernet/intel/e1000/e1000_param.o\n")),(0,l.kt)("p",null,"\u8fd9\u91cc\u6bcf\u4e2a\u4f1a\u88ab\u7f16\u8bd1\u7684\u5185\u6838\u6a21\u5757\u90fd\u4f1a\u5728 .tmp_version \u76ee\u5f55\u4e2d\u751f\u6210\u4e00\u4e2a .mod \u6587\u4ef6\uff0c\n\u8fd9\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\u8bf4\u660e\u4e86 xx.ko \u4f9d\u8d56\u7684 .o\u3002\u6a21\u5757\u7f16\u8bd1\u65f6\u6700\u7ec8\u4f1a\u9996\u5148\u751f\u6210\u4e00\u4e2a\nmodname.o \u6587\u4ef6\uff0c\u901a\u8fc7\u94fe\u63a5\u8fd9\u4e2a\u6587\u4ef6\u6765\u751f\u6210 xx.ko\u3002"),(0,l.kt)("p",null,"\u5982\u679c\u6211\u4eec\u4e0d\u91cd\u547d\u540d .tmp_version \u4e0b\u7684 xx.mod \u6587\u4ef6\uff0c\u4e0a\u8ff0\u547d\u4ee4\u884c\u4f1a\u626b\u5230\u5176\u4e2d\u7684\n.mod \u6587\u4ef6\u5e76\u5236\u4f5c modname.o \u4f20\u9012\u7ed9 modpost \u7a0b\u5e8f\uff0cmodpost \u7a0b\u5e8f\u901a\u8fc7\u8bfb\u53d6\u8fd9\n\u4e9b .o \u6587\u4ef6\u66f4\u65b0\u5bfc\u51fa\u7b26\u53f7\u7684 crc \u503c\uff0c\u8fd9\u6837 Module.symvers \u6587\u4ef6\u4e2d\u7684\u5185\u5bb9\u5c31\u4e0d\n\u4f1a\u751f\u6548\u3002"),(0,l.kt)("h3",{id:"2-\u4e3a\u4ec0\u4e48\u8981\u91cd\u547d\u540d-vmlinux"},"2. \u4e3a\u4ec0\u4e48\u8981\u91cd\u547d\u540d vmlinux"),(0,l.kt)("p",null,"script/Makefile.modpost \u6587\u4ef6\u4e2d\u6709\u5982\u4e0b\u5185\u5bb9\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-Makfile"}," 86 # We can go over command line length here, so be careful.\n 87 quiet_cmd_modpost = MODPOST $(words $(filter-out vmlinux FORCE, $^)) modules\n 88       cmd_modpost = $(MODLISTCMD) | sed 's/\\.ko$$/.o/' | $(modpost) $(MODPOST_OPT) -s -T -\n 89 \n 90 PHONY += __modpost\n 91 __modpost: $(modules:.ko=.o) FORCE\n 92     $(call cmd,modpost) $(wildcard vmlinux)\n")),(0,l.kt)("p",null,"\u8fd9\u4e2a Makefile \u811a\u672c\u5185\u5bb9\u63cf\u8ff0\u4e86 modpost \u7684\u8c03\u7528\u8fc7\u7a0b\uff0c\u5b83\u989d\u5916\u4f20\u9012\u4e86 vmlinux\n\u53c2\u6570\u7ed9 modpost\uff0c\u5e76\u4e14\u53ea\u6709\u5f53 vmlinux \u5b58\u5728\u7684\u65f6\u5019\u624d\u4f1a\u4f20\u9012\u7ed9 modpost \u7a0b\u5e8f\u3002"),(0,l.kt)("p",null,"\u5982\u679c\u6211\u4eec\u4e0d\u91cd\u547d\u540d vmlinux\uff0c\u90a3\u4e48 modpost \u5c06\u4f1a\u88ab\u4f20\u5165 vmlinux \u53c2\u6570\uff0c\u5b83\u4f1a\u89e3\n\u6790\u8fd9\u4e2a elf \u6587\u4ef6\uff0c\u521b\u5efa\u7b26\u53f7\u8868\u3001\u66f4\u65b0\u5df2\u7ecf\u5b58\u5728\u7b26\u53f7\u7684 crc \u503c\uff0c\u8fd9\u6837\u6700\u7ec8\u751f\u6210\u7684\ncrc \u503c\u5c06\u4f1a\u662f vmlinux \u6587\u4ef6\u4e2d\u7684\u503c\u800c\u4e0d\u662f Module.symvers \u6587\u4ef6\u4e2d\u4fee\u6539\u7684\u503c\u3002"),(0,l.kt)("h3",{id:"3-\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528-make--c-\u8fd9\u79cd\u5916\u90e8\u6a21\u5757\u7f16\u8bd1\u65b9\u6cd5\u8fdb\u884c\u7f16\u8bd1\u5462"},"3. \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528 make -C \u8fd9\u79cd\u5916\u90e8\u6a21\u5757\u7f16\u8bd1\u65b9\u6cd5\u8fdb\u884c\u7f16\u8bd1\u5462\uff1f"),(0,l.kt)("p",null,"make drivers/xxx/xxx.ko \u65f6\u7684\u547d\u4ee4\u884c\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"  find .tmp_versions -name '*.mod' | xargs -r grep -h '\\.ko$' | sort -u | sed 's/\\.ko$/.o/' | scripts/mod/modpost -m  -o ./Module.symvers    -S    -s -T -\n")),(0,l.kt)("p",null,"make -C drivers/xxx/xxx.ko \u65f6\u7684\u547d\u4ee4\u884c\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"  find /home/longyu/linux.git/drivers/net/ethernet/intel/e1000/.tmp_versions -name '*.mod' | xargs -r grep -h '\\.ko$' | sort -u | sed 's/\\.ko$/.o/' | scripts/mod/modpost -m  -i ./Module.symvers -I /home/longyu/linux.git/drivers/net/ethernet/intel/e1000/Module.symvers  -o /home/longyu/linux.git/drivers/net/ethernet/intel/e1000/Module.symvers -S  -w  -s -T -\n")),(0,l.kt)("p",null,"\u8fd9\u4e24\u79cd\u4e0d\u540c\u7684\u7f16\u8bd1\u65b9\u5f0f\u4e2d\u4f20\u9012\u7ed9 modpost \u7684\u547d\u4ee4\u884c\u662f\u4e0d\u540c\u7684\uff0c\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e0b\u4f1a\n\u4f7f\u7528 ",(0,l.kt)("strong",{parentName:"p"},"-i ./Module.symvers")," \u6307\u5b9a modpost \u4ece",(0,l.kt)("strong",{parentName:"p"},"\u5185\u6838\u6e90\u7801\u6811\u6839\u76ee\u5f55\u7684\nModule.symvers \u6587\u4ef6\u4e2d\u83b7\u53d6\u4fe1\u606f"),"\uff0c\u6b64\u65f6\u7531\u4e8e\u6211\u4eec\u4e5f\u91cd\u547d\u540d\u4e86\nvmlinux\uff0c.tmp_version \u4e2d\u7684 xx.mod \u6587\u4ef6\uff0c\u5b83\u7684\u8f93\u5165\u53ea\u5269\u4e0b Module.symvers\n\u6587\u4ef6\uff0c\u6700\u7ec8\u8f93\u51fa\u4f7f\u7528\u7684 crc \u503c\u5c31\u662f\u8fd9\u4e2a Module.symvers \u6587\u4ef6\u4e2d\u7684\u503c\u3002"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u5176\u5b9e make -C \u7684\u65f6\u5019\u53ea\u4f1a\u904d\u5386\u7f16\u8bd1\u6a21\u5757\u6e90\u7801\u6839\u6728\u5f55\u4e2d\u7684 .tmp_versions \u4e0b\u7684\nxx.mod \u6587\u4ef6\u5185\u5bb9\uff0c\u800c mak drivers/xx.ko \u5219\u4f1a\u904d\u5386\u5185\u6838\u6e90\u7801\u6839\u76ee\u5f55\u4e2d\u7684\n.tmp_versions \u76ee\u5f55\u4e2d\u7684 xx.mod \u6587\u4ef6\u5185\u5bb9\u3002")),(0,l.kt)("p",null,"\u7b2c\u4e00\u79cd\u60c5\u51b5\u4e0d\u4f1a\u4ece Module.symvers \u6587\u4ef6\u4e2d\u83b7\u53d6\u4fe1\u606f\uff0c\u56e0\u6b64\u5b83\u5c06\u4e0d\u4f1a\u751f\u6210\nmodversion \u8868\u3002"),(0,l.kt)("p",null,"script/Makefile.modpost \u6587\u4ef6\u4e2d\u7684\u76f8\u5173\u5185\u5bb9\u5982\u4e0b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-Makefile"}," 60 kernelsymfile := $(objtree)/Module.symvers\n 61 modulesymfile := $(firstword $(KBUILD_EXTMOD))/Module.symvers\n 62 \n 63 # Step 1), find all modules listed in $(MODVERDIR)/\n 64 MODLISTCMD := find $(MODVERDIR) -name '*.mod' | xargs -r grep -h '\\.ko$$' | sort -u\n 65 __modules := $(shell $(MODLISTCMD))\n 66 modules   := $(patsubst %.o,%.ko, $(wildcard $(__modules:.ko=.o)))\n 67 \n 68 # Stop after building .o files if NOFINAL is set. Makes compile tests quicker\n 69 _modpost: $(if $(KBUILD_MODPOST_NOFINAL), $(modules:.ko:.o),$(modules))\n 70 \n 71 # Step 2), invoke modpost\n 72 #  Includes step 3,4\n 73 modpost = scripts/mod/modpost                    \\\n 74  $(if $(CONFIG_MODVERSIONS),-m)                  \\\n 75  $(if $(CONFIG_MODULE_SRCVERSION_ALL),-a,)       \\\n 76  $(if $(KBUILD_EXTMOD),-i,-o) $(kernelsymfile)   \\\n 77  $(if $(KBUILD_EXTMOD),-I $(modulesymfile))      \\\n 78  $(if $(KBUILD_EXTRA_SYMBOLS), $(patsubst %, -e %,$(KBUILD_EXTRA_SYMBOLS))) \\\n 79  $(if $(KBUILD_EXTMOD),-o $(modulesymfile))      \\\n 80  $(if $(CONFIG_DEBUG_SECTION_MISMATCH),,-S)      \\\n 81  $(if $(CONFIG_SECTION_MISMATCH_WARN_ONLY),,-E)  \\\n 82  $(if $(KBUILD_EXTMOD)$(KBUILD_MODPOST_WARN),-w)\n")),(0,l.kt)("p",null,"\u8fd9\u91cc\u7b2c\u4e8c\u79cd\u7f16\u8bd1\u65b9\u5f0f\u4e0b\u4f1a\u8bbe\u5b9a ",(0,l.kt)("strong",{parentName:"p"},"KBUILD_EXTMOD")," \u53d8\u91cf\uff0c\u6839\u636e\u4e0a\u9762\u7684\u6761\u4ef6\u5224\u65ad\uff0c\u5f53\n\u8bbe\u5b9a\u4e86\u8fd9\u4e2a\u53d8\u91cf\u540e\u8c03\u7528 modpost \u7684\u53c2\u6570\u4f1a\u589e\u52a0\u597d\u51e0\u4e2a\u3002"),(0,l.kt)("h3",{id:"4-modpost-\u547d\u4ee4\u5230\u5e95\u5728\u73a9\u4e9b\u4ec0\u4e48"},"4. modpost \u547d\u4ee4\u5230\u5e95\u5728\u73a9\u4e9b\u4ec0\u4e48\uff1f"),(0,l.kt)("p",null,"modpost \u5176\u5b9e\u4e3b\u8981\u88ab\u4e8e\u751f\u6210 Module.symvers \u6587\u4ef6\u4e0e xx.mod.c \u6587\u4ef6\uff0c\u5b83\u7684\u5177\u4f53\n\u6d41\u7a0b\u6d89\u53ca\u5bf9 elf \u683c\u5f0f\u7684\u89e3\u6790\uff0c\u9700\u8981\u5bf9 elf \u57fa\u7840\u77e5\u8bc6\u6709\u6240\u4e86\u89e3\u3002"),(0,l.kt)("p",null,"\u6211\u9605\u8bfb\u4ee3\u7801\u7684\u8fc7\u7a0b\u4e2d\u60f3\u5230\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"modpost \u600e\u4e48\u786e\u5b9a\u54ea\u4e2a\u7b26\u53f7\u9700\u8981\u751f\u6210 crc \u7801\uff1f")),(0,l.kt)("p",null,"\u6211\u4eec\u77e5\u9053\u4e00\u4e2a\u53ef\u91cd\u5b9a\u4f4d\u76ee\u6807\u6587\u4ef6\u4e2d\u4f1a\u6709\u5f88\u591a\u7b26\u53f7\uff0c\u8bf8\u5982\u51fd\u6570\u3001\u53d8\u91cf\u7b26\u53f7\u7b49\u7b49\uff0c\u6709\n\u672c\u5730\u7684\u4e5f\u6709\u5168\u5c40\u7684\u3002",(0,l.kt)("strong",{parentName:"p"},"\u5bf9\u4e00\u4e2a\u6a21\u5757\u800c\u8a00\uff0c\u5b83\u6240\u6709\u672a\u5b9a\u4e49\u7684\u7b26\u53f7\u90fd\u88ab\u5224\u5b9a\u4e3a\u4f9d\u8d56\u7684\u5916\n\u90e8\u7b26\u53f7"),"\uff0cmodpost \u5728\u751f\u6210 modversion \u8868\u7684\u65f6\u5019\u8981\u627e\u5230\u6240\u6709\u8fd9\u4e9b\u5916\u90e8\u7b26\u53f7\u7684\ncrc \u503c\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u90a3\u4e48\u5b83\u4f1a\u62a5\u4e00\u4e2a ",(0,l.kt)("strong",{parentName:"p"},"xxx undefined! \u7684\u9519\u8bef"),"\u3002"),(0,l.kt)("p",null,"modpost \u5b9e\u9645\u4e0a\u662f\u901a\u8fc7\u904d\u5386 ",(0,l.kt)("strong",{parentName:"p"},"symtab section")," \u4e2d\u7684\u6bcf\u4e00\u4e2a\u7b26\u53f7\u7684 ",(0,l.kt)("strong",{parentName:"p"},"st_shndx")," \u5b57\u6bb5\u6765\u5224\u65ad\u662f\u5426\u9700\n\u8981\u751f\u6210 crc \u7801\uff0cst_shndex \u4e3a ",(0,l.kt)("strong",{parentName:"p"},"SHN_UNDEF")," \u7684\u5408\u6cd5\u7b26\u53f7\u5c31\u662f\u8981\u751f\u6210 crc \u7801\u7684\u7b26\u53f7\u3002"),(0,l.kt)("p",null,"modpost \u901a\u8fc7\u5982\u4e0b\u4ee3\u7801\u5c06\u4e00\u4e2a\u9700\u8981\u751f\u6210 crc \u7801\u7684\u7b26\u53f7\u94fe\u5165\u5f53\u524d\u5904\u7406\u7684\u6a21\u5757\u7684\nunres \u7b26\u53f7\u94fe\u8868\u4e2d\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"        mod->unres = alloc_symbol(symname,\n                      ELF_ST_BIND(sym->st_info) == STB_WEAK,\n                      mod->unres);\n")),(0,l.kt)("p",null,"\u4ece elf \u89e3\u6790\u5230\u7684\u4ee5 ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"__crc_"))," \u5f00\u59cb\u7684\u7b26\u53f7\uff0cmodpost \u5c06\u4f1a\u4f7f\u7528\u8fd9\u4e2a\u7b26\u53f7\u7684\u503c\u6765\u66f4\n\u65b0\u7b26\u53f7\u7684 crc \u503c\u3002"),(0,l.kt)("p",null,"\u76f8\u5173\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},'    /* CRC\'d symbol */\n    if (strstarts(symname, "__crc_")) {\n        is_crc = true;\n        printf("%s\\n", symname);\n        crc = (unsigned int) sym->st_value;\n        if (sym->st_shndx != SHN_UNDEF && sym->st_shndx != SHN_ABS) {\n            unsigned int *crcp;\n\n            /* symbol points to the CRC in the ELF object */\n            crcp = (void *)info->hdr + sym->st_value +\n                   info->sechdrs[sym->st_shndx].sh_offset -\n                   (info->hdr->e_type != ET_REL ?\n                info->sechdrs[sym->st_shndx].sh_addr : 0);\n            crc = *crcp;\n        }\n        sym_update_crc(symname + strlen("__crc_"), mod, crc,\n                export);\n    }\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"__crc_symname")," \u662f\u7531 EXPORT_SYMBOL \u7c7b\u7684\u5b8f\u5b9a\u4e49\u7684\uff0c\u5176\u4e2d\u7684 crc \u503c\u662f\u7531\n",(0,l.kt)("strong",{parentName:"p"},"genksym")," \u547d\u4ee4\u751f\u6210\u7684\u3002"),(0,l.kt)("p",null,"\u5176\u5b83\u7684\u7ec6\u8282\u8fc7\u7a0b\u6211\u5c31\u4e0d\u8fdb\u4e00\u6b65\u63cf\u8ff0\u4e86\u3002"),(0,l.kt)("h2",{id:"\u603b\u7ed3"},"\u603b\u7ed3"),(0,l.kt)("p",null,"\u4e0e\u5176\u4e00\u6b65\u6b65\u7684\u5c1d\u8bd5\uff0c\u4e0d\u5982\u76f4\u63a5\u9605\u8bfb\u6e90\u4ee3\u7801\u3002\u4e00\u4e9b\u95ee\u9898\u7684\u7b54\u6848\u4e5f\u53ea\u6709\u901a\u8fc7\u6e90\n\u7801\u6765\u5bfb\u627e\uff0c\u5e94\u8be5\u517b\u6210\u8fd9\u6837\u7684\u4e60\u60ef\u3002"),(0,l.kt)("p",null,"\u62ff\u8fd9\u91cc\u7684\u4f8b\u5b50\u6765\u8bf4\uff0c\u5176\u5b9e modpost \u5de5\u5177\u7684\u4ee3\u7801\u4e5f\u6ca1\u6709\u592a\u591a\uff0c\u4e5f\u6ca1\u6709\u592a\u590d\u6742\uff0c\n\u5b8c\u5168\u80fd\u591f\u8bfb\u61c2\u7684\uff0c\u770b\u6765\u6211\u8fd8\u662f\u6ca1\u6709\u517b\u6210\u9605\u8bfb\u4ee3\u7801\u7684\u4e60\u60ef\uff01"))}c.isMDXComponent=!0}}]);