"use strict";(self.webpackChunklongyu_website=self.webpackChunklongyu_website||[]).push([[1113],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return k}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function d(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=r.createContext({}),u=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},l=function(e){var n=u(e.components);return r.createElement(p.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},s=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,l=d(e,["components","mdxType","originalType","parentName"]),s=u(t),k=i,f=s["".concat(p,".").concat(k)]||s[k]||c[k]||o;return t?r.createElement(f,a(a({ref:n},l),{},{components:t})):r.createElement(f,a({ref:n},l))}));function k(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=s;var d={};for(var p in n)hasOwnProperty.call(n,p)&&(d[p]=n[p]);d.originalType=e,d.mdxType="string"==typeof e?e:i,a[1]=d;for(var u=2;u<o;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}s.displayName="MDXCreateElement"},8221:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return p},default:function(){return k},frontMatter:function(){return d},metadata:function(){return u},toc:function(){return c}});var r=t(7462),i=t(3366),o=(t(7294),t(3905)),a=["components"],d={},p="Eal:Error reading from file descriptor 33",u={unversionedId:"\u6280\u672f\u535a\u5ba2/dpdk/dpdk \u95ee\u9898\u6848\u4f8b/\u7a0b\u5e8f\u521d\u59cb\u5316\u95ee\u9898/dpdk 82545EM uio \u4e2d\u65ad\u76d1\u542c\u95ee\u9898",id:"\u6280\u672f\u535a\u5ba2/dpdk/dpdk \u95ee\u9898\u6848\u4f8b/\u7a0b\u5e8f\u521d\u59cb\u5316\u95ee\u9898/dpdk 82545EM uio \u4e2d\u65ad\u76d1\u542c\u95ee\u9898",title:"Eal:Error reading from file descriptor 33",description:"\u95ee\u9898\u63cf\u8ff0",source:"@site/docs/\u6280\u672f\u535a\u5ba2/dpdk/dpdk \u95ee\u9898\u6848\u4f8b/\u7a0b\u5e8f\u521d\u59cb\u5316\u95ee\u9898/dpdk 82545EM uio \u4e2d\u65ad\u76d1\u542c\u95ee\u9898.md",sourceDirName:"\u6280\u672f\u535a\u5ba2/dpdk/dpdk \u95ee\u9898\u6848\u4f8b/\u7a0b\u5e8f\u521d\u59cb\u5316\u95ee\u9898",slug:"/\u6280\u672f\u535a\u5ba2/dpdk/dpdk \u95ee\u9898\u6848\u4f8b/\u7a0b\u5e8f\u521d\u59cb\u5316\u95ee\u9898/dpdk 82545EM uio \u4e2d\u65ad\u76d1\u542c\u95ee\u9898",permalink:"/longyu.github.io/\u6280\u672f\u535a\u5ba2/dpdk/dpdk \u95ee\u9898\u6848\u4f8b/\u7a0b\u5e8f\u521d\u59cb\u5316\u95ee\u9898/dpdk 82545EM uio \u4e2d\u65ad\u76d1\u542c\u95ee\u9898",draft:!1,editUrl:"https://github.com/longyuwlz/longyu.github.io/docs/\u6280\u672f\u535a\u5ba2/dpdk/dpdk \u95ee\u9898\u6848\u4f8b/\u7a0b\u5e8f\u521d\u59cb\u5316\u95ee\u9898/dpdk 82545EM uio \u4e2d\u65ad\u76d1\u542c\u95ee\u9898.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Failed to mmap 2MB hugepages \u4e0e max_map_count limit",permalink:"/longyu.github.io/\u6280\u672f\u535a\u5ba2/dpdk/dpdk \u95ee\u9898\u6848\u4f8b/\u7a0b\u5e8f\u521d\u59cb\u5316\u95ee\u9898/Failed to mmap 2MB hugepages \u4e0e max_map_count limit"},next:{title:"dpdk \u5e38\u89c1\u95ee\u9898\uff1auio \u8bbe\u5907\u6587\u4ef6\u521b\u5efa\u4ee5\u53ca iommu \u5bfc\u81f4 x710 \u7f51\u5361\u521d\u59cb\u5316\u5931\u8d25\u95ee\u9898",permalink:"/longyu.github.io/\u6280\u672f\u535a\u5ba2/dpdk/dpdk \u95ee\u9898\u6848\u4f8b/\u7a0b\u5e8f\u521d\u59cb\u5316\u95ee\u9898/dpdk \u5e38\u89c1\u95ee\u9898\uff1auio \u8bbe\u5907\u6587\u4ef6\u521b\u5efa\u4ee5\u53ca iommu \u5bfc\u81f4 x710 \u7f51\u5361\u521d\u59cb\u5316\u5931\u8d25\u95ee\u9898"}},l={},c=[{value:"\u95ee\u9898\u63cf\u8ff0",id:"\u95ee\u9898\u63cf\u8ff0",level:2},{value:"\u95ee\u9898\u5206\u6790",id:"\u95ee\u9898\u5206\u6790",level:2},{value:"1. dpdk \u5185\u90e8\u4ee3\u7801",id:"1-dpdk-\u5185\u90e8\u4ee3\u7801",level:3},{value:"2. uio \u6a21\u5757\u4e2d\u7684\u4ee3\u7801",id:"2-uio-\u6a21\u5757\u4e2d\u7684\u4ee3\u7801",level:3},{value:"3. igb_uio.c \u4e2d\u521d\u59cb\u5316 uio_info \u7ed3\u6784\u4e2d irq \u5b57\u6bb5\u7684\u4f4d\u7f6e",id:"3-igb_uioc-\u4e2d\u521d\u59cb\u5316-uio_info-\u7ed3\u6784\u4e2d-irq-\u5b57\u6bb5\u7684\u4f4d\u7f6e",level:3},{value:"\u89e3\u51b3\u65b9\u6cd5",id:"\u89e3\u51b3\u65b9\u6cd5",level:2}],s={toc:c};function k(e){var n=e.components,t=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"ealerror-reading-from-file-descriptor-33"},"Eal:Error reading from file descriptor 33"),(0,o.kt)("h2",{id:"\u95ee\u9898\u63cf\u8ff0"},"\u95ee\u9898\u63cf\u8ff0"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"VMWARE")," \u865a\u673a\u4e2d\uff0c",(0,o.kt)("strong",{parentName:"p"},"82545EM")," \u865a\u62df\u7f51\u5361\u7ed1\u5b9a ",(0,o.kt)("strong",{parentName:"p"},"igb_uio")," \u540e\uff0c\u8fd0\u884c dpdk \u7a0b\u5e8f\uff0cdpdk \u7a0b\u5e8f\u4e00\u76f4\u6709\u5982\u4e0b\u62a5\u8b66\u4fe1\u606f\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"Eal:Error reading from file descriptor 33: Input/output error\n")),(0,o.kt)("p",null,"\u4f7f\u7528\u7684 dpdk \u7248\u672c\u4e3a ",(0,o.kt)("strong",{parentName:"p"},"16.04"),"\uff0c\u7a0b\u5e8f\u4e3a l2fwd\u3002"),(0,o.kt)("h2",{id:"\u95ee\u9898\u5206\u6790"},"\u95ee\u9898\u5206\u6790"),(0,o.kt)("h3",{id:"1-dpdk-\u5185\u90e8\u4ee3\u7801"},"1. dpdk \u5185\u90e8\u4ee3\u7801"),(0,o.kt)("p",null,"\u4e0e\u62a5\u9519\u76f8\u5173\u7684\u4ee3\u7801\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},'                        bytes_read = read(events[n].data.fd, &buf, bytes_read);\n                        if (bytes_read < 0) {\n                                if (errno == EINTR || errno == EWOULDBLOCK)\n                                        continue;\n\n                                RTE_LOG(ERR, EAL, "Error reading from file "\n                                        "descriptor %d: %s\\n",\n                                        events[n].data.fd,\n                                        strerror(errno));\n')),(0,o.kt)("p",null,"strerror \u6253\u5370\u7684\u7ed3\u679c\u4e3a Input/output error\uff0c\u67e5\u8be2",(0,o.kt)("strong",{parentName:"p"},"\u6807\u51c6\u9519\u8bef\u503c\u8868"),"\uff0c\u76f8\u5173\u8fd4\u56de\u503c\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},"#define EIO              5      /* I/O error */\n")),(0,o.kt)("p",null,"\u8868\u660e\u95ee\u9898\u4e3a\u4ece uio \u6587\u4ef6\u8bfb\u53d6\u65f6\u8fd4\u56de\u4e86 EIO \u9519\u8bef\u503c\uff0c\u90a3\u4e48\u95ee\u9898\u6765\u4e86 ",(0,o.kt)("strong",{parentName:"p"},"EIO \u8fd9\u4e2a\u8fd4\u56de\u503c\u662f\u4ece\u54ea\u91cc\u8fd4\u56de\u7684\u5462\uff1f")),(0,o.kt)("h3",{id:"2-uio-\u6a21\u5757\u4e2d\u7684\u4ee3\u7801"},"2. uio \u6a21\u5757\u4e2d\u7684\u4ee3\u7801"),(0,o.kt)("p",null,"uio \u6a21\u5757\u4e2d\u5bf9 uio \u6587\u4ef6\u6ce8\u518c\u7684 read \u56de\u8c03\u51fd\u6570\u90e8\u5206\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"static ssize_t uio_read(struct file *filep, char __user *buf,\n                        size_t count, loff_t *ppos)\n{\n        struct uio_listener *listener = filep->private_data;\n        struct uio_device *idev = listener->dev;\n        DECLARE_WAITQUEUE(wait, current);\n        ssize_t retval;\n        s32 event_count;\n\n        if (!idev->info->irq)\n                return -EIO;\n")),(0,o.kt)("p",null,"\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7684 ",(0,o.kt)("strong",{parentName:"p"},"uio_read")," \u5c31\u662f\u8bfb\u53d6 /dev/uioX \u6587\u4ef6\u65f6\u5185\u6838\u4e2d\u6700\u7ec8\u8c03\u7528\u5230\u7684\u51fd\u6570\u3002\u4ece\u4e0a\u9762\u7684\u51fd\u6570\u903b\u8f91\u53ef\u4ee5\u770b\u51fa\uff0c\u5f53 ",(0,o.kt)("strong",{parentName:"p"},"idev->info->irq")," \u7684\u503c\u4e3a 0 \u65f6\u5c31\u4f1a\u8fd4\u56de ",(0,o.kt)("strong",{parentName:"p"},"-EIO")," \u9519\u8bef\u3002"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u90a3\u4e48 idev->info->irq \u662f\u5728\u54ea\u91cc\u521d\u59cb\u5316\u7684\u5462\uff1f")),(0,o.kt)("p",null,"\u7814\u7a76\u786e\u5b9a\u5b83\u5728 igb_uio.c \u4e2d\u88ab\u521d\u59cb\u5316\u3002"),(0,o.kt)("h3",{id:"3-igb_uioc-\u4e2d\u521d\u59cb\u5316-uio_info-\u7ed3\u6784\u4e2d-irq-\u5b57\u6bb5\u7684\u4f4d\u7f6e"},"3. igb_uio.c \u4e2d\u521d\u59cb\u5316 uio_info \u7ed3\u6784\u4e2d irq \u5b57\u6bb5\u7684\u4f4d\u7f6e"),(0,o.kt)("p",null,"\u76f8\u5173\u4ee3\u7801\u5982\u4e0b\uff1a "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},'switch (igbuio_intr_mode_preferred) {\n        case RTE_INTR_MODE_MSIX:\n                /* Only 1 msi-x vector needed */\n                msix_entry.entry = 0;\n                if (pci_enable_msix(dev, &msix_entry, 1) == 0) {\n                        dev_dbg(&dev->dev, "using MSI-X");\n                        udev->info.irq = msix_entry.vector;\n                        udev->mode = RTE_INTR_MODE_MSIX;\n                        break;\n                }\n                /* fall back to INTX */\n        case RTE_INTR_MODE_LEGACY:\n                if (pci_intx_mask_supported(dev)) {\n                        dev_dbg(&dev->dev, "using INTX");\n                        udev->info.irq_flags = IRQF_SHARED;\n                        udev->info.irq = dev->irq;\n                        udev->mode = RTE_INTR_MODE_LEGACY;\n                        break;\n                }\n                dev_notice(&dev->dev, "PCI INTX mask not supported\\n");\n                /* fall back to no IRQ */\n        case RTE_INTR_MODE_NONE:\n                udev->mode = RTE_INTR_MODE_NONE;\n                udev->info.irq = 0;\n                break;\n\n        default:\n                dev_err(&dev->dev, "invalid IRQ mode %u",\n                        igbuio_intr_mode_preferred);\n                err = -EINVAL;\n                goto fail_release_iomem;\n        }\n')),(0,o.kt)("p",null,"\u4e0a\u8ff0\u6d41\u7a0b\u9996\u5148\u6839\u636e ",(0,o.kt)("strong",{parentName:"p"},"igb_uio")," \u6a21\u5757\u52a0\u8f7d\u65f6\u8bbe\u7f6e\u7684\u4e2d\u65ad\u6a21\u5f0f\u8fdb\u884c\u5339\u914d\uff0c\u9ed8\u8ba4\u503c\u4e3a ",(0,o.kt)("strong",{parentName:"p"},"RTE_INTR_MODE_MSIX"),"\uff0c\u7531\u4e8e VMWARE \u73af\u5883\u4e0b\uff0c82545EM \u7f51\u5361\u4e0d\u652f\u6301 msic \u4e0e intx \u4e2d\u65ad\uff0c\u6d41\u7a0b\u6267\u884c\u5230 ",(0,o.kt)("strong",{parentName:"p"},"RTE_INTR_MODE_NONE")," case \u4e2d\uff0cirq \u7684\u503c\u88ab\u8bbe\u7f6e\u4e3a 0\uff0c\u8fd9\u5c31\u5bfc\u81f4 ",(0,o.kt)("strong",{parentName:"p"},"dpdk \u901a\u8fc7 read \u8bfb\u53d6 uio \u6587\u4ef6\u65f6\u4e00\u76f4\u62a5\u9519"),"\u3002"),(0,o.kt)("h2",{id:"\u89e3\u51b3\u65b9\u6cd5"},"\u89e3\u51b3\u65b9\u6cd5"),(0,o.kt)("p",null,"\u5c3d\u7ba1 VMWARE \u73af\u5883\u4e0b 82545EM \u865a\u62df\u7f51\u5361\u4e0d\u652f\u6301 msix\u3001intx \u4e2d\u65ad\uff0c\u4f46\u662f dpdk \u7a0b\u5e8f\u4ecd\u7136\u80fd\u591f\u6b63\u5e38\u8fd0\u884c\uff0c\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u8bf4\u660e\u6ca1\u6709\u4f7f\u7528\u5230\u4e2d\u65ad\u90e8\u5206\u7684\u529f\u80fd\u3002"),(0,o.kt)("p",null,"\u540c\u65f6\u5206\u6790\u4ee3\u7801\u786e\u5b9a\u76f8\u5173\u7684\u53ea\u6709 lsc \u4e2d\u65ad\uff0c\u4e14\u6211\u4eec\u5e76\u672a\u5bf9 82545EM \u7f51\u5361\u4f7f\u80fd lsc \u4e2d\u65ad\u3002"),(0,o.kt)("p",null,"\u57fa\u4e8e\u8fd9\u6837\u7684\u4e8b\u5b9e\uff0c\u4fee\u6539 igb_uio \u4ee3\u7801\uff0c\u5224\u65ad\u5230\u7f51\u5361\u578b\u53f7\u4e3a 82545EM \u5219\u6267\u884c RTE_INTR_MODE_LEGACY \u4e2d\u7684\u6d41\u7a0b\u3002 "),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u6d4b\u8bd5\u786e\u5b9a\u4fee\u6539\u540e\u95ee\u9898\u5f97\u5230\u89e3\u51b3\u3002")),(0,o.kt)("p",null,"\u53e6\u5916\u4e00\u79cd\u53ef\u9009\u7684\u4fee\u6539\u65b9\u6848\u662f\u5728 dpdk pmd \u9a71\u52a8\u4e2d\u9488\u5bf9 82545EM \u7f51\u5361\u4e0d\u6ce8\u518c\u76d1\u542c uio \u4e2d\u65ad\u7684\u4e8b\u4ef6\u3002"),(0,o.kt)("p",null,"\u5177\u4f53\u7684\u4fee\u6539\u65b9\u6cd5\u5982\u4e0b\uff1a"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u5728 eth_em_dev_init \u5224\u65ad\u7f51\u5361\u578b\u53f7\uff0c\u5982\u679c\u4e3a 82545EM\uff0c\u5219\u5c06\u63a5\u53e3 pci_dev \u4e2d intr_handle \u7684 fd \u5b57\u6bb5\u8bbe\u7f6e\u4e3a -1\u3002")))}k.isMDXComponent=!0}}]);