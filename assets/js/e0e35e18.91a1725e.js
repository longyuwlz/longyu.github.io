"use strict";(self.webpackChunklongyu_website=self.webpackChunklongyu_website||[]).push([[6061],{3905:function(n,e,t){t.d(e,{Zo:function(){return p},kt:function(){return d}});var a=t(7294);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function f(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function s(n,e){if(null==n)return{};var t,a,r=function(n,e){if(null==n)return{};var t,a,r={},i=Object.keys(n);for(a=0;a<i.length;a++)t=i[a],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(a=0;a<i.length;a++)t=i[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var u=a.createContext({}),o=function(n){var e=a.useContext(u),t=e;return n&&(t="function"==typeof n?n(e):f(f({},e),n)),t},p=function(n){var e=o(n.components);return a.createElement(u.Provider,{value:e},n.children)},l={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},b=a.forwardRef((function(n,e){var t=n.components,r=n.mdxType,i=n.originalType,u=n.parentName,p=s(n,["components","mdxType","originalType","parentName"]),b=o(t),d=r,m=b["".concat(u,".").concat(d)]||b[d]||l[d]||i;return t?a.createElement(m,f(f({ref:e},p),{},{components:t})):a.createElement(m,f({ref:e},p))}));function d(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var i=t.length,f=new Array(i);f[0]=b;var s={};for(var u in e)hasOwnProperty.call(e,u)&&(s[u]=e[u]);s.originalType=n,s.mdxType="string"==typeof n?n:r,f[1]=s;for(var o=2;o<i;o++)f[o]=t[o];return a.createElement.apply(null,f)}return a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},9421:function(n,e,t){t.r(e),t.d(e,{assets:function(){return p},contentTitle:function(){return u},default:function(){return d},frontMatter:function(){return s},metadata:function(){return o},toc:function(){return l}});var a=t(7462),r=t(3366),i=(t(7294),t(3905)),f=["components"],s={},u="awk \u89e3\u6790 [awtk](https://github.com/zlgopen/awtk) \u4e2d\u7684 api-doc",o={unversionedId:"\u6280\u672f\u535a\u5ba2/linux \u4e09\u5251\u5ba2/awk/awk \u89e3\u6790 awtk \u4e2d\u7684 api-doc",id:"\u6280\u672f\u535a\u5ba2/linux \u4e09\u5251\u5ba2/awk/awk \u89e3\u6790 awtk \u4e2d\u7684 api-doc",title:"awk \u89e3\u6790 [awtk](https://github.com/zlgopen/awtk) \u4e2d\u7684 api-doc",description:"awtk \u751f\u6210\u8bf4\u660e\u6587\u6863\u4e0e\u5916\u90e8\u811a\u672c\u7ed1\u5b9a\u7684\u539f\u7406",source:"@site/docs/\u6280\u672f\u535a\u5ba2/linux \u4e09\u5251\u5ba2/awk/awk \u89e3\u6790 awtk \u4e2d\u7684 api-doc.md",sourceDirName:"\u6280\u672f\u535a\u5ba2/linux \u4e09\u5251\u5ba2/awk",slug:"/\u6280\u672f\u535a\u5ba2/linux \u4e09\u5251\u5ba2/awk/awk \u89e3\u6790 awtk \u4e2d\u7684 api-doc",permalink:"/longyu.github.io/\u6280\u672f\u535a\u5ba2/linux \u4e09\u5251\u5ba2/awk/awk \u89e3\u6790 awtk \u4e2d\u7684 api-doc",draft:!1,editUrl:"https://github.com/longyuwlz/longyu.github.io/docs/\u6280\u672f\u535a\u5ba2/linux \u4e09\u5251\u5ba2/awk/awk \u89e3\u6790 awtk \u4e2d\u7684 api-doc.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u4ee5 git + awk \u5b9e\u73b0\u6279\u91cf\u5316\u64cd\u4f5c\u4e3a\u4f8b\uff0c\u63a2\u8ba8\u547d\u4ee4\u884c\u7684\u5904\u7406\u8fc7\u7a0b",permalink:"/longyu.github.io/\u6280\u672f\u535a\u5ba2/linux \u4e09\u5251\u5ba2/awk/awk \u5b9e\u73b0\u6279\u91cf\u5316\u64cd\u4f5c\u63a2\u8ba8"},next:{title:"gawk \u793a\u4f8b\u811a\u672c awksed.awk \u4ee3\u7801\u5206\u6790",permalink:"/longyu.github.io/\u6280\u672f\u535a\u5ba2/linux \u4e09\u5251\u5ba2/awk/awksed.awk \u5206\u6790"}},p={},l=[{value:"awtk \u751f\u6210\u8bf4\u660e\u6587\u6863\u4e0e\u5916\u90e8\u811a\u672c\u7ed1\u5b9a\u7684\u539f\u7406",id:"awtk-\u751f\u6210\u8bf4\u660e\u6587\u6863\u4e0e\u5916\u90e8\u811a\u672c\u7ed1\u5b9a\u7684\u539f\u7406",level:2},{value:"\u5bf9\u95ee\u9898\u7684\u5206\u6790",id:"\u5bf9\u95ee\u9898\u7684\u5206\u6790",level:2},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:2},{value:"\u4ee3\u7801\u7684\u4e3b\u8981\u5de5\u4f5c\u6d41\u7a0b",id:"\u4ee3\u7801\u7684\u4e3b\u8981\u5de5\u4f5c\u6d41\u7a0b",level:2},{value:"\u53cd\u601d",id:"\u53cd\u601d",level:2}],b={toc:l};function d(n){var e=n.components,t=(0,r.Z)(n,f);return(0,i.kt)("wrapper",(0,a.Z)({},b,t,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"awk-\u89e3\u6790-awtk-\u4e2d\u7684-api-doc"},"awk \u89e3\u6790 ",(0,i.kt)("a",{parentName:"h1",href:"https://github.com/zlgopen/awtk"},"awtk")," \u4e2d\u7684 api-doc"),(0,i.kt)("h2",{id:"awtk-\u751f\u6210\u8bf4\u660e\u6587\u6863\u4e0e\u5916\u90e8\u811a\u672c\u7ed1\u5b9a\u7684\u539f\u7406"},(0,i.kt)("a",{parentName:"h2",href:"https://github.com/zlgopen/awtk"},"awtk")," \u751f\u6210\u8bf4\u660e\u6587\u6863\u4e0e\u5916\u90e8\u811a\u672c\u7ed1\u5b9a\u7684\u539f\u7406"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/zlgopen/awtk"},"awtk")," \u7ed1\u5b9a\u5916\u90e8\u811a\u672c\u65f6\u9996\u5148\u89e3\u6790\u5934\u6587\u4ef6\u4e2d\u7684\u63cf\u8ff0\u4fe1\u606f\uff0c\u7136\u540e\u751f\u6210 idl \uff0c\u901a\u8fc7\u8fdb\u4e00\u6b65\u64cd\u4f5c idl \u6765\u5b8c\u6210\u5916\u90e8\u811a\u672c\u7ed1\u5b9a\u3002"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/zlgopen/awtk"},"awtk")," \u7ec4\u4ef6\u7684\u5934\u6587\u4ef6\u4e2d\uff0c\u63cf\u8ff0\u4e86\u7c7b\u7ed3\u6784\uff0c\u4e8b\u4ef6\uff0c\u5c5e\u6027\uff0c\u51fd\u6570\u63a5\u53e3\u7684\u4fe1\u606f\uff0c\u8fd9\u4e9b\u4fe1\u606f\u65e2\u53ef\u7528\u4e8e\u5916\u90e8\u811a\u672c\u7ed1\u5b9a\uff0c\u4e5f\u53ef\u7528\u4e8e\u751f\u6210\u7ec4\u4ef6\u7684\u8bf4\u660e\u6587\u6863\u3002"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/zlgopen/awtk"},"awtk")," \u4e2d\u4f7f\u7528 js \u7f16\u5199\u4e86\u8f6c\u5316\u5de5\u5177\u5b9e\u73b0\u4e0a\u8ff0\u529f\u80fd\uff0c\u8fd9\u91cc\u6211\u5c1d\u8bd5\u4f7f\u7528 awk \u6765\u5b9e\u73b0\u751f\u6210\u7ec4\u4ef6\u8bf4\u660e\u6587\u6863\u7684\u529f\u80fd\u3002"),(0,i.kt)("h2",{id:"\u5bf9\u95ee\u9898\u7684\u5206\u6790"},"\u5bf9\u95ee\u9898\u7684\u5206\u6790"),(0,i.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u5c06\u5934\u6587\u4ef6\u4e2d\u64b0\u5199\u7684\u6ce8\u91ca\u4fe1\u606f\u505a\u4e3a\u4e00\u79cd\u7279\u5b9a\u6587\u6863\u683c\u5f0f\u3002\u5b83\u4e0e\u4e00\u822c\u6587\u6863\u683c\u5f0f\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5b83\u4ec5\u88ab\u7528\u4e8e\u4f5c\u4e3a\u751f\u6210\u5176\u5b83\u6587\u4ef6\u7684\u8f93\u5165\u6587\u4ef6\u3002\u4f7f\u7528 awk \u6765\u7f16\u5199\u89e3\u6790\u4ee3\u7801\uff0c\u5b8c\u6210\u4e86\u8fd9\u6bb5\u4ee3\u7801\u5c31\u76f8\u5f53\u4e8e\u5b9e\u73b0\u4e86\u4e00\u79cd\u81ea\u5df1\u7684\u6587\u6863\u683c\u5f0f\u3002"),(0,i.kt)("p",null,"\u9996\u5148\u5bf9\u5934\u6587\u4ef6\u4e2d\u7684\u6ce8\u91ca\u8fdb\u884c\u533a\u5206\uff0c\u53ef\u4ee5\u5206\u4e3a\u5982\u4e0b\u51e0\u4e2a\u7c7b\u522b:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"\u7c7b\u522b"),(0,i.kt)("th",{parentName:"tr",align:null},"\u63cf\u8ff0"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"class"),(0,i.kt)("td",{parentName:"tr",align:null},"\u7c7b\u4fe1\u606f")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"class property"),(0,i.kt)("td",{parentName:"tr",align:null},"\u7c7b\u6210\u5458\u63cf\u8ff0")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"event"),(0,i.kt)("td",{parentName:"tr",align:null},"\u4e8b\u4ef6\u63cf\u8ff0\u3000")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"method"),(0,i.kt)("td",{parentName:"tr",align:null},"\u63a5\u53e3\u63cf\u8ff0")))),(0,i.kt)("p",null,"\u6839\u636e\u4e0a\u9762\u7684\u7c7b\u522b\uff0c\u4ee3\u7801\u4e2d\u53ef\u4ee5\u5bf9\u6574\u4e2a\u89e3\u6790\u4efb\u52a1\u8fdb\u884c\u5206\u5272\uff0c\u4f9d\u6b21\u5904\u7406\u4e0d\u540c\u7c7b\u578b\u7684\u4fe1\u606f\uff0c\u89e3\u6790\u5b8c\u6210\u540e\u5408\u5e76\u3001\u5199\u5165\u5230\u540c\u4e00\u4e2a\u6587\u4ef6\u4e2d\u3002"),(0,i.kt)("h2",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},'#!/usr/bin/gawk -f\n\nfunction current_state(state, i)\n{\n    for (i in state) {\n        if (state[i] == 1)\n            return i\n    }\n\n    return ""\n}\n\nfunction set_state_and_add_to_file(state, type, file, string)\n{\n    state[type] = 1;\n    print string > file[type]\n}\n\nfunction make_class_data(filename, class,\n                         buff)\n{\n    buff = sprintf("## \u6982\u8ff0 %s\\n", class)\n\n    while (getline < filename > 0) {\n        if ($0 ~ /^ \\* @/) {\n            continue\n        } else {\n            gsub(/^ \\*([ \\/])?/, "")\n            buff = buff $0 "\\n"\n        }\n    }\n\n    return buff\n}\n\nfunction param_start(table, i,\n                     j, m, start)\n{\n    j = 1\n    m = 1\n    start = 1\n\n    while (table[m] != "") {\n        if (table[m] == "end") {\n            if (j == i) {\n                return start\n            } else {\n                j++\n                start = m + 1 # notice this\n            }\n        }\n        m++\n    }\n\n    return 0\n}\n\nfunction param_end(table, i,\n                   j, m)\n{\n    j = 1\n    m = 1\n\n    while (table[m] != "") {\n        if (table[m] == "end") {\n            if (j == i) {\n                return m\n            } else {\n                j++\n            }\n        }\n        m++\n    }\n\n    return 0\n}\n\nfunction output_function_proto(funcname, param, retvalue, i,\n                               rettable, paramtable, end,\n                               buff, j)\n{\n    buff = "```\\n"\n\n    split(retvalue[i], rettable, " ")\n\n    buff = buff rettable[1] " " funcname "("\n\n    end = param_end(param, i)\n\n    for (j = param_start(param, i); j < end; j++) {\n        split(param[j], paramtable, " ")\n        buff = buff paramtable[1] " " paramtable[2]\n        if (j + 1 < end) {\n            buff = buff ", "\n        }\n    }\n\n    buff = buff ");\\n"\n\n    buff = buff "```\\n"\n\n    return buff\n}\n\nfunction make_event_data(filename, class,\n                         array, desc, buff)\n{\n\n    buff = sprintf("### \u4e8b\u4ef6\\n\\n")\n    buff = buff sprintf("<p id=\\"%s_events\\">\\n\\n", class)\n    buff = buff sprintf("| \u4e8b\u4ef6\u540d\u79f0 | \u7c7b\u578b  | \u8bf4\u660e | \\n"\\\n                        "| -------- | ----- | ------- |\\n")\n                        \n    while (getline < filename > 0) {\n        if ($0 ~ /@event/) {\n            split($0, array, "{|}")\n        } else if ($0 ~ /\\*\\//) {\n            gsub(/_/, "\\\\_", array[2])\n            gsub(/_/, "\\\\_", array[3])\n            buff = buff sprintf("| %s | %s | %s |\\n", array[3], array[2], desc)\n        } else if ($0 ~ /\\* .*/) {\n            desc = $0\n            gsub(/^[ \\t]{1,}\\* /, "", desc)\n        }\n    }\n\n    close(filename)\n\n    return buff\n}\n\nfunction make_annotation_data(annotation,\n                              output_key, i, array, buff)\n{\n    output_key["set_prop"] = "\u5426"\n    output_key["get_prop"] = "\u5426"\n    output_key["readable"] = "\u5426"\n    output_key["writable"] = "\u5426"\n    output_key["persitent"] = "\u5426"\n    output_key["design"] = "\u5426"\n    output_key["scriptable"] = "\u5426"\n    output_key["xmlset"] = "\u662f"\n\n    gsub(/\\[/, "", annotation)\n    gsub(/\\]/, "", annotation)\n    gsub(/"/, "", annotation)\n\n    split(annotation, array, ",")\n\n    for (i = 1; i <= length(array); i++) {\n        output_key[array[i]] = "\u662f"\n    }\n    \n    buff = sprintf("| \u7279\u6027 |\u3000\u662f\u5426\u652f\u6301\u3000|\\n")\n    buff = buff sprintf("| ---- | ----- |\\n")\n    buff = buff "| \u53ef\u76f4\u63a5\u8bfb\u53d6 | " output_key["readable"] " |\\n"\n    buff = buff "| \u53ef\u76f4\u63a5\u4fee\u6539 | " output_key["writable"] " |\\n"\n    buff = buff "| \u53ef\u6301\u4e45\u5316 \u3000| " output_key["persitent"] " |\\n"\n    buff = buff "| \u53ef\u811a\u672c\u5316 \u3000| " output_key["scriptable"] " |\\n"\n    buff = buff "| \u53ef\u5728 IDE \u4e2d\u8bbe\u7f6e | " output_key["design"] " |\\n"\n    buff = buff "| \u53ef\u5728 XML \u4e2d\u8bbe\u7f6e | " output_key["xmlset"] " |\\n"\n    buff = buff "| \u53ef\u901a\u8fc7 widget\\\\_set\\\\_prop\u4fee\u6539 | " output_key["set_prop"] " |\\n"\n    buff = buff "| \u53ef\u901a\u8fc7 widget\\\\_get\\\\_prop\u8bfb\u53d6 | " output_key["get_prop"] " |\\n"\n    \n    return buff\n}\n\nfunction make_properties_data(filename, class,\n                              array, desc, buff, desc_id, anno_table)\n{\n    while (getline < filename > 0) {\n        if ($0 ~ /@property/) {\n            split($0, array, " {|} ")\n            continue\n        } else if ($0 ~ /\\*\\//) {\n            desc_id = sprintf("<p id=\\"%s_%s\\"> %s\\n\\n", class, array[3], desc);\n            gsub(/_/, "\\\\_", array[2])\n            gsub(/_/, "\\\\_", array[3])\n            buff = buff sprintf("#### %s \u5c5e\u6027\\n\\n", array[3])\n            buff = buff "--------------\\n"\n            buff = buff desc_id\n            buff = buff sprintf("* \u7c7b\u578b\uff1a%s\\n\\n", array[2])\n            buff = buff anno_table\n            continue\n        } else if ($0 ~ /@annotation/) {\n            gsub(/.*@annotation /, "", $0)\n            anno_table = make_annotation_data($0)\n            continue\n        } else {\n            desc = $0\n            gsub(/^[ \\t]{1,}\\* /, "", desc)\n            continue\n        }\n    }\n\n    close(filename)\n\n    return buff\n}\n\nfunction make_method_data(filename, class,\n                          method, param, retvalue,\n                          m, p, r, i, array, buff, new_data)\n{\n    m = p = r = 1\n    while (getline < filename > 0) {\n        if ($0 ~ /^ \\* @method/) {\n            sub(/^ \\* @method /, "")\n            method[m++] = $0\n        } else if ($0 ~ /^ \\* @param/) {\n            gsub(/^.*\\{/, "")\n            split($0, array, "}|  *")\n            param[p++] = array[1] " " array[3] " " array[4]\n        } else if ($0 ~ /^ \\* @return/) {\n            gsub(/^.*\\{/, "")\n            split($0, array, "}| ")\n            retvalue[r++] = array[1] " " array[3]\n        } else if ($0 ~ /^ \\*\\//) {\n            param[p++] = "end"\n        } else if ($0 ~ /^ \\* [^@]*$/) {\n            gsub(/^ \\* /, "")\n            method[m - 1] = method[m - 1] " " $0\n        }\n    }\n\n    close(filename)\n\n    buff = sprintf("| \u51fd\u6570\u540d\u79f0 |\u3000\u8bf4\u660e\u3000| \\n"\\\n                   "| ------- | -------- | \\n")\n\n    for (i = 1; i <= length(method); i++) {\n        split(method[i], array, " ")\n        new_data = array[2]\n        gsub(/_/, "\\\\_", new_data)\n        buff = buff sprintf("| <a href\\"%s_%s\\">%s</a> | %s | \\n", class,\n                            array[1], array[1], new_data)\n    }\n\n    for (i = 1; i<= length(method); i++) {\n        split(method[i], array, " ")\n        buff = buff sprintf("#### %s \u51fd\u6570\\n\\n", array[1])\n        buff = buff sprintf("* \u51fd\u6570\u529f\u80fd\uff1a\\n\\n")\n        buff = buff sprintf("> <p id = \\"%s_%s\\"> %s\\n\\n", class, array[1], array[2])\n        buff = buff sprintf("*\u3000\u51fd\u6570\u539f\u578b: \\n\\n")\n        buff = buff output_function_proto(array[1], param, retvalue, i)\n        buff = buff sprintf("\u53c2\u6570\u8bf4\u660e\uff1a\\n\\n")\n        buff = buff output_param_table(param, retvalue, i)\n        buff = buff "\\n"\n    }\n\n    return buff\n}\n\nfunction output_param_table(param, retvalue, i,\n                            rettable, paramtable, buff, new_data, end)\n{\n    buff = sprintf("| \u53c2\u6570 | \u7c7b\u578b | \u8bf4\u660e |\\n")\n    buff = buff sprintf("| ------- | ---- | -------- |\\n")\n\n    split(retvalue[i], rettable, "  *")\n    gsub(/_/, "\\\\_", rettable[1])\n    gsub(/_/, "\\\\_", rettable[2])\n       \n    buff = buff sprintf("| \u8fd4\u56de\u503c | %s | %s | \\n", rettable[1], rettable[2])\n\n    end = param_end(param, i)\n\n    for (i = param_start(param, i); i < end; i++) {\n        split(param[i], paramtable, "  *")\n        gsub(/_/, "\\\\_", paramtable[1])\n        gsub(/_/, "\\\\_", paramtable[2])\n        gsub(/_/, "\\\\_", paramtable[3])\n        buff = buff sprintf("| %s | %s | %s |\\n", paramtable[2], paramtable[1], paramtable[3])\n    }\n\n    return buff\n}\n\nfunction parse_file(filename,\n                    output_filename, method_buffer, method, method_index,\n                    properties, properties_index, properties_buffer, i)\n{\n    start = 0\n    method_index = 1\n    properties_index = 1;\n    \n    data = filename\n    gsub(".*/", "", data)\n\n    class = ""\n    file["class"] = sprintf("%s%s", data, "_class")\n    file["properties"] = sprintf("%s%s", data, "_properties")\n    file["event"] = sprintf("%s%s", data, "_event")\n    file["method"] = sprintf("%s%s", data, "_method")\n\n    state["class"] = 0\n    state["properties"] = 0\n    state["method"] = 0\n    state["event"] = 0\n\n    while (getline < filename > 0) {\n        if ($0 ~ /^[ \\t]*\\/\\*\\*/) {\n            start = 1\n            continue\n        }\n\n        if ($0 ~ /\\*\\//) {\n            start = 0\n            if (current_state(state) != "") {\n                if (current_state(state) == "method") {\n                    method_buffer[method[method_index - 1]] = \\\n                        method_buffer[method[method_index - 1]] $0 "\\n"\n                } else if (current_state(state) == "properties") {\n                    properties_buffer[properties[properties_index - 1]] = \\\n                    properties_buffer[properties[properties_index - 1]] $0\n                } else {\n                    print $0 > file[current_state(state)]\n                }\n\n                state[current_state(state)] = 0\n            }\n            continue\n        }\n\n        if (start == 0)\n            continue\n\n        if ($0 ~ /@class/) {\n            class = $0\n            gsub(/^.* /, "", class)\n            set_state_and_add_to_file(state, "class", file, $0)\n            continue\n        } else if ($0 ~ /@property/) {\n            properties[properties_index] = $0\n            state["properties"] = 1\n            properties_index++\n            continue\n        } else if ($0 ~ /@method/) {\n            method[method_index] = $0\n            state["method"] = 1\n            method_index++\n            continue\n        } else if ($0 ~ /@event/) {\n            set_state_and_add_to_file(state, "event", file, $0)\n            continue\n        }\n\n        if (current_state(state) != "") {\n            if (current_state(state) == "method") {\n                method_buffer[method[method_index - 1]] = \\\n                method_buffer[method[method_index - 1]] $0 "\\n"\n            } else if (current_state(state) == "properties") {\n                properties_buffer[properties[properties_index - 1]] =   \\\n                properties_buffer[properties[properties_index - 1]] $0 "\\n"\n            }\n            else {\n                print $0 > file[current_state(state)]\n            }\n        }\n    }\n\n    sort_by_key(method, length(method), "method_cmp")\n    sort_by_key(properties, length(properties), "others")\n\n    for (i = 1; i <= length(method); i++) {\n        print method[i] " "\n    }\n    \n    for (i = 1; i <= length(method); i++) {\n        print method[i] > file["method"]\n        print method_buffer[method[i]] > file["method"]\n    }\n\n    for (i = 1; i <= length(properties); i++) {\n        print properties[i] > file["properties"]\n        print properties_buffer[properties[i]] > file["properties"]\n    }\n\n    for (i in file) {\n        close(file[i])\n    }\n\n    for (i in method_buffer) {\n        delete method_buffer[i]\n    }\n    \n    for (i in properties_buffer) {\n        delete properties_buffer[i]\n    }\n\n    gsub(/.h$/, ".md", data)\n    print make_class_data(file["class"], class) > data\n    print make_method_data(file["method"], class) > data\n    print make_event_data(file["event"], class) > data\n    print make_properties_data(file["properties"], class) > data\n}\n\nfunction exchange_data(array, first, second, temp)\n{\n    temp = array[first]\n    array[first] = array[second]\n    array[second] = temp\n}\n\nfunction sort_by_key(array, len, cmp_type, i, j, first_string, second_string)\n{\n    for (i = 1; i <= len; i++) {\n        for (j = i + 1; j <= len; j++) {\n            first_string = array[j]\n            second_string = array[i]\n\n            if (cmp_type != "method_cmp") {\n                gsub(/.* /, "", first_string)\n                gsub(/.* /, "", second_string)\n            }\n            \n            if (first_string > second_string) {\n                exchange_data(array, j, i);\n            }\n        }\n    }\n}\n\nBEGIN {\n    for  (j = 1; j < ARGC; j++) {\n        if (ARGV[j] ~ /^[a-zA-Z0-9][a-zA-Z0-9_.]{1,}/) {\n            parse_file(ARGV[j])\n        }\n    }\n}\n\nEND {\n    buff = sprintf("rm -rf *.h_*")\n    system(buff)\n}\n')),(0,i.kt)("h2",{id:"\u4ee3\u7801\u7684\u4e3b\u8981\u5de5\u4f5c\u6d41\u7a0b"},"\u4ee3\u7801\u7684\u4e3b\u8981\u5de5\u4f5c\u6d41\u7a0b"),(0,i.kt)("p",null,"\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u3010parse_file\u3011 \u51fd\u6570\u4e2d\u9996\u5148\u4f1a\u6309\u7167\u4e0a\u8ff0\u7c7b\u522b\u5c06\u5934\u6587\u4ef6\u4e2d\u7684\u4fe1\u606f\u5206\u53d1\u5230\u5404\u4e2a\u4e34\u65f6\u6587\u4ef6\u4e2d\u5b58\u653e\u3002\u5bf9\u4e8e\u9700\u8981\u8fdb\u884c\u6392\u5e8f\u7684\u5185\u5bb9\uff0c\u6392\u5e8f\u540e\u5199\u5165\u6587\u4ef6\u4e2d\u3002"),(0,i.kt)("p",null,"\u8fd9\u4e4b\u540e\uff0c\u4f9d\u6b21\u8bfb\u5165\u4e0d\u540c\u7c7b\u522b\u7684\u4e34\u65f6\u6587\u4ef6\uff0c\u89e3\u6790\u6587\u4ef6\u5185\u5bb9\uff0c\u751f\u6210\u65b0\u7684\u5185\u5bb9\uff0c\u5c06\u65b0\u751f\u6210\u7684\u5185\u5bb9\u5b58\u653e\u5230 \u3010buff\u3011 \u4e2d\uff0c\u4f9d\u6b21\u5199\u5165 \u3010buff\u3011 \u5230\u540c\u4e00\u6587\u4ef6\u4e2d\uff0c\u6700\u540e\u3010\u5220\u9664\u4e34\u65f6\u6587\u4ef6\u3011\u5c31\u5b8c\u6210\u4e86\u6240\u6709\u7684\u5904\u7406\u8fc7\u7a0b\u3002"),(0,i.kt)("h2",{id:"\u53cd\u601d"},"\u53cd\u601d"),(0,i.kt)("p",null,"\u4e0a\u9762\u7684\u5b9e\u73b0\u4e2d\uff0c\u6587\u4ef6\u7684\u8bfb\u5199\u4f7f\u7528\u4e86\u591a\u6b21\u3002"),(0,i.kt)("p",null,"\u5176\u5b9e\u53ef\u4ee5\u8003\u8651\u53e6\u5916\u4e00\u79cd\u5b9e\u73b0\u3002\u5728\u8fd9\u79cd\u5b9e\u73b0\u4e2d\u9996\u5148\u8bfb\u5165\u6587\u4ef6\u5185\u5bb9\u5230\u5185\u5b58\u4e2d\uff0c\u7136\u540e\u6309\u7167\u7c7b\u522b\u5904\u7406\uff0c\u5408\u5e76 buff \u540e\u5199\u5165\u6587\u4ef6\u5373\u53ef\u3002"),(0,i.kt)("p",null,"\u5728\u8fd9\u79cd\u5b9e\u73b0\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 gawk \u7684\u51fd\u6570 index \u4e0e substr \u6765\u5b8c\u6210\u3002"))}d.isMDXComponent=!0}}]);