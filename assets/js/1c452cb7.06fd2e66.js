"use strict";(self.webpackChunklongyu_website=self.webpackChunklongyu_website||[]).push([[1971],{3905:function(t,e,n){n.d(e,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function u(t,e){if(null==t)return{};var n,r,i=function(t,e){if(null==t)return{};var n,r,i={},a=Object.keys(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var s=r.createContext({}),l=function(t){var e=r.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},p=function(t){var e=l(t.components);return r.createElement(s.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(t,e){var n=t.components,i=t.mdxType,a=t.originalType,s=t.parentName,p=u(t,["components","mdxType","originalType","parentName"]),m=l(n),d=i,y=m["".concat(s,".").concat(d)]||m[d]||c[d]||a;return n?r.createElement(y,o(o({ref:e},p),{},{components:n})):r.createElement(y,o({ref:e},p))}));function d(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var a=n.length,o=new Array(a);o[0]=m;var u={};for(var s in e)hasOwnProperty.call(e,s)&&(u[s]=e[s]);u.originalType=t,u.mdxType="string"==typeof t?t:i,o[1]=u;for(var l=2;l<a;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5668:function(t,e,n){n.r(e),n.d(e,{assets:function(){return p},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return u},metadata:function(){return l},toc:function(){return c}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),o=["components"],u={},s="\u7cfb\u7edf\u5d29\u6e83\u91cd\u542f\u540e utmp \u65e5\u5fd7\u7684\u56de\u6536\u8fc7\u7a0b",l={unversionedId:"\u6280\u672f\u535a\u5ba2/linux-system/\u7cfb\u7edf\u65e5\u5fd7/utmp/\u7cfb\u7edf\u5d29\u6e83\u91cd\u542f\u540e utmp \u65e5\u5fd7\u7684\u56de\u6536\u8fc7\u7a0b",id:"\u6280\u672f\u535a\u5ba2/linux-system/\u7cfb\u7edf\u65e5\u5fd7/utmp/\u7cfb\u7edf\u5d29\u6e83\u91cd\u542f\u540e utmp \u65e5\u5fd7\u7684\u56de\u6536\u8fc7\u7a0b",title:"\u7cfb\u7edf\u5d29\u6e83\u91cd\u542f\u540e utmp \u65e5\u5fd7\u7684\u56de\u6536\u8fc7\u7a0b",description:"\u7cfb\u7edf\u5d29\u6e83\u5e26\u6765\u7684\u95ee\u9898",source:"@site/docs/\u6280\u672f\u535a\u5ba2/linux-system/\u7cfb\u7edf\u65e5\u5fd7/utmp/\u7cfb\u7edf\u5d29\u6e83\u91cd\u542f\u540e utmp \u65e5\u5fd7\u7684\u56de\u6536\u8fc7\u7a0b.md",sourceDirName:"\u6280\u672f\u535a\u5ba2/linux-system/\u7cfb\u7edf\u65e5\u5fd7/utmp",slug:"/\u6280\u672f\u535a\u5ba2/linux-system/\u7cfb\u7edf\u65e5\u5fd7/utmp/\u7cfb\u7edf\u5d29\u6e83\u91cd\u542f\u540e utmp \u65e5\u5fd7\u7684\u56de\u6536\u8fc7\u7a0b",permalink:"/longyu.github.io/\u6280\u672f\u535a\u5ba2/linux-system/\u7cfb\u7edf\u65e5\u5fd7/utmp/\u7cfb\u7edf\u5d29\u6e83\u91cd\u542f\u540e utmp \u65e5\u5fd7\u7684\u56de\u6536\u8fc7\u7a0b",draft:!1,editUrl:"https://github.com/longyuwlz/longyu.github.io/docs/\u6280\u672f\u535a\u5ba2/linux-system/\u7cfb\u7edf\u65e5\u5fd7/utmp/\u7cfb\u7edf\u5d29\u6e83\u91cd\u542f\u540e utmp \u65e5\u5fd7\u7684\u56de\u6536\u8fc7\u7a0b.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u767b\u5f55 linux \u7684\u8fc7\u7a0b",permalink:"/longyu.github.io/\u6280\u672f\u535a\u5ba2/linux-system/\u767b\u5165 linux \u7cfb\u7edf/\u767b\u5f55 linux \u7684\u8fc7\u7a0b"},next:{title:"\u4f7f\u7528 virsh-console \u8fde\u63a5\u5230 virt-manager \u4e2d\u8fd0\u884c\u7684 linux \u865a\u62df\u673a\u4e32\u53e3\u4e2d",permalink:"/longyu.github.io/\u6280\u672f\u535a\u5ba2/linux-system/\u865a\u62df\u5316/kvm/\u4f7f\u7528 virsh-console \u8fde\u63a5\u5230 virt-manager \u4e2d\u8fd0\u884c\u7684 linux \u865a\u62df\u673a\u4e32\u53e3\u4e2d"}},p={},c=[{value:"\u7cfb\u7edf\u5d29\u6e83\u5e26\u6765\u7684\u95ee\u9898",id:"\u7cfb\u7edf\u5d29\u6e83\u5e26\u6765\u7684\u95ee\u9898",level:2},{value:"manual \u4e2d\u7684\u76f8\u5173\u4fe1\u606f",id:"manual-\u4e2d\u7684\u76f8\u5173\u4fe1\u606f",level:2},{value:"\u4f7f\u7528\u865a\u62df\u673a\u6765\u9a8c\u8bc1",id:"\u4f7f\u7528\u865a\u62df\u673a\u6765\u9a8c\u8bc1",level:2}],m={toc:c};function d(t){var e=t.components,n=(0,i.Z)(t,o);return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\u7cfb\u7edf\u5d29\u6e83\u91cd\u542f\u540e-utmp-\u65e5\u5fd7\u7684\u56de\u6536\u8fc7\u7a0b"},"\u7cfb\u7edf\u5d29\u6e83\u91cd\u542f\u540e utmp \u65e5\u5fd7\u7684\u56de\u6536\u8fc7\u7a0b"),(0,a.kt)("h2",{id:"\u7cfb\u7edf\u5d29\u6e83\u5e26\u6765\u7684\u95ee\u9898"},"\u7cfb\u7edf\u5d29\u6e83\u5e26\u6765\u7684\u95ee\u9898"),(0,a.kt)("p",null,"\u6b63\u5e38\u7684\u60c5\u51b5\u4e0b\uff0c\u5f53\u7528\u6237\u767b\u51fa\u7cfb\u7edf\u540e\uff0cutmp \u6587\u4ef6\u4e2d\u7684\u9879\u76ee\u4f1a\u66f4\u65b0\uff0c",(0,a.kt)("strong",{parentName:"p"},"\u66f4\u65b0\u72b6\u6001\u4e0e\u767b\u51fa\u65f6\u95f4"),"\u3002\u5f53\u7cfb\u7edf\u5d29\u6e83\u65f6\u663e\u7136\u6b63\u5e38\u7684\u767b\u51fa\u8fc7\u7a0b",(0,a.kt)("strong",{parentName:"p"},"\u4e0d\u4f1a\u6267\u884c"),"\uff0c\u90a3\u4e48 utmp \u6587\u4ef6\u4e2d\u7684\u76f8\u5e94\u9879\u76ee",(0,a.kt)("strong",{parentName:"p"},"\u4e0d\u4f1a\u66f4\u65b0"),"\u3002"),(0,a.kt)("p",null,"\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\u5982\u679c\u4e0d\u8fdb\u884c\u4fee\u590d\uff0c\u90a3\u4e48\u4e0b\u4e00\u6b21\u91cd\u65b0\u8fdb\u5165\u7cfb\u7edf\u540e",(0,a.kt)("strong",{parentName:"p"},"\u4e0a\u4e00\u6b21\u7684\u8bb0\u5f55\u4f1a\u6b8b\u7559\u3002")),(0,a.kt)("h2",{id:"manual-\u4e2d\u7684\u76f8\u5173\u4fe1\u606f"},"manual \u4e2d\u7684\u76f8\u5173\u4fe1\u606f"),(0,a.kt)("p",null,"\u67e5\u770b manual \u53d1\u73b0\u5728\u7cfb\u7edf\u542f\u52a8\u7684\u65f6\u5019 ",(0,a.kt)("strong",{parentName:"p"},"init \u8fdb\u7a0b"),"\u662f",(0,a.kt)("strong",{parentName:"p"},"\u7b2c\u4e00\u4e2a\u8bbf\u95ee")," utmp \u6587\u4ef6\u7684\u7a0b\u5e8f\u3002"),(0,a.kt)("p",null,"init \u8fdb\u7a0b\u4f1a\u4fee\u6539 utmp \u4e2d\u6240\u6709 ut_type \u672a\u8bbe\u5b9a\u4e3a DEAD_PROCESS \u6216 RUN_LVL \u5e76\u4e14 ut_pid \u6307\u5411\u7684 pid \u8fdb\u7a0b\u4e0d\u5b58\u5728\u7684\u8bb0\u5f55\uff0c\u5c06 ut_type \u8bbe\u5b9a\u4e3a DEAD_PROCESS \u5e76\u6e05\u9664 ut_user\u3001ut_host \u4e0e ut_time\u3002"),(0,a.kt)("p",null,"manual \u4e2d\u76f8\u5173\u7684\u4fe1\u606f\u6458\u5f55\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-man"},"       The  first  entries  ever  created result from init(1) processing inittab(5).  Before an entry is processed, though, init(1) cleans up utmp by setting ut_type to\n       DEAD_PROCESS, clearing ut_user, ut_host, and ut_time with null bytes for each record which ut_type is not DEAD_PROCESS or RUN_LVL and where no process  with  PID\n       ut_pid exists.  If no empty record with the needed ut_id can be found, init(1) creates a new one.  It sets ut_id from the inittab, ut_pid and ut_time to the cur\u2010\n       rent values, and ut_type to INIT_PROCESS.\n\n       mingetty(8) (or agetty(8)) locates the entry by the PID, changes ut_type to LOGIN_PROCESS, changes ut_time, sets ut_line, and waits for connection to  be  estab\u2010\n       lished.  login(1), after a user has been authenticated, changes ut_type to USER_PROCESS, changes ut_time, and sets ut_host and ut_addr.  Depending on mingetty(8)\n       (or agetty(8)) and login(1), records may be located by ut_line instead of the preferable ut_pid.\n\n       When init(1) finds that a process has exited, it locates its utmp entry by ut_pid, sets ut_type to DEAD_PROCESS, and clears ut_user,  ut_host  and  ut_time  with\n       null bytes.\n\n       xterm(1) and other terminal emulators directly create a USER_PROCESS record and generate the ut_id by using the string that suffix part of the terminal name (the\n       characters following /dev/[pt]ty).  If they find a DEAD_PROCESS for this ID, they recycle it, otherwise they create a new entry.  If they can, they will mark  it\n       as DEAD_PROCESS on exiting and it is advised that they null ut_line, ut_time, ut_user, and ut_host as well.\n\n       telnetd(8)  sets  up  a  LOGIN_PROCESS entry and leaves the rest to login(1) as usual.  After the telnet session ends, telnetd(8) cleans up utmp in the described\n       way.\n\n       The wtmp file records all logins and logouts.  Its format is exactly like utmp except that a null username indicates a logout on the associated  terminal.   Fur\u2010\n       thermore,  the  terminal name ~ with username shutdown or reboot indicates a system shutdown or reboot and the pair of terminal names |/} logs the old/new system\n       time when date(1) changes it.  wtmp is maintained by login(1), init(1), and some versions of getty(8) (e.g., mingetty(8) or agetty(8)).  None of  these  programs\n       creates the file, so if it is removed, record-keeping is turned off.\n")),(0,a.kt)("h2",{id:"\u4f7f\u7528\u865a\u62df\u673a\u6765\u9a8c\u8bc1"},"\u4f7f\u7528\u865a\u62df\u673a\u6765\u9a8c\u8bc1"),(0,a.kt)("p",null,"\u4f7f\u7528\u865a\u62df\u673a\uff0c\u6b63\u5e38\u767b\u5f55\uff0c\u7136\u540e\u6267\u884c who \u547d\u4ee4\u67e5\u770b\u767b\u5f55\u4fe1\u606f\u3002\u7136\u540e\u5f3a\u5236\u5173\u673a\uff0c\u91cd\u65b0\u5f00\u673a\u540e\u767b\u5f55\u8fdb\u7cfb\u7edf\u518d\u6b21\u6267\u884c who \u547d\u4ee4\uff0c\u8f93\u51fa\u6b63\u5e38\u3002"))}d.isMDXComponent=!0}}]);