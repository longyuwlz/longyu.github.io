"use strict";(self.webpackChunklongyu_website=self.webpackChunklongyu_website||[]).push([[9918],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var s=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,s,r=function(e,t){if(null==e)return{};var n,s,r={},p=Object.keys(e);for(s=0;s<p.length;s++)n=p[s],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(s=0;s<p.length;s++)n=p[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=s.createContext({}),o=function(e){var t=s.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=o(e.components);return s.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},d=s.forwardRef((function(e,t){var n=e.components,r=e.mdxType,p=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=o(n),m=r,f=d["".concat(c,".").concat(m)]||d[m]||l[m]||p;return n?s.createElement(f,a(a({ref:t},u),{},{components:n})):s.createElement(f,a({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var p=n.length,a=new Array(p);a[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,a[1]=i;for(var o=2;o<p;o++)a[o]=n[o];return s.createElement.apply(null,a)}return s.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9043:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return i},metadata:function(){return o},toc:function(){return l}});var s=n(7462),r=n(3366),p=(n(7294),n(3905)),a=["components"],i={},c="\u95ee\u9898\u63cf\u8ff0",o={permalink:"/longyu.github.io/blog/dpdk/dpdk \u7a0b\u5e8f\u7ed1\u6838\u5931\u8d25\u95ee\u9898\uff1aEAL: pthread_setaffinity_np failed",editUrl:"https://github.com/longyuwlz/longyu.github.io/blog/dpdk/dpdk \u7a0b\u5e8f\u7ed1\u6838\u5931\u8d25\u95ee\u9898\uff1aEAL: pthread_setaffinity_np failed.md",source:"@site/blog/dpdk/dpdk \u7a0b\u5e8f\u7ed1\u6838\u5931\u8d25\u95ee\u9898\uff1aEAL: pthread_setaffinity_np failed.md",title:"\u95ee\u9898\u63cf\u8ff0",description:"\u5728\u67d0\u7cfb\u7edf\u4e2d\uff0c\u8fd0\u884c\u539f\u751f dpdk \u793a\u4f8b\u7a0b\u5e8f\u4f1a\u62a5\u5982\u4e0b\u9519\u8bef\uff1a",date:"2022-06-21T00:32:49.000Z",formattedDate:"2022\u5e746\u670821\u65e5",tags:[],readingTime:7.62,truncated:!1,authors:[],frontMatter:{},prevItem:{title:"dpdk/dpdk \u7a0b\u5e8f\u7ed1\u4e0d\u540c\u7684\u6838\u6027\u80fd\u6709\u660e\u663e\u5dee\u5f02\u95ee\u9898\u5206\u6790",permalink:"/longyu.github.io/blog/dpdk/dpdk \u7a0b\u5e8f\u7ed1\u4e0d\u540c\u7684\u6838\u6027\u80fd\u6709\u660e\u663e\u5dee\u5f02\u95ee\u9898\u5206\u6790"},nextItem:{title:"dpdk/dpdk \u95ee\u9898\u5206\u6790\uff1a\u4e0d\u517c\u5bb9\u5149\u6a21\u5757\u5bfc\u81f4 dpdk \u7a0b\u5e8f\u8fd0\u884c\u5931\u8d25\u95ee\u9898\u5b9a\u4f4d",permalink:"/longyu.github.io/blog/dpdk/dpdk \u95ee\u9898\u5206\u6790\uff1a\u4e0d\u517c\u5bb9\u5149\u6a21\u5757\u5bfc\u81f4 dpdk \u7a0b\u5e8f\u8fd0\u884c\u5931\u8d25\u95ee\u9898\u5b9a\u4f4d"}},u={authorsImageUrls:[]},l=[],d={toc:l};function m(e){var t=e.components,n=(0,r.Z)(e,a);return(0,p.kt)("wrapper",(0,s.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("p",null,"\u5728\u67d0\u7cfb\u7edf\u4e2d\uff0c\u8fd0\u884c\u539f\u751f dpdk \u793a\u4f8b\u7a0b\u5e8f\u4f1a\u62a5\u5982\u4e0b\u9519\u8bef\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-bash"},"EAL: pthread_setaffinity_np failed\nPANIC in eal_thread_loop():\ncannot set affinity\n")),(0,p.kt)("p",null,"\u5c06\u5f53\u524d\u8fdb\u7a0b\u7684 cgroup \u5207\u6362\u4e3a\u7cfb\u7edf\u9ed8\u8ba4\u7684 cgroup \u7ec4\u5c31\u80fd\u591f\u89e3\u51b3\u6b64\u95ee\u9898\uff0c\u4f46\u662f",(0,p.kt)("strong",{parentName:"p"},"\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u505a\u5462\uff1f\u672c\u7bc7\u6587\u7ae0\u4e2d\u6211\u5c06\u5bf9\u8fd9\u4e2a\u95ee\u9898\u8fdb\u884c\u63cf\u8ff0\u3002")),(0,p.kt)("h1",{id:"strace-\u8ddf\u8e2a\u7a0b\u5e8f\u6267\u884c"},"strace \u8ddf\u8e2a\u7a0b\u5e8f\u6267\u884c"),(0,p.kt)("p",null,"strace \u8ddf\u8e2a\uff0c\u5f97\u5230\u5982\u4e0b\u76f8\u5173\u4fe1\u606f\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-bash"},'[pid 20758] sched_setaffinity(20758, 128, [1] <unfinished ...>\n[pid 20750] close(12 <unfinished ...>\n[pid 20758] <... sched_setaffinity resumed> ) = 0\n[pid 20750] <... close resumed> )       = 0\n[pid 20758] access("/sys/devices/system/node/node0/cpu1", F_OK <unfinished ...>\n[pid 20750] pipe( <unfinished ...>\n[pid 20758] <... access resumed> )      = 0\n[pid 20750] <... pipe resumed> [12, 13]) = 0\n[pid 20758] access("/sys/devices/system/node/node0/cpu1", F_OK <unfinished ...>\n[pid 20750] pipe( <unfinished ...>\n[pid 20758] <... access resumed> )      = 0\n[pid 20750] <... pipe resumed> [14, 15]) = 0\n[pid 20758] write(1, "EAL: lcore 1 is ready (tid=f6902"..., 48 <unfinished ...>\n[pid 20750] mmap(NULL, 8392704, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0EAL: lcore 1 is ready (tid=f6902700;cpuset=[1])\n\n.........\n\n[pid 20759] gettid( <unfinished ...>\n[pid 20760] set_robust_list(0x7ffff59009e0, 24 <unfinished ...>\n[pid 20759] <... gettid resumed> )      = 20759\n[pid 20760] <... set_robust_list resumed> ) = 0\n[pid 20759] sched_setaffinity(20759, 128, [2] <unfinished ...>\n[pid 20760] gettid( <unfinished ...>\n[pid 20759] <... sched_setaffinity resumed> ) = -1 EINVAL (Invalid argument)\n')),(0,p.kt)("p",null,"\u4e0a\u9762\u7684\u5185\u5bb9\u6709\u4e24\u4e2a\u5173\u952e\u70b9\uff1a"),(0,p.kt)("ol",null,(0,p.kt)("li",{parentName:"ol"},"20758 \u7ebf\u7a0b\u8bbe\u7f6e cpu \u4eb2\u548c\u6027\u4e3a 1 \u6838\u6210\u529f"),(0,p.kt)("li",{parentName:"ol"},"20759 \u7ebf\u7a0b\u8bbe\u7f6e cpu \u4eb2\u548c\u6027\u4e3a 2 \u5931\u8d25\uff0csched_setaffinity \u7cfb\u7edf\u8c03\u7528\u8fd4\u56de\u503c\u4e3a EINVAL"),(0,p.kt)("li",{parentName:"ol"},"\u4e24\u4e2a\u7ebf\u7a0b\u90fd\u662f\u901a\u8fc7 sched_setaffinity \u7ebf\u7a0b\u6765\u8bbe\u7f6e cpu \u4eb2\u548c\u6027")),(0,p.kt)("p",null,"sched_setaffinity \u7cfb\u7edf\u8c03\u7528\u7684\u3010\u8fd4\u56de\u503c\u3011\u662f\u4e00\u4e2a\u5173\u952e\u4fe1\u606f\uff0cman sched_setaffinity \u67e5\u770b\u8fd4\u56de\u503c\u7684\u5177\u4f53\u542b\u4e49\u3002"),(0,p.kt)("h1",{id:"man-sched_setaffinity"},"man sched_setaffinity"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-bash"},'EINVAL The affinity bit mask mask contains no processors that are currently physically on the system and  permitted  to  the\n              thread  according  to  any  restrictions that may be imposed by cpuset cgroups or the "cpuset" mechanism described in\n              cpuset(7).\n\nEINVAL (sched_getaffinity() and, in kernels before 2.6.9, sched_setaffinity()) cpusetsize is smaller than the  size  of  the\n              affinity mask used by the kernel.\n')),(0,p.kt)("p",null,"\u6211\u8fd9\u91cc\u7684\u60c5\u51b5\u7b26\u5408\u7b2c\u4e00\u79cd\u63cf\u8ff0\uff0c\u540c\u65f6\u786e\u5b9a\u8bbe\u7f6e\u7684 cpu \u6838\u662f\u5b58\u5728\u7684\uff0c\u8fd9\u6837\u95ee\u9898\u5c31\u6307\u5411\u4e86 ",(0,p.kt)("strong",{parentName:"p"},"cpuset(7)"),"\u3002"),(0,p.kt)("h1",{id:"man-7-cpuset"},"man 7 cpuset"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-bash"},"Every  process  in the system belongs to exactly one cpuset.  A process is confined to run only on the CPUs in the cpuset it\nbelongs to, and to allocate memory only on the memory nodes in that cpuset.  When a process fork(2)s, the child  process  is\nplaced  in  the same cpuset as its parent.  With sufficient privilege, a process may be moved from one cpuset to another and\nthe allowed CPUs and memory nodes of an existing cpuset may be changed.\n\nWhen the system begins booting, a single cpuset is defined that includes all CPUs and memory nodes on the  system,  and  all\nprocesses  are  in that cpuset.  During the boot process, or later during normal system operation, other cpusets may be cre\u2010\nated, as subdirectories of this top cpuset, under the control of the system administrator, and processes may  be  placed  in\nthese other cpusets.\n       \nCpusets  are  integrated  with  the sched_setaffinity(2) scheduling affinity mechanism and the mbind(2) and set_mempolicy(2)\nmemory-placement mechanisms in the kernel.  Neither of these mechanisms let a process make use of a CPU or memory node  that\nis  not  allowed by that process's cpuset.  If changes to a process's cpuset placement conflict with these other mechanisms,\nthen cpuset placement is enforced even if it means overriding these other mechanisms.  The kernel accomplishes this overrid\u2010\ning  by  silently restricting the CPUs and memory nodes requested by these other mechanisms to those allowed by the invoking\nprocess's cpuset.  This can result in these other calls returning an error, if for example, such a call ends  up  requesting\nan empty set of CPUs or memory nodes, after that request is restricted to the invoking process's cpuset.\n")),(0,p.kt)("p",null,"\u603b\u7ed3\u5f97\u51fa\u5982\u4e0b\u51e0\u70b9\u5173\u952e\u4fe1\u606f\uff1a"),(0,p.kt)("ol",null,(0,p.kt)("li",{parentName:"ol"},"linux \u7cfb\u7edf\u4e2d\u7684\u6bcf\u4e00\u4e2a\u8fdb\u7a0b\u90fd\u5f52\u5c5e\u4e8e\u3010\u552f\u4e00\u7684\u3011\u4e00\u4e2a cpuset\uff0c\u7a0b\u5e8f\u88ab\u9650\u5b9a\u4e3a",(0,p.kt)("strong",{parentName:"li"},"\u53ea\u80fd"),"\u5728\u5f52\u5c5e cpuset \u7ec4\u5141\u8bb8\u7684 cpu \u4e0a\u6267\u884c\uff0c\u4e5f\u53ea\u80fd\u4ece\u5f52\u5c5e cpuset \u7ec4\u5141\u8bb8\u7684\u5185\u5b58\u8282\u70b9\u7533\u8bf7\u5185\u5b58"),(0,p.kt)("li",{parentName:"ol"},"\u5b50\u8fdb\u7a0b\u9ed8\u8ba4\u3010\u7ee7\u627f\u3011\u7236\u8fdb\u7a0b\u7684 cpuset \u914d\u7f6e"),(0,p.kt)("li",{parentName:"ol"},"\u7cfb\u7edf\u542f\u52a8\u65f6\uff0c\u5305\u542b\u6240\u6709 cpu \u6838\u4e0e\u5185\u5b58\u8282\u70b9\u7684 cpuset \u88ab\u521b\u5efa\uff0c\u6b64\u65f6\u6240\u6709\u7684\u8fdb\u7a0b\u90fd\u5f52\u5c5e\u4e8e\u8fd9\u4e2a cpuset\uff0c\u5176\u5b83\u540e\u7eed\u521b\u5efa\u7684 cpuset \u90fd\u4f4d\u4e8e\u6b64 cpuset \u7684\u5b50\u76ee\u5f55\u4e2d\uff0c\u8fd9\u4e2a cpuset \u88ab\u79f0\u4e3a \u3010top cpuset\u3011"),(0,p.kt)("li",{parentName:"ol"},"\u5f53 cpuset \u4e0e\u5176\u5b83\u7684 cpu\u3001\u5185\u5b58\u5206\u914d\u673a\u5236\u51b2\u7a81\u65f6\uff0ccpuset \u914d\u7f6e\u4f1a\u9ed8\u8ba4\u3010\u8986\u76d6\u3011\u5176\u5b83\u673a\u5236\u7684\u914d\u7f6e\uff0c\u5185\u6838\u4f1a\u9650\u5b9a\u8fdb\u7a0b\u53ea\u80fd\u4f7f\u7528\u6240\u52a0\u5165\u7684 cpuset \u5141\u8bb8\u7684 cpu \u6838\u4e0e\u5185\u5b58\u8282\u70b9")),(0,p.kt)("h1",{id:"\u91cd\u65b0\u63cf\u8ff0\u95ee\u9898"},"\u91cd\u65b0\u63cf\u8ff0\u95ee\u9898"),(0,p.kt)("p",null,"\u6839\u636e\u4e0a\u9762\u7684\u4fe1\u606f\u80fd\u591f\u786e\u5b9a\u95ee\u9898\u4e3a",(0,p.kt)("strong",{parentName:"p"},"\u6267\u884c\u7684 dpdk \u7a0b\u5e8f\u6240\u5728\u7684 cpuset \u4e0d\u5141\u8bb8\u7a0b\u5e8f\u5728 2 \u53f7\u6838\u4e0a\u6267\u884c"),"\u3002\u67e5\u770b\u7236\u8fdb\u7a0b\u5f52\u5c5e\u7684 cgroup \u5185\u5bb9\u5982\u4e0b\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-bash"},"[root-10:10:27:33] # cat /proc/$$/cgroup\n11:freezer:/\n10:cpu,cpuacct:/\n9:pids:/user.slice/user-1000.slice/session-2.scope\n8:cpuset:/Isolate_Cpus_Service\n7:net_cls,net_prio:/\n6:rdma:/\n5:memory:/user.slice/user-1000.slice/session-2.scope\n4:devices:/user.slice\n3:blkio:/\n2:perf_event:/\n1:name=systemd:/user.slice/user-1000.slice/session-2.scope\n0::/user.slice/user-1000.slice/session-2.scope\n")),(0,p.kt)("p",null,"\u53ef\u4ee5\u770b\u5230\uff0c\u7236\u8fdb\u7a0b\u5f52\u5c5e\u7684 cpuset \u4e3a Isolate_Cpus_Service\uff0c\u6b64 cpuset \u5141\u8bb8\u6267\u884c\u7684 cpu \u6838\u5982\u4e0b\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-bash"},"[root-10:10:27:44] # cat /sys/fs/cgroup/cpuset/Isolate_Cpus_Service/cpuset.cpus\n0-1\n")),(0,p.kt)("p",null,"\u80fd\u591f\u786e\u5b9a\uff0c",(0,p.kt)("strong",{parentName:"p"},"\u5b83\u53ea\u5141\u8bb8\u7a0b\u5e8f\u5728 0 \u6838\u8ddf 1 \u6838\u6267\u884c"),"\uff0c\u4e14",(0,p.kt)("strong",{parentName:"p"},"\u5185\u6838\u4e2d cpuset \u7684\u4f18\u5148\u7ea7\u3010\u9ad8\u4e8e\u3011 sched_setaffinity"),"\uff0c\u8fd9\u6837\u4f7f\u7528 sched_setaffinity \u8bbe\u7f6e\u7ebf\u7a0b cpu \u4eb2\u548c\u6027\u4e3a 2 \u6838\u7684\u65f6\u5019\u5c31\u4f1a\u5931\u8d25\uff01"),(0,p.kt)("h1",{id:"\u4e0d\u4fee\u6539-dpdk-\u7a0b\u5e8f\u8ba9\u7a0b\u5e8f\u80fd\u591f\u6267\u884c\u7684\u65b9\u6cd5"},"\u4e0d\u4fee\u6539 dpdk \u7a0b\u5e8f\u8ba9\u7a0b\u5e8f\u80fd\u591f\u6267\u884c\u7684\u65b9\u6cd5"),(0,p.kt)("p",null,"\u6709\u65f6\u5019\u4e0d\u65b9\u4fbf\u4fee\u6539 dpdk \u7a0b\u5e8f\uff0c\u6b64\u65f6\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539\u7236\u8fdb\u7a0b\uff08\u7ec8\u7aef bash \u7a0b\u5e8f\uff09\u6240\u5c5e\u7684 cpuset \u5141\u8bb8\u7684 cpu \u6838\u3001\u5c06\u7236\u8fdb\u7a0b\u7684 cpuset \u3010\u5207\u6362\u3011\u4e3a top cpuset \u6765\u89e3\u51b3\u6b64\u95ee\u9898\u3002"),(0,p.kt)("p",null,"\u5c06\u7236\u8fdb\u7a0b\u7684 cpuset \u5207\u6362\u4e3a top cpuset\uff0c\u53ef\u4ee5\u6267\u884c\u5982\u4e0b\u547d\u4ee4\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-bash"},"echo $$ > /sys/fs/cgroup/cpuset/tasks\n")),(0,p.kt)("p",null,"\u4fee\u6539\u7236\u8fdb\u7a0b\u6240\u5728\u7684 cpuset \u5141\u8bb8\u7684 cpu \u6838\u4e0e top cpuset \u4e00\u81f4\uff0c\u53ef\u4ee5\u6267\u884c\u5982\u4e0b\u547d\u4ee4\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-bash"},"cat /sys/fs/cgroup/cpuset/cpuset.cpus > /sys/fs/cgroup/cpuset/Isolate_Cpus_Service/cpuset.cpus\n")),(0,p.kt)("h1",{id:"\u4e3a\u4ec0\u4e48\u8981\u8fdb\u884c-cpu-\u9694\u79bb"},"\u4e3a\u4ec0\u4e48\u8981\u8fdb\u884c cpu \u9694\u79bb"),(0,p.kt)("p",null,"dpdk \u7a0b\u5e8f\u5728\u8fdb\u884c 2544 \u6d4b\u6027\u80fd\u7684\u65f6\u5019\uff0c",(0,p.kt)("strong",{parentName:"p"},"\u5f53\u6536\u53d1\u5305\u7ebf\u7a0b\u6240\u5728\u7684 cpu \u6838\u4e0a\u6709\u5176\u5b83\u7528\u6237\u6001\u8fdb\u7a0b\u4e5f\u88ab\u8c03\u5ea6\u8fd0\u884c\u65f6\u5c31\u4f1a\u4ea7\u751f\u6296\u52a8"),"\uff0c\u4ece\u800c\u9020\u6210",(0,p.kt)("strong",{parentName:"p"},"\u4e22\u5305"),"\uff0c\u5bfc\u81f4 ",(0,p.kt)("strong",{parentName:"p"},"2544 \u7684\u6027\u80fd\u53d8\u5dee"),"\uff0c\u4e3a\u4e86\u6d88\u9664\u8fd9\u79cd\u5f71\u54cd\uff0c\u9700\u8981\u5bf9\u7528\u6237\u6001\u7a0b\u5e8f\u8fdb\u884c cpu \u9694\u79bb\u3002"),(0,p.kt)("h1",{id:"cpu-\u6838\u9694\u79bb\u7684\u5bf9\u8c61"},"cpu \u6838\u9694\u79bb\u7684\u5bf9\u8c61"),(0,p.kt)("p",null,"cpu \u6838\u9694\u79bb\u9488\u5bf9\u6240\u6709\u7684\u7528\u6237\u6001\u7a0b\u5e8f\uff0c\u8fd9\u79cd\u9694\u79bb\u7684\u76ee\u7684\u662f\u4e3a\u4e86",(0,p.kt)("strong",{parentName:"p"},"\u8ba9 dpdk \u7a0b\u5e8f\u72ec\u5360\u67d0\u4e2a cpu \u6838"),"\u3002"),(0,p.kt)("p",null,"dpdk \u7a0b\u5e8f\u3010\u7f3a\u7701\u3011\u4e5f\u662f\u88ab\u6267\u884c\u4e86 cpu \u9694\u79bb\u7684\uff0c\u4e3a\u6b64\u9700\u8981\u5c06 dpdk \u7a0b\u5e8f\u5f52\u5c5e\u7684 cpuset \u8bbe\u7f6e\u4e3a top cpuset\uff0c\u4ee5",(0,p.kt)("strong",{parentName:"p"},"\u5141\u8bb8")," dpdk \u7a0b\u5e8f\u4f7f\u7528",(0,p.kt)("strong",{parentName:"p"},"\u6240\u6709\u7684")," cpu \u6838\u4e0e\u5185\u5b58\u8282\u70b9\u3002"),(0,p.kt)("h1",{id:"\u6709\u6ca1\u6709\u5176\u5b83-cpu-\u9694\u79bb\u7684\u65b9\u6cd5"},"\u6709\u6ca1\u6709\u5176\u5b83 cpu \u9694\u79bb\u7684\u65b9\u6cd5\uff1f"),(0,p.kt)("p",null,"\u9664\u4e86\u4e0a\u9762\u7684\u65b9\u6cd5\u5916\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5185\u6838\u542f\u52a8\u53c2\u6570\u6765\u5b9e\u73b0\uff0c\u4f8b\u5982\u5728 grub.conf \u4e2d\uff0c\u5728\u5185\u6838\u5f15\u5bfc\u53c2\u6570\u4e2d\u6dfb\u52a0 isolcpus=xxx \u7684\u914d\u7f6e\uff0c\u7136\u540e\u91cd\u542f\u7cfb\u7edf\u5c31\u80fd\u591f\u751f\u6548\u3002"),(0,p.kt)("p",null,"\u4f46\u662f\u8fd9\u79cd\u65b9\u5f0f\u7684\u64cd\u4f5c\u6210\u672c\u8f83\u9ad8\uff0c\u4e00\u65e6\u5185\u6838\u542f\u52a8\u53c2\u6570\u4fee\u6539\u5b58\u5728\u95ee\u9898\u53ef\u80fd\u65e0\u6cd5\u8fdb\u5165\u7cfb\u7edf\uff0c\u63a8\u8350\u4e13\u4e1a\u4eba\u58eb\u64cd\u4f5c\u3002"))}m.isMDXComponent=!0}}]);