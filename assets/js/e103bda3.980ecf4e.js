"use strict";(self.webpackChunklongyu_website=self.webpackChunklongyu_website||[]).push([[89],{3905:function(e,t,f){f.d(t,{Zo:function(){return o},kt:function(){return u}});var n=f(7294);function r(e,t,f){return t in e?Object.defineProperty(e,t,{value:f,enumerable:!0,configurable:!0,writable:!0}):e[t]=f,e}function a(e,t){var f=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),f.push.apply(f,n)}return f}function c(e){for(var t=1;t<arguments.length;t++){var f=null!=arguments[t]?arguments[t]:{};t%2?a(Object(f),!0).forEach((function(t){r(e,t,f[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(f)):a(Object(f)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(f,t))}))}return e}function d(e,t){if(null==e)return{};var f,n,r=function(e,t){if(null==e)return{};var f,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)f=a[n],t.indexOf(f)>=0||(r[f]=e[f]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)f=a[n],t.indexOf(f)>=0||Object.prototype.propertyIsEnumerable.call(e,f)&&(r[f]=e[f])}return r}var i=n.createContext({}),p=function(e){var t=n.useContext(i),f=t;return e&&(f="function"==typeof e?e(t):c(c({},t),e)),f},o=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var f=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,o=d(e,["components","mdxType","originalType","parentName"]),s=p(f),u=r,x=s["".concat(i,".").concat(u)]||s[u]||l[u]||a;return f?n.createElement(x,c(c({ref:t},o),{},{components:f})):n.createElement(x,c({ref:t},o))}));function u(e,t){var f=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=f.length,c=new Array(a);c[0]=s;var d={};for(var i in t)hasOwnProperty.call(t,i)&&(d[i]=t[i]);d.originalType=e,d.mdxType="string"==typeof e?e:r,c[1]=d;for(var p=2;p<a;p++)c[p]=f[p];return n.createElement.apply(null,c)}return n.createElement.apply(null,f)}s.displayName="MDXCreateElement"},2777:function(e,t,f){f.r(t),f.d(t,{assets:function(){return o},contentTitle:function(){return i},default:function(){return u},frontMatter:function(){return d},metadata:function(){return p},toc:function(){return l}});var n=f(7462),r=f(3366),a=(f(7294),f(3905)),c=["components"],d={},i="pause \u5e27\u5bfc\u81f4 dpdk-16.04 rte_kni crash \u95ee\u9898",p={unversionedId:"\u6280\u672f\u535a\u5ba2/dpdk/dpdk \u95ee\u9898\u6848\u4f8b/rte_kni/pause \u5e27\u5bfc\u81f4 dpdk-16.04 rte_kni crash \u95ee\u9898",id:"\u6280\u672f\u535a\u5ba2/dpdk/dpdk \u95ee\u9898\u6848\u4f8b/rte_kni/pause \u5e27\u5bfc\u81f4 dpdk-16.04 rte_kni crash \u95ee\u9898",title:"pause \u5e27\u5bfc\u81f4 dpdk-16.04 rte_kni crash \u95ee\u9898",description:"\u95ee\u9898\u63cf\u8ff0",source:"@site/docs/\u6280\u672f\u535a\u5ba2/dpdk/dpdk \u95ee\u9898\u6848\u4f8b/rte_kni/pause \u5e27\u5bfc\u81f4 dpdk-16.04 rte_kni crash \u95ee\u9898.md",sourceDirName:"\u6280\u672f\u535a\u5ba2/dpdk/dpdk \u95ee\u9898\u6848\u4f8b/rte_kni",slug:"/\u6280\u672f\u535a\u5ba2/dpdk/dpdk \u95ee\u9898\u6848\u4f8b/rte_kni/pause \u5e27\u5bfc\u81f4 dpdk-16.04 rte_kni crash \u95ee\u9898",permalink:"/longyu.github.io/\u6280\u672f\u535a\u5ba2/dpdk/dpdk \u95ee\u9898\u6848\u4f8b/rte_kni/pause \u5e27\u5bfc\u81f4 dpdk-16.04 rte_kni crash \u95ee\u9898",draft:!1,editUrl:"https://github.com/longyuwlz/longyu.github.io/docs/\u6280\u672f\u535a\u5ba2/dpdk/dpdk \u95ee\u9898\u6848\u4f8b/rte_kni/pause \u5e27\u5bfc\u81f4 dpdk-16.04 rte_kni crash \u95ee\u9898.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"dpdk-16.04 rte_kni \u6a21\u5757\u4e0e\u5185\u6838\u5185\u5b58\u6cc4\u9732\u95ee\u9898",permalink:"/longyu.github.io/\u6280\u672f\u535a\u5ba2/dpdk/dpdk \u95ee\u9898\u6848\u4f8b/rte_kni/dpdk-16.04 rte_kni \u6a21\u5757\u4e0e\u5185\u6838\u5185\u5b58\u6cc4\u9732\u95ee\u9898"},next:{title:"\u591a\u8fdb\u7a0b\u6a21\u578b\u5171\u4eab\u6536\u53d1\u5305\u961f\u5217\u95ee\u9898",permalink:"/longyu.github.io/\u6280\u672f\u535a\u5ba2/dpdk/dpdk \u95ee\u9898\u6848\u4f8b/\u591a\u8fdb\u7a0b\u6a21\u578b\u95ee\u9898/dpdk \u591a\u8fdb\u7a0b\u6a21\u578b\u5171\u4eab\u6536\u53d1\u5305\u961f\u5217\u95ee\u9898"}},o={},l=[{value:"\u95ee\u9898\u63cf\u8ff0",id:"\u95ee\u9898\u63cf\u8ff0",level:2},{value:"\u53cd\u6c47\u7f16 rte_kni.ko",id:"\u53cd\u6c47\u7f16-rte_kniko",level:2},{value:"\u6c47\u7f16\u5206\u6790\u7ed3\u679c\u5982\u4e0b\uff1a",id:"\u6c47\u7f16\u5206\u6790\u7ed3\u679c\u5982\u4e0b",level:2},{value:"\u6839\u672c\u539f\u56e0",id:"\u6839\u672c\u539f\u56e0",level:2},{value:"\u89e3\u51b3\u65b9\u6cd5",id:"\u89e3\u51b3\u65b9\u6cd5",level:2}],s={toc:l};function u(e){var t=e.components,f=(0,r.Z)(e,c);return(0,a.kt)("wrapper",(0,n.Z)({},s,f,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"pause-\u5e27\u5bfc\u81f4-dpdk-1604-rte_kni-crash-\u95ee\u9898"},"pause \u5e27\u5bfc\u81f4 dpdk-16.04 rte_kni crash \u95ee\u9898"),(0,a.kt)("h2",{id:"\u95ee\u9898\u63cf\u8ff0"},"\u95ee\u9898\u63cf\u8ff0"),(0,a.kt)("p",null,"\u7cfb\u7edf\u8fd0\u884c\u65f6\uff0c\u5185\u6838 crash\uff0coops \u4fe1\u606f\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"<1>[17934.849450] BUG: unable to handle kernel NULL pointer dereference at 0000000000000030\n<1>[17934.849530] IP: [<ffffffffa009b135>] ixgbe_update_stats+0x38b/0xc7f [rte_kni]\n.........\n<4>[17934.850140] RIP: 0010:[<ffffffffa009b135>]  [<ffffffffa009b135>] ixgbe_update_stats+0x38b/0xc7f [rte_kni]\n<4>[17934.850211] RSP: 0018:ffff8806feeb7c38  EFLAGS: 00010297\n<4>[17934.850243] RAX: 0000000000000000 RBX: 00000000ffffffff RCX: 0000000000000000\n<4>[17934.850278] RDX: ffff8806fed5c640 RSI: ffff8806fed5c000 RDI: ffff8806feeb7c58\n<4>[17934.850314] RBP: ffff8806feeb7c78 R08: ffff8806fed5c648 R09: 00000007fffffff8\n<4>[17934.850349] R10: 0000000000000000 R11: 00000000fffffff8 R12: ffff8806fed5c640\n<4>[17934.850385] R13: ffff8806fed5c0e0 R14: ffff8806fedc0e00 R15: ffff8806feeb7d38\n<4>[17934.850421] FS:  00007f38dd3e8700(0000) GS:ffff880840240000(0000) knlGS:0000000000000000\n<4>[17934.850459] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n<4>[17934.850492] CR2: 0000000000000030 CR3: 000000057cfec000 CR4: 00000000000406e0\n<4>[17934.850528] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n<4>[17934.850610] DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400\n<4>[17934.850690] Process ethtool (pid: 14817, threadinfo ffff8806feeb6000, task ffff88069e2373d0)\n<0>[17934.850817] Stack:\n<4>[17934.850888]  0000000000000000 0000000000000000 0000000000000000 0000000000000000\n<4>[17934.851103]  ffff8806fedc0e00 ffff8806fed5c640 ffff8806fed5c0e0 ffff8806fedc0e00\n<4>[17934.851316]  ffff8806feeb7ca8 ffffffffa00a0d90 ffff8806feeb7cb8 ffff8806fed61000\n<0>[17934.851531] Call Trace:\n<4>[17934.851620]  [<ffffffffa00a0d90>] ixgbe_get_ethtool_stats+0x26/0xf8 [rte_kni]\n<4>[17934.851724]  [<ffffffffa00dd688>] kni_get_ethtool_stats+0x20/0x22 [rte_kni]\n<4>[17934.851812]  [<ffffffff8147e1af>] dev_ethtool+0xef6/0x1c57\n<4>[17934.851895]  [<ffffffff8147c0d0>] dev_ioctl+0x4db/0x61a\n<4>[17934.851977]  [<ffffffff8103abf7>] ? get_parent_ip+0x11/0x41\n<4>[17934.852060]  [<ffffffff81273019>] ? __percpu_counter_add+0x70/0x93\n<4>[17934.852146]  [<ffffffff81467641>] sock_do_ioctl+0x38/0x43\n<4>[17934.852229]  [<ffffffff81467a24>] sock_ioctl+0x1e9/0x1f6\n<4>[17934.852314]  [<ffffffff810de1e6>] do_vfs_ioctl+0x418/0x459\n<4>[17934.852398]  [<ffffffff810de278>] sys_ioctl+0x51/0x75\n<4>[17934.852482]  [<ffffffff8158fffb>] system_call_fastpath+0x16/0x1b\n<0>[17934.852562] Code: 08 8b 80 68 cf 00 00 eb 06 8b 80 a8 41 00 00 89 c1 48 01 8a 40 14 00 00 85 c0 0f 84 a6 00 00 00 31 c0 eb 0e 49 8b 88 38 02 00 00 <f0> 80 61 30 fb ff c0 49 83 c0 08 3b 82 20 02 00 00 7c e6 e9 83 \n<1>[17934.854260] RIP  [<ffffffffa009b135>] ixgbe_update_stats+0x38b/0xc7f [rte_kni]\n<4>[17934.854421]  RSP <ffff8806feeb7c38>\n<0>[17934.854495] CR2: 0000000000000030\n")),(0,a.kt)("p",null,"\u5806\u6808\u8868\u660e\uff0c\u95ee\u9898\u51fa\u5728\u6267\u884c ethtool -S \u83b7\u53d6 82599 \u7f51\u5361\u7edf\u8ba1\u8ba1\u6570\u7684\u8fc7\u7a0b\u4e2d\u3002"),(0,a.kt)("h2",{id:"\u53cd\u6c47\u7f16-rte_kniko"},"\u53cd\u6c47\u7f16 rte_kni.ko"),(0,a.kt)("p",null,"objdump \u53cd\u6c47\u7f16 rte_kni.ko \u5f97\u5230\u5982\u4e0b\u76f8\u5173\u4fe1\u606f\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-assemble"},"    10e7:       8b 82 0c 12 00 00       mov    0x120c(%rdx),%eax\n    10ed:       83 f8 01                cmp    $0x1,%eax\n    10f0:       74 09                   je     10fb <ixgbe_update_stats+0x351>\n    10f2:       83 f8 03                cmp    $0x3,%eax\n    10f5:       0f 85 d5 00 00 00       jne    11d0 <ixgbe_update_stats+0x426>\n    10fb:       83 ba 50 0f 00 00 01    cmpl   $0x1,0xf50(%rdx)\n    1102:       48 8b 82 80 0d 00 00    mov    0xd80(%rdx),%rax\n    1109:       75 08                   jne    1113 <ixgbe_update_stats+0x369>\n    110b:       8b 80 68 cf 00 00       mov    0xcf68(%rax),%eax\n    1111:       eb 06                   jmp    1119 <ixgbe_update_stats+0x36f>\n    1113:       8b 80 a8 41 00 00       mov    0x41a8(%rax),%eax\n    1119:       89 c1                   mov    %eax,%ecx\n    111b:       48 01 8a 40 14 00 00    add    %rcx,0x1440(%rdx)\n    1122:       85 c0                   test   %eax,%eax\n    1124:       0f 84 a6 00 00 00       je     11d0 <ixgbe_update_stats+0x426>\n    112a:       31 c0                   xor    %eax,%eax\n    112c:       eb 0e                   jmp    113c <ixgbe_update_stats+0x392>\n    112e:       49 8b 88 38 02 00 00    mov    0x238(%r8),%rcx\n    1135:       f0 80 61 30 fb          lock andb $0xfb,0x30(%rcx)\n    113a:       ff c0                   inc    %eax\n    113c:       49 83 c0 08             add    $0x8,%r8\n    1140:       3b 82 20 02 00 00       cmp    0x220(%rdx),%eax\n    1146:       7c e6                   jl     112e <ixgbe_update_stats+0x384>\n    1148:       e9 83 00 00 00          jmpq   11d0 <ixgbe_update_stats+0x426>\n    114d:       83 ba 50 0f 00 00 01    cmpl   $0x1,0xf50(%rdx)\n    1154:       48 89 c1                mov    %rax,%rcx\n    1157:       74 07                   je     1160 <ixgbe_update_stats+0x3b6\n")),(0,a.kt)("p",null,"\u76f8\u5173\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"static void ixgbe_update_xoff_rx_lfc(struct ixgbe_adapter *adapter)\n{\n    struct ixgbe_hw *hw = &adapter->hw;\n    struct ixgbe_hw_stats *hwstats = &adapter->stats;\n    u32 data;\n\n    if ((hw->fc.current_mode != ixgbe_fc_full) &&\n        (hw->fc.current_mode != ixgbe_fc_rx_pause))\n        return;\n\n    switch (hw->mac.type) {\n    case ixgbe_mac_82598EB:\n        data = IXGBE_READ_REG(hw, IXGBE_LXOFFRXC);\n        break;\n    default:\n        data = IXGBE_READ_REG(hw, IXGBE_LXOFFRXCNT);\n    }\n    hwstats->lxoffrxc += data;\n\n    /* refill credits (no tx hang) if we received xoff */\n    if (!data)\n        return;\n\n    for (i = 0; i < adapter->num_tx_queues; i++)\n        clear_bit(__IXGBE_HANG_CHECK_ARMED,\n              &adapter->tx_ring[i]->state); \n}\n")),(0,a.kt)("h2",{id:"\u6c47\u7f16\u5206\u6790\u7ed3\u679c\u5982\u4e0b"},"\u6c47\u7f16\u5206\u6790\u7ed3\u679c\u5982\u4e0b\uff1a"),(0,a.kt)("p",null,"10e7~10f5"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"    if ((hw->fc.current_mode != ixgbe_fc_full) &&\n        (hw->fc.current_mode != ixgbe_fc_rx_pause))\n        return;\n")),(0,a.kt)("p",null,"10fb~1119"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"    switch (hw->mac.type) {\n    case ixgbe_mac_82598EB:\n        data = IXGBE_READ_REG(hw, IXGBE_LXOFFRXC);\n        break;\n    default:\n        data = IXGBE_READ_REG(hw, IXGBE_LXOFFRXCNT);\n    }\n")),(0,a.kt)("p",null,"111b~1124"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"    hwstats->lxoffrxc += data;\n\n    /* refill credits (no tx hang) if we received xoff */\n    if (!data)\n        return;\n")),(0,a.kt)("p",null,"112a~1148"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"    for (i = 0; i < adapter->num_tx_queues; i++)\n        clear_bit(__IXGBE_HANG_CHECK_ARMED,\n              &adapter->tx_ring[i]->state); \n")),(0,a.kt)("p",null,"\u6839\u636e crash \u4fe1\u606f\uff0c\u51fa\u95ee\u9898\u7684\u6307\u4ee4\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-assemble"},"    1135:       f0 80 61 30 fb          lock andb $0xfb,0x30(%rcx)\n")),(0,a.kt)("h2",{id:"\u6839\u672c\u539f\u56e0"},"\u6839\u672c\u539f\u56e0"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"rte_kni.ko")," \u4e2d ixgbe \u6a21\u5757 ",(0,a.kt)("strong",{parentName:"p"},"tx_ring")," \u6ca1\u6709\u521d\u59cb\u5316\uff0c\u5176\u503c\u4e3a NULL\uff0c\u5f53\u7f51\u5361\u6536\u5230\u4e00\u4e2a XOFF \u62a5\u6587\u5bfc\u81f4\u7f51\u5361\u5bc4\u5b58\u5668\u7edf\u8ba1\u4e0d\u4e3a 0 \u7684\u65f6\u5019\uff0c\u6e05\u9664 adapter->tx_ring \u4e2d\u7684 state \u6807\u5fd7\u4f4d\u65f6\uff0c\u7531\u4e8e ",(0,a.kt)("strong",{parentName:"p"},"tx_ring \u4e3a NULL\uff0cadapter->tx_ring","[i]","->state \u7684\u5730\u5740\u4e3a 0x30 (\u975e\u6cd5\u5730\u5740)\uff0c\u5199\u5165\u6b64\u5730\u5740\u5bfc\u81f4\u5185\u6838 crash!")),(0,a.kt)("h2",{id:"\u89e3\u51b3\u65b9\u6cd5"},"\u89e3\u51b3\u65b9\u6cd5"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u4e0d\u8bbe\u5b9a tx_ring","[i]","->state \u53d8\u91cf\uff01")))}u.isMDXComponent=!0}}]);