"use strict";(self.webpackChunklongyu_website=self.webpackChunklongyu_website||[]).push([[8095],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return _}});var l=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,l,r=function(e,t){if(null==e)return{};var n,l,r={},p=Object.keys(e);for(l=0;l<p.length;l++)n=p[l],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(l=0;l<p.length;l++)n=p[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=l.createContext({}),d=function(e){var t=l.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=d(e.components);return l.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},c=l.forwardRef((function(e,t){var n=e.components,r=e.mdxType,p=e.originalType,o=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),c=d(n),_=r,k=c["".concat(o,".").concat(_)]||c[_]||u[_]||p;return n?l.createElement(k,a(a({ref:t},s),{},{components:n})):l.createElement(k,a({ref:t},s))}));function _(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var p=n.length,a=new Array(p);a[0]=c;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:r,a[1]=i;for(var d=2;d<p;d++)a[d]=n[d];return l.createElement.apply(null,a)}return l.createElement.apply(null,n)}c.displayName="MDXCreateElement"},4416:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return o},default:function(){return _},frontMatter:function(){return i},metadata:function(){return d},toc:function(){return u}});var l=n(7462),r=n(3366),p=(n(7294),n(3905)),a=["components"],i={},o="vpp up \u67d0 x710 bypass \u7f51\u5361\u521d\u59cb\u5316\u5931\u8d25\u95ee\u9898\u5b9a\u4f4d.md",d={unversionedId:"\u6280\u672f\u535a\u5ba2/dpdk/dpdk \u95ee\u9898\u6848\u4f8b/\u7a0b\u5e8f\u521d\u59cb\u5316\u95ee\u9898/vpp up \u67d0 x710 bypass \u7f51\u5361\u521d\u59cb\u5316\u5931\u8d25\u95ee\u9898\u5b9a\u4f4d",id:"\u6280\u672f\u535a\u5ba2/dpdk/dpdk \u95ee\u9898\u6848\u4f8b/\u7a0b\u5e8f\u521d\u59cb\u5316\u95ee\u9898/vpp up \u67d0 x710 bypass \u7f51\u5361\u521d\u59cb\u5316\u5931\u8d25\u95ee\u9898\u5b9a\u4f4d",title:"vpp up \u67d0 x710 bypass \u7f51\u5361\u521d\u59cb\u5316\u5931\u8d25\u95ee\u9898\u5b9a\u4f4d.md",description:"\u95ee\u9898\u63cf\u8ff0",source:"@site/docs/\u6280\u672f\u535a\u5ba2/dpdk/dpdk \u95ee\u9898\u6848\u4f8b/\u7a0b\u5e8f\u521d\u59cb\u5316\u95ee\u9898/vpp up \u67d0 x710 bypass \u7f51\u5361\u521d\u59cb\u5316\u5931\u8d25\u95ee\u9898\u5b9a\u4f4d.md",sourceDirName:"\u6280\u672f\u535a\u5ba2/dpdk/dpdk \u95ee\u9898\u6848\u4f8b/\u7a0b\u5e8f\u521d\u59cb\u5316\u95ee\u9898",slug:"/\u6280\u672f\u535a\u5ba2/dpdk/dpdk \u95ee\u9898\u6848\u4f8b/\u7a0b\u5e8f\u521d\u59cb\u5316\u95ee\u9898/vpp up \u67d0 x710 bypass \u7f51\u5361\u521d\u59cb\u5316\u5931\u8d25\u95ee\u9898\u5b9a\u4f4d",permalink:"/longyu.github.io/\u6280\u672f\u535a\u5ba2/dpdk/dpdk \u95ee\u9898\u6848\u4f8b/\u7a0b\u5e8f\u521d\u59cb\u5316\u95ee\u9898/vpp up \u67d0 x710 bypass \u7f51\u5361\u521d\u59cb\u5316\u5931\u8d25\u95ee\u9898\u5b9a\u4f4d",draft:!1,editUrl:"https://github.com/longyuwlz/longyu.github.io/docs/\u6280\u672f\u535a\u5ba2/dpdk/dpdk \u95ee\u9898\u6848\u4f8b/\u7a0b\u5e8f\u521d\u59cb\u5316\u95ee\u9898/vpp up \u67d0 x710 bypass \u7f51\u5361\u521d\u59cb\u5316\u5931\u8d25\u95ee\u9898\u5b9a\u4f4d.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"dpdk\u7a0b\u5e8f\u542f\u52a8\u987a\u5e8f\u5f15\u53d1\u7684\u8840\u6848",permalink:"/longyu.github.io/\u6280\u672f\u535a\u5ba2/dpdk/dpdk \u95ee\u9898\u6848\u4f8b/\u7a0b\u5e8f\u521d\u59cb\u5316\u95ee\u9898/dpdk\u7a0b\u5e8f\u542f\u52a8\u987a\u5e8f\u5f15\u53d1\u7684\u8840\u6848"},next:{title:"\u5173\u95ed stdout \u5f15\u53d1\u7684\u707e\u96be",permalink:"/longyu.github.io/\u6280\u672f\u535a\u5ba2/dpdk/dpdk \u95ee\u9898\u6848\u4f8b/\u7a0b\u5e8f\u521d\u59cb\u5316\u95ee\u9898/\u5173\u95ed stdout \u5f15\u53d1\u7684\u707e\u96be"}},s={},u=[{value:"\u95ee\u9898\u63cf\u8ff0",id:"\u95ee\u9898\u63cf\u8ff0",level:2},{value:"\u6536\u96c6\u4fe1\u606f",id:"\u6536\u96c6\u4fe1\u606f",level:2},{value:"1. vpp \u914d\u7f6e\u6587\u4ef6\u4e2d dpdk \u63a5\u53e3\u76f8\u5173\u914d\u7f6e\u9879\u76ee",id:"1-vpp-\u914d\u7f6e\u6587\u4ef6\u4e2d-dpdk-\u63a5\u53e3\u76f8\u5173\u914d\u7f6e\u9879\u76ee",level:3},{value:"2. lspci \u67e5\u770b\u5230\u7684\u7f51\u5361\u4fe1\u606f",id:"2-lspci-\u67e5\u770b\u5230\u7684\u7f51\u5361\u4fe1\u606f",level:3},{value:"3. lspci -xxx \u83b7\u53d6\u5230\u7684\u7f51\u5361\u914d\u7f6e\u7a7a\u95f4\u4fe1\u606f",id:"3-lspci--xxx-\u83b7\u53d6\u5230\u7684\u7f51\u5361\u914d\u7f6e\u7a7a\u95f4\u4fe1\u606f",level:3},{value:"vpp \u4ee3\u7801\u5206\u6790",id:"vpp-\u4ee3\u7801\u5206\u6790",level:2},{value:"\u95ee\u9898\u5b9a\u4f4d\u7684\u521d\u6b65\u7ed3\u8bba",id:"\u95ee\u9898\u5b9a\u4f4d\u7684\u521d\u6b65\u7ed3\u8bba",level:2},{value:"\u590d\u73b0\u65b9\u6cd5",id:"\u590d\u73b0\u65b9\u6cd5",level:2},{value:"\u89e3\u51b3\u8ba1\u5212",id:"\u89e3\u51b3\u8ba1\u5212",level:2},{value:"\u6269\u5c55 log \u4fe1\u606f",id:"\u6269\u5c55-log-\u4fe1\u606f",level:2},{value:"1. dpdk \u8bbe\u7f6e\u4e0d\u540c loglevel \u7684\u6253\u5370\u7ea7\u522b",id:"1-dpdk-\u8bbe\u7f6e\u4e0d\u540c-loglevel-\u7684\u6253\u5370\u7ea7\u522b",level:3},{value:"2. vpp \u4e2d\u67e5\u770b dpdk \u521d\u59cb\u5316 log \u4fe1\u606f\u7684\u547d\u4ee4",id:"2-vpp-\u4e2d\u67e5\u770b-dpdk-\u521d\u59cb\u5316-log-\u4fe1\u606f\u7684\u547d\u4ee4",level:3},{value:"\u95ee\u9898\uff01\uff01\uff01",id:"\u95ee\u9898",level:2},{value:"\u590d\u73b0\u8fc7\u7a0b\u8bb0\u5f55",id:"\u590d\u73b0\u8fc7\u7a0b\u8bb0\u5f55",level:2},{value:"vpp \u8fd0\u884c log",id:"vpp-\u8fd0\u884c-log",level:3},{value:"dpdk \u9a71\u52a8\u4e2d\u51fa\u95ee\u9898\u7684\u5730\u65b9",id:"dpdk-\u9a71\u52a8\u4e2d\u51fa\u95ee\u9898\u7684\u5730\u65b9",level:2},{value:"l2fwd \u7a0b\u5e8f\u6d4b\u8bd5",id:"l2fwd-\u7a0b\u5e8f\u6d4b\u8bd5",level:2},{value:"dpdk \u4e2d\u76f8\u5173\u7684 patch",id:"dpdk-\u4e2d\u76f8\u5173\u7684-patch",level:2},{value:"\u8865\u4e01\u4ee3\u7801",id:"\u8865\u4e01\u4ee3\u7801",level:2},{value:"\u6d4b\u8bd5\u8bb0\u5f55",id:"\u6d4b\u8bd5\u8bb0\u5f55",level:2}],c={toc:u};function _(e){var t=e.components,n=(0,r.Z)(e,a);return(0,p.kt)("wrapper",(0,l.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("h1",{id:"vpp-up-\u67d0-x710-bypass-\u7f51\u5361\u521d\u59cb\u5316\u5931\u8d25\u95ee\u9898\u5b9a\u4f4dmd"},"vpp up \u67d0 x710 bypass \u7f51\u5361\u521d\u59cb\u5316\u5931\u8d25\u95ee\u9898\u5b9a\u4f4d.md"),(0,p.kt)("h2",{id:"\u95ee\u9898\u63cf\u8ff0"},"\u95ee\u9898\u63cf\u8ff0"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"\u8f6f\u4ef6\u7248\u672c"),"\uff1a\nvpp"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"\u7f51\u5361\u7c7b\u578b\u4e0e\u5bf9\u7aef\u8bbe\u5907"),"\uff1a"),(0,p.kt)("p",null,"\u67d0\u4e07\u5146 x710 bypass \u5361\u5bf9\u7aef\u8fde\u63a5\u6d4b\u8bd5\u4eea"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"\u95ee\u9898\u73b0\u8c61"),"\uff1a"),(0,p.kt)("p",null,"\u91cd\u542f vpp\uff0cx710 \u7f51\u5361\u706f\u4e0d\u4eae"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"vppcli \u67e5\u770b\u63a5\u53e3\u4fe1\u606f"),": "),(0,p.kt)("p",null,"\u63a5\u53e3\u72b6\u6001\u4e3a error\uff0c\u5e76\u62a5 pmd-init-fail \u7684\u9519\u8bef"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"\u590d\u73b0\u65b9\u6cd5\u4e0e\u6982\u7387"),"\uff1a"),(0,p.kt)("p",null,"\u91cd\u542f vpp \u5c31\u80fd\u591f\u590d\u73b0\uff0c\u590d\u73b0\u6982\u7387\u8f83\u5927"),(0,p.kt)("h2",{id:"\u6536\u96c6\u4fe1\u606f"},"\u6536\u96c6\u4fe1\u606f"),(0,p.kt)("h3",{id:"1-vpp-\u914d\u7f6e\u6587\u4ef6\u4e2d-dpdk-\u63a5\u53e3\u76f8\u5173\u914d\u7f6e\u9879\u76ee"},"1. vpp \u914d\u7f6e\u6587\u4ef6\u4e2d dpdk \u63a5\u53e3\u76f8\u5173\u914d\u7f6e\u9879\u76ee"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-maunal"},"dpdk\n{\n  uio-driver igb_uio\n        dev 0000:04:00.0\n        {\n            name vEth0\n            num-rx-desc 1024\n        }\n        dev 0000:04:00.1\n        {\n            name vEth1\n            num-rx-desc 1024\n        }\n}\n")),(0,p.kt)("h3",{id:"2-lspci-\u67e5\u770b\u5230\u7684\u7f51\u5361\u4fe1\u606f"},"2. lspci \u67e5\u770b\u5230\u7684\u7f51\u5361\u4fe1\u606f"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-bash"},"04:00.0 Ethernet controller: Intel Corporation Ethernet Controller X710 for\n10GbE SFP+ (rev 02)\n04:00.1 Ethernet controller: Intel Corporation Ethernet Controller X710 for\n10GbE SFP+ (rev 02)\n")),(0,p.kt)("h3",{id:"3-lspci--xxx-\u83b7\u53d6\u5230\u7684\u7f51\u5361\u914d\u7f6e\u7a7a\u95f4\u4fe1\u606f"},"3. lspci -xxx \u83b7\u53d6\u5230\u7684\u7f51\u5361\u914d\u7f6e\u7a7a\u95f4\u4fe1\u606f"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-bash"},"[root@localhost] # lspci -xxx -s 04:00.0\n04:00.0 Ethernet controller: Intel Corporation Ethernet Controller X710 for\n10GbE SFP+ (rev 02)\n00: 86 80 72 15 06 04 10 00 02 00 00 02 10 00 80 00\n10: 0c 00 00 db 00 00 00 00 00 00 00 00 0c 80 80 db\n20: 00 00 00 00 00 00 00 00 00 00 00 00 bb 15 00 00\n30: 00 00 28 df 40 00 00 00 00 00 00 00 0b 01 00 00\n40: 01 50 23 c8 08 20 00 00 00 00 00 00 00 00 00 00\n50: 05 70 80 01 00 00 00 00 00 00 00 00 00 00 00 00\n60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n70: 11 a0 80 80 03 00 00 00 03 10 00 00 00 00 00 00\n80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\na0: 10 00 02 00 e4 8c 00 10 30 21 09 00 43 58 42 00\nb0: 40 00 43 10 00 00 00 00 00 00 00 00 00 00 00 00\nc0: 00 00 00 00 1f 00 00 00 00 00 00 00 0e 00 00 00\nd0: 01 00 1e 00 00 00 00 00 00 00 00 00 00 00 00 00\ne0: 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nf0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n\n[root@localhost] # lspci -xxx -s 04:00.1\n04:00.1 Ethernet controller: Intel Corporation Ethernet Controller X710 for\n10GbE SFP+ (rev 02)\n00: 86 80 72 15 06 04 10 00 02 00 00 02 10 00 80 00\n10: 0c 00 80 da 00 00 00 00 00 00 00 00 0c 00 80 db\n20: 00 00 00 00 00 00 00 00 00 00 00 00 bb 15 00 00\n30: 00 00 20 df 40 00 00 00 00 00 00 00 0b 01 00 00\n40: 01 50 23 c8 08 20 00 00 00 00 00 00 00 00 00 00\n50: 05 70 80 01 00 00 00 00 00 00 00 00 00 00 00 00\n60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n70: 11 a0 80 80 03 00 00 00 03 10 00 00 00 00 00 00\n80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\na0: 10 00 02 00 e4 8c 00 10 30 21 09 00 43 58 42 00\nb0: 40 00 43 10 00 00 00 00 00 00 00 00 00 00 00 00\nc0: 00 00 00 00 1f 00 00 00 00 00 00 00 0e 00 00 00\nd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\ne0: 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nf0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n")),(0,p.kt)("h2",{id:"vpp-\u4ee3\u7801\u5206\u6790"},"vpp \u4ee3\u7801\u5206\u6790"),(0,p.kt)("p",null,"\u76f8\u5173\u51fd\u6570\u4e3a dpdk_device_setup \u51fd\u6570\uff0c\u5173\u952e\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-c"},"  if (xd->flags & DPDK_DEVICE_FLAG_ADMIN_UP)\n    dpdk_device_start (xd);\n\n  if (vec_len (xd->errors))\n    goto error;\n\n  return;\n\nerror:\n  xd->flags |= DPDK_DEVICE_FLAG_PMD_INIT_FAIL;\n  sw->flags |= VNET_SW_INTERFACE_FLAG_ERROR;\n\n")),(0,p.kt)("p",null,"\u8c03\u7528 ",(0,p.kt)("strong",{parentName:"p"},"dpdk_device_start")," \u5931\u8d25\u540e\u4f1a\u8bbe\u7f6e ",(0,p.kt)("strong",{parentName:"p"},"xd->flags")," \u7684\u6807\u5fd7\uff0c\u6807\u5fd7\u95ee\u9898\u4e3a ",(0,p.kt)("strong",{parentName:"p"},"pmd_init_fail"),"\u3002"),(0,p.kt)("h2",{id:"\u95ee\u9898\u5b9a\u4f4d\u7684\u521d\u6b65\u7ed3\u8bba"},"\u95ee\u9898\u5b9a\u4f4d\u7684\u521d\u6b65\u7ed3\u8bba"),(0,p.kt)("p",null,"\u51fa\u95ee\u9898\u7684\u53e3\u53ca\u5176 pci \u53f7\u5982\u4e0b\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-bash"},"vEth0   0000:04:00.0\nvEth1   0000:04:00.1\n")),(0,p.kt)("p",null,"\u9605\u8bfb\u4ee3\u7801\u786e\u5b9a\uff0c\u5f53\u8fd9\u4e24\u4e2a\u53e3 start \u5931\u8d25\u65f6\u4f1a\u89e6\u53d1\u8fd9\u4e2a\u95ee\u9898\u3002\u8bfb\u53d6\u7f51\u5361\u914d\u7f6e\u7a7a\u95f4\uff0c\u786e\u8ba4\u914d\u7f6e\u7a7a\u95f4\u5185\u5bb9\u6b63\u5e38\uff0c\u4e0d\u786e\u5b9a\u5931\u8d25\u7684\u4f4d\u7f6e\u53ca\u539f\u56e0\u3002"),(0,p.kt)("h2",{id:"\u590d\u73b0\u65b9\u6cd5"},"\u590d\u73b0\u65b9\u6cd5"),(0,p.kt)("p",null,"\u591a\u6b21\u6740\u6389 vpp\uff0c\u4f7f\u7528 vppcli \u6267\u884c show hardware-interfaces x/x \u67e5\u770b\u62a5\u9519\u4fe1\u606f\uff01"),(0,p.kt)("h2",{id:"\u89e3\u51b3\u8ba1\u5212"},"\u89e3\u51b3\u8ba1\u5212"),(0,p.kt)("ol",null,(0,p.kt)("li",{parentName:"ol"},"\u4fee\u6539 dpdk \u9a71\u52a8\uff0c\u6dfb\u52a0 x710 \u9a71\u52a8 log \u4fe1\u606f\uff0c\u91cd\u65b0\u7f16\u8bd1 vpp \u590d\u73b0\u95ee\u9898\uff08\u8bbe\u7f6e loglevel \u5373\u53ef\uff09"),(0,p.kt)("li",{parentName:"ol"},"\u590d\u73b0\u540e\u89c2\u6d4b\u5931\u8d25\u4f4d\u7f6e\uff0c\u6392\u67e5\u662f\u8f6f\u4ef6\u95ee\u9898\u8fd8\u662f\u786c\u4ef6\u95ee\u9898"),(0,p.kt)("li",{parentName:"ol"},"\u4f7f\u7528 l2fwd \u8fd0\u884c 10 \u6b21\uff0c\u89c2\u5bdf\u662f\u5426\u6709\u62a5\u9519\u4fe1\u606f")),(0,p.kt)("h2",{id:"\u6269\u5c55-log-\u4fe1\u606f"},"\u6269\u5c55 log \u4fe1\u606f"),(0,p.kt)("h3",{id:"1-dpdk-\u8bbe\u7f6e\u4e0d\u540c-loglevel-\u7684\u6253\u5370\u7ea7\u522b"},"1. dpdk \u8bbe\u7f6e\u4e0d\u540c loglevel \u7684\u6253\u5370\u7ea7\u522b"),(0,p.kt)("p",null,"\u76f8\u5173\u53c2\u6570\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-bash"},"  --log-level=<int>   Set global log level\n  --log-level=<type-match>:<int>\n")),(0,p.kt)("p",null,"i40e \u9a71\u52a8\u76f8\u5173 log-level type\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-bash"},"pmd.net.i40e.init\n\npmd.net.i40e.driver\n\npmd.net.i40e.rx\n")),(0,p.kt)("h3",{id:"2-vpp-\u4e2d\u67e5\u770b-dpdk-\u521d\u59cb\u5316-log-\u4fe1\u606f\u7684\u547d\u4ee4"},"2. vpp \u4e2d\u67e5\u770b dpdk \u521d\u59cb\u5316 log \u4fe1\u606f\u7684\u547d\u4ee4"),(0,p.kt)("p",null,"vppcli \u4e2d\u6267\u884c\u547d\u4ee4\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-bash"},"show log\n")),(0,p.kt)("h2",{id:"\u95ee\u9898"},"\u95ee\u9898\uff01\uff01\uff01"),(0,p.kt)("p",null,"vpp \u4e2d\u80fd\u591f\u914d\u7f6e\u7684 dpdk \u53c2\u6570\u662f\u56fa\u5b9a\u7684\uff0c\u9700\u8981\u5185\u90e8\u4ee3\u7801\u89e3\u6790\uff0c\u4e0d\u80fd\u76f4\u63a5\u8bbe\u7f6e\uff01"),(0,p.kt)("p",null,"\u89e3\u51b3\u65b9\u6cd5\uff1a"),(0,p.kt)("ol",null,(0,p.kt)("li",{parentName:"ol"},"\u5c1d\u8bd5\u4f7f\u7528 l2fwd \u6765\u590d\u73b0\u95ee\u9898"),(0,p.kt)("li",{parentName:"ol"},"\u7f16\u8bd1\u5e26\u8c03\u8bd5\u4fe1\u606f\u7684 dpdk \u5e93\uff0c\u5e76\u4fee\u6539 i40e \u4ee3\u7801\uff0c\u5c06 i40e \u9a71\u52a8\u7684 log \u7ea7\u522b\u8c03\u4f4e\u3002")),(0,p.kt)("p",null,"\u7b2c\u4e8c\u70b9\u95ee\u9898\uff0c\u4f7f\u7528\u5982\u4e0b patch \u89e3\u51b3\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-c"},'        /* If link needs to go up and it is in autoneg mode the speed is OK,\n@@ -2969,6 +2985,7 @@\n                            &oes->tx_errors, &nes->tx_errors);\n        vsi->offset_loaded = true;\n\n@@ -12895,10 +12915,10 @@\n {\n        i40e_logtype_init = rte_log_register("pmd.net.i40e.init");\n        if (i40e_logtype_init >= 0)\n-               rte_log_set_level(i40e_logtype_init, RTE_LOG_NOTICE);\n+               rte_log_set_level(i40e_logtype_init, RTE_LOG_DEBUG);\n        i40e_logtype_driver = rte_log_register("pmd.net.i40e.driver");\n        if (i40e_logtype_driver >= 0)\n-               rte_log_set_level(i40e_logtype_driver, RTE_LOG_NOTICE);\n+               rte_log_set_level(i40e_logtype_driver, RTE_LOG_DEBUG);\n\n #ifdef RTE_LIBRTE_I40E_DEBUG_RX\n        i40e_logtype_rx = rte_log_register("pmd.net.i40e.rx");\n')),(0,p.kt)("h2",{id:"\u590d\u73b0\u8fc7\u7a0b\u8bb0\u5f55"},"\u590d\u73b0\u8fc7\u7a0b\u8bb0\u5f55"),(0,p.kt)("p",null,"\u642d\u5efa\u4e86\u4e2a\u672c\u5730\u73af\u5883\uff0c\u4f7f\u7528 l2fwd \u4e0e vpp \u590d\u73b0\u95ee\u9898\uff0c\u4e00\u76f4\u590d\u73b0\u4e0d\u51fa\u6765\u3002\u534f\u8c03\u6d4b\u8bd5\u4eea\uff0c\u5c06 x710 \u8fde\u63a5\u5230\u6d4b\u8bd5\u4eea\u4e0a\u7684\u53e3\u540e\uff0cvpp \u80fd\u591f\u590d\u73b0\u51fa\u6765\uff0c",(0,p.kt)("strong",{parentName:"p"},"\u8868\u660e\u95ee\u9898\u4e0e\u6d4b\u8bd5\u4eea\u5f3a\u76f8\u5173\u3002")),(0,p.kt)("h3",{id:"vpp-\u8fd0\u884c-log"},"vpp \u8fd0\u884c log"),(0,p.kt)("p",null,"\u51fa\u9519\u4f4d\u7f6e\u7684 log \u4fe1\u606f\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-bash"},"Alloc function will be used on port=1, queue=1.\ni40e_set_tx_function(): Vector tx finally be used.\ni40e_pf_config_rss(): Max of contiguous 2 PF queues are configured\ni40e_set_rx_function(): Vector Rx path will be used on port=1.\ni40e_dev_rx_queue_start():  >>\ni40e_dev_rx_queue_start():  >>\ni40e_dev_tx_queue_start():  >>\ni40e_dev_tx_queue_start():  >>\ni40e_phy_conf_link(): Failed to get the current PHY config: -7\n")),(0,p.kt)("h2",{id:"dpdk-\u9a71\u52a8\u4e2d\u51fa\u95ee\u9898\u7684\u5730\u65b9"},"dpdk \u9a71\u52a8\u4e2d\u51fa\u95ee\u9898\u7684\u5730\u65b9"),(0,p.kt)("p",null,"i40e_apply_link_speed \u8c03\u7528 i40e_phy_conf_link \u7684\u65f6\u5019\u83b7\u53d6\u786c\u4ef6\u4fe1\u606f\u5931\u8d25\u3002i40e_phy_conf_link \u5173\u952e\u4ee3\u7801\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-c"},'/* To get the current phy config. */\n    status = i40e_aq_get_phy_capabilities(hw, false, false, &phy_ab,\n                          NULL);\n    if (status) {\n        PMD_DRV_LOG(ERR, "Failed to get the current PHY config: %d\\n",\n                status);\n        return ret;\n    }\n')),(0,p.kt)("p",null,"aq_get_phy_capabilities \u901a\u8fc7 i40e \u7f51\u5361\u7684\u786c\u4ef6 admin queue \u6765\u83b7\u53d6\u4fe1\u606f\uff0c-7 \u4ee3\u8868 ",(0,p.kt)("strong",{parentName:"p"},"I40E_ERR_UNKNOWN_PHY"),"\uff0c\u8868\u660e ",(0,p.kt)("strong",{parentName:"p"},"hw->aq.asq_last_status")," \u72b6\u6001\u4e3a ",(0,p.kt)("strong",{parentName:"p"},"I40E_AQ_RC_EIO"),"\uff0c",(0,p.kt)("strong",{parentName:"p"},"I/O")," \u9519\u8bef\u3002"),(0,p.kt)("p",null,"\u8fd9\u4e9b\u4fe1\u606f\u8868\u660e\u95ee\u9898\u6307\u5411",(0,p.kt)("strong",{parentName:"p"},"\u7f51\u5361\u786c\u4ef6"),"\u3002"),(0,p.kt)("h2",{id:"l2fwd-\u7a0b\u5e8f\u6d4b\u8bd5"},"l2fwd \u7a0b\u5e8f\u6d4b\u8bd5"),(0,p.kt)("p",null,"\u6b63\u5e38 log \u4fe1\u606f\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-bash"},"i40e_dev_rx_queue_start():  >>\ni40e_dev_tx_queue_start():  >>\ni40e_phy_conf_link():   Current: abilities 0, link_speed c\ni40e_phy_conf_link():   Config:  abilities 38, link_speed 7e\n")),(0,p.kt)("h2",{id:"dpdk-\u4e2d\u76f8\u5173\u7684-patch"},"dpdk \u4e2d\u76f8\u5173\u7684 patch"),(0,p.kt)("p",null,"\u5728 dpdk git log \u4e2d\u641c\u7d22\u627e\u5230\u5982\u4e0b\u63d0\u4ea4\u4fe1\u606f:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-bash"},"commit 935bceb9ba0de8a7a276d5b3dd41e0168a273f26\nAuthor: David Hunt [david.hunt@intel.com](mailto:david.hunt@intel.com)\nDate:   Mon Jul 24 09:48:44 2017 +0100\n\nnet/i40e: fix sync phy type by adding retry\n\nSome phy's take longer than others to come up. Add a retry to give\nmore phy's a chance to come up before returning an error.\n\nFixes: 2209c3e2c275 (\"net/i40e: avoid PCI probing failure when using bogus SFP\")\n\nSigned-off-by: David Hunt <david.hunt@intel.com\nAcked-by: Jingjing Wu <jingjing.wu@intel.com>\n")),(0,p.kt)("h2",{id:"\u8865\u4e01\u4ee3\u7801"},"\u8865\u4e01\u4ee3\u7801"),(0,p.kt)("p",null,"\u53c2\u8003\u4e0a\u9762\u7684 git commit\uff0c\u5728\u6211\u4eec\u51fa\u9519\u7684\u903b\u8f91\u4e2d\u6dfb\u52a0\u91cd\u8bd5\u7684\u903b\u8f91\uff0c\u76f8\u5173 patch \u5982\u4e0b\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-c"},'Index: i40e_ethdev.c\n===================================================================\n--- i40e_ethdev.c       (revision xxxxx)\n+++ i40e_ethdev.c       (working copy)\n@@ -2159,6 +2159,7 @@\n        enum i40e_aq_phy_type cnt;\n        uint8_t avail_speed;\n        uint32_t phy_type_mask = 0;\n+       int retries = 0;\n\n        const uint8_t mask = I40E_AQ_PHY_FLAG_PAUSE_TX |\n                        I40E_AQ_PHY_FLAG_PAUSE_RX |\n@@ -2169,20 +2170,35 @@\n        /* To get phy capabilities of available speeds. */\n        status = i40e_aq_get_phy_capabilities(hw, false, true, &phy_ab,\n                                              NULL);\n-       if (status) {\n+       while (status) {\n                PMD_DRV_LOG(ERR, "Failed to get PHY capabilities: %d\\n",\n                                status);\n-               return ret;\n+               retries++;\n+               rte_delay_us(100000);\n+               if (retries < 10)\n+                       status = i40e_aq_get_phy_capabilities(hw, false, true, &phy_ab,\n+                                       NULL);\n+               else\n+                       return ret;\n        }\n        avail_speed = phy_ab.link_speed;\n\n        /* To get the current phy config. */\n        status = i40e_aq_get_phy_capabilities(hw, false, false, &phy_ab,\n                                              NULL);\n-       if (status) {\n+       retries = 0;\n+\n+       while (status) {\n                PMD_DRV_LOG(ERR, "Failed to get the current PHY config: %d\\n",\n                                status);\n-               return ret;\n+               retries++;\n+                rte_delay_us(100000);\n+\n+               if (retries < 10)\n+                       status = i40e_aq_get_phy_capabilities(hw, false, false, &phy_ab,\n+                                                             NULL);\n+               else\n+                       return ret;\n        }\n')),(0,p.kt)("h2",{id:"\u6d4b\u8bd5\u8bb0\u5f55"},"\u6d4b\u8bd5\u8bb0\u5f55"),(0,p.kt)("p",null,"\u91cd\u65b0\u7f16\u8bd1 dpdk \u4e0e vpp \u540e\u6d4b\u8bd5\u5341\u6b21\uff0c\u6ca1\u6709\u51fa\u73b0\u95ee\u9898\uff0c\u9a8c\u8bc1\u901a\u8fc7\u3002"))}_.isMDXComponent=!0}}]);