"use strict";(self.webpackChunklongyu_website=self.webpackChunklongyu_website||[]).push([[2069],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return k}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var d=n.createContext({}),p=function(e){var t=n.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=p(e.components);return n.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(r),k=a,m=u["".concat(d,".").concat(k)]||u[k]||c[k]||i;return r?n.createElement(m,o(o({ref:t},s),{},{components:r})):n.createElement(m,o({ref:t},s))}));function k(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=u;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},7225:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return d},default:function(){return k},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return c}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),o=["components"],l={},d="dpdk \u95ee\u9898\u5206\u6790\uff1adpdk-20.11 ice 100G \u7f51\u5361 rss_hash \u914d\u7f6e\u65e0\u6548\u95ee\u9898",p={unversionedId:"\u6280\u672f\u535a\u5ba2/dpdk/dpdk \u95ee\u9898\u6848\u4f8b/\u7f51\u5361\u786c\u4ef6/dpdk \u95ee\u9898\u5206\u6790\uff1adpdk-20.11 ice 100G \u7f51\u5361 rss_hash \u914d\u7f6e\u65e0\u6548\u95ee\u9898",id:"\u6280\u672f\u535a\u5ba2/dpdk/dpdk \u95ee\u9898\u6848\u4f8b/\u7f51\u5361\u786c\u4ef6/dpdk \u95ee\u9898\u5206\u6790\uff1adpdk-20.11 ice 100G \u7f51\u5361 rss_hash \u914d\u7f6e\u65e0\u6548\u95ee\u9898",title:"dpdk \u95ee\u9898\u5206\u6790\uff1adpdk-20.11 ice 100G \u7f51\u5361 rss_hash \u914d\u7f6e\u65e0\u6548\u95ee\u9898",description:"\u95ee\u9898\u63cf\u8ff0",source:"@site/docs/\u6280\u672f\u535a\u5ba2/dpdk/dpdk \u95ee\u9898\u6848\u4f8b/\u7f51\u5361\u786c\u4ef6/dpdk \u95ee\u9898\u5206\u6790\uff1adpdk-20.11 ice 100G \u7f51\u5361 rss_hash \u914d\u7f6e\u65e0\u6548\u95ee\u9898.md",sourceDirName:"\u6280\u672f\u535a\u5ba2/dpdk/dpdk \u95ee\u9898\u6848\u4f8b/\u7f51\u5361\u786c\u4ef6",slug:"/\u6280\u672f\u535a\u5ba2/dpdk/dpdk \u95ee\u9898\u6848\u4f8b/\u7f51\u5361\u786c\u4ef6/dpdk \u95ee\u9898\u5206\u6790\uff1adpdk-20.11 ice 100G \u7f51\u5361 rss_hash \u914d\u7f6e\u65e0\u6548\u95ee\u9898",permalink:"/longyu.github.io/\u6280\u672f\u535a\u5ba2/dpdk/dpdk \u95ee\u9898\u6848\u4f8b/\u7f51\u5361\u786c\u4ef6/dpdk \u95ee\u9898\u5206\u6790\uff1adpdk-20.11 ice 100G \u7f51\u5361 rss_hash \u914d\u7f6e\u65e0\u6548\u95ee\u9898",draft:!1,editUrl:"https://github.com/longyuwlz/longyu.github.io/docs/\u6280\u672f\u535a\u5ba2/dpdk/dpdk \u95ee\u9898\u6848\u4f8b/\u7f51\u5361\u786c\u4ef6/dpdk \u95ee\u9898\u5206\u6790\uff1adpdk-20.11 ice 100G \u7f51\u5361 rss_hash \u914d\u7f6e\u65e0\u6548\u95ee\u9898.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u4ee5 rte_mempool_ops_table \u4e3a\u4f8b\u63cf\u8ff0 dpdk \u7a0b\u5e8f\u5e93\u94fe\u63a5\u987a\u5e8f\u5bf9\u7a0b\u5e8f\u6267\u884c\u7684\u5f71\u54cd",permalink:"/longyu.github.io/\u6280\u672f\u535a\u5ba2/dpdk/dpdk \u95ee\u9898\u6848\u4f8b/\u7f16\u8bd1\u95ee\u9898/\u4ee5 rte_mempool_ops_table \u4e3a\u4f8b\u63cf\u8ff0 dpdk \u7a0b\u5e8f\u5e93\u94fe\u63a5\u987a\u5e8f\u5bf9\u7a0b\u5e8f\u6267\u884c\u7684\u5f71\u54cd"},next:{title:"dpdk-16.04 igb crc length \u7edf\u8ba1\u95ee\u9898",permalink:"/longyu.github.io/\u6280\u672f\u535a\u5ba2/dpdk/dpdk \u95ee\u9898\u6848\u4f8b/\u7f51\u5361\u786c\u4ef6/dpdk-16.04 igb crc length \u7edf\u8ba1\u95ee\u9898"}},s={},c=[{value:"\u95ee\u9898\u63cf\u8ff0",id:"\u95ee\u9898\u63cf\u8ff0",level:2},{value:"\u95ee\u9898\u6392\u67e5\u8fc7\u7a0b",id:"\u95ee\u9898\u6392\u67e5\u8fc7\u7a0b",level:2},{value:"\u68c0\u7d22\u4e92\u8054\u7f51",id:"\u68c0\u7d22\u4e92\u8054\u7f51",level:2},{value:"ice \u7f51\u5361 DDP \u56fa\u4ef6\u5305",id:"ice-\u7f51\u5361-ddp-\u56fa\u4ef6\u5305",level:3},{value:"Safe mode",id:"safe-mode",level:3},{value:"\u771f\u6b63\u7684\u95ee\u9898",id:"\u771f\u6b63\u7684\u95ee\u9898",level:2},{value:"\u89e3\u51b3\u65b9\u6cd5",id:"\u89e3\u51b3\u65b9\u6cd5",level:2}],u={toc:c};function k(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"dpdk-\u95ee\u9898\u5206\u6790dpdk-2011-ice-100g-\u7f51\u5361-rss_hash-\u914d\u7f6e\u65e0\u6548\u95ee\u9898"},"dpdk \u95ee\u9898\u5206\u6790\uff1adpdk-20.11 ice 100G \u7f51\u5361 rss_hash \u914d\u7f6e\u65e0\u6548\u95ee\u9898"),(0,i.kt)("h2",{id:"\u95ee\u9898\u63cf\u8ff0"},"\u95ee\u9898\u63cf\u8ff0"),(0,i.kt)("p",null,"\u4f7f\u7528 dpdk-20.11 testpmd \u6d4b\u8bd5 ice 100G \u7f51\u5361\u7684\u65f6\u5019\u53d1\u73b0\u8bbe\u7f6e rss_hash \u4e00\u76f4\u4e0d\u751f\u6548\uff0c\u6253\u6d41\u786e\u8ba4\u6d41\u91cf\u4e00\u76f4\u88ab hash \u5230\u7b2c\u4e00\u4e2a\u961f\u5217\u4e0a\uff0c\u5176\u5b83\u7684\u961f\u5217\u6ca1\u6709\u6536\u5230\u4e00\u4e2a\u5305\u3002"),(0,i.kt)("h2",{id:"\u95ee\u9898\u6392\u67e5\u8fc7\u7a0b"},"\u95ee\u9898\u6392\u67e5\u8fc7\u7a0b"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\u6392\u67e5\u6d41\u91cf\u7684\u914d\u6bd4"),(0,i.kt)("p",{parentName:"li"},"\u786e\u8ba4\u6d41\u91cf\u7684\u4e94\u5143\u7ec4\u5728\u4e00\u5b9a\u8303\u56f4\u5185\u53d8\u5316\uff0c\u6392\u9664\u6d41\u91cf\u95ee\u9898\u3002")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\u68c0\u67e5 testpmd \u591a\u961f\u5217\u914d\u7f6e"),(0,i.kt)("p",{parentName:"li"},"\u786e\u8ba4\u591a\u961f\u5217\u914d\u7f6e\u751f\u6548\u3002")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\u68c0\u67e5 rss_hash key \u914d\u7f6e\n\u4f7f\u7528\u9ed8\u8ba4 rss_hash key \u4e0e\u5bf9\u79f0 rss_hash key \u90fd\u4e0d\u80fd\u6210\u529f hash\u3002"))),(0,i.kt)("h2",{id:"\u68c0\u7d22\u4e92\u8054\u7f51"},"\u68c0\u7d22\u4e92\u8054\u7f51"),(0,i.kt)("h3",{id:"ice-\u7f51\u5361-ddp-\u56fa\u4ef6\u5305"},"ice \u7f51\u5361 DDP \u56fa\u4ef6\u5305"),(0,i.kt)("p",null,"A general purpose DDP package is automatically installed with all supported 800 Series drivers on Windows, ESX, FreeBSD, and Linux operating systems, including those provided by the Data Plane Development Kit (DPDK). This general purpose DDP package is known as the OS-Default package. Additional DDP packages will be available to address packet processing needs for specific market segments. For example, a telecommunications (Comms) DDP package has been developed to support GTP and PPPoE protocols in addition to the protocols in the OS-Default package. The Comms DDP package is available with DPDK 19.11 and will also be supported by the 800 Seriesice driver on Linux operating systems"),(0,i.kt)("h3",{id:"safe-mode"},"Safe mode"),(0,i.kt)("p",null,"In pre-boot or if a DDP package is not loaded by an OS driver, the 800 Series is configured in safe mode via an NVM-default configuration that is automatically loaded by firmware. This configuration supports a minimum set of protocols and allows basic packet handling in the pre-boot environment, such as PXE boot or UEFI. The device can also be configured in safe mode if the DDP package fails to load due to a software incompatibility or other issue. If an OS driver loads and cannot load a DDP package, a message is printed in the system log that the device is now in safe mode.In this safe mode, the driver disables support for the following features:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Multi-queue"),(0,i.kt)("li",{parentName:"ol"},"Virtualization (SR-IOV/VMQ)"),(0,i.kt)("li",{parentName:"ol"},"Stateless workload acceleration for tunnel overlays(VxLAN/Geneve)"),(0,i.kt)("li",{parentName:"ol"},"RDMA (iWARP/RoCE)"),(0,i.kt)("li",{parentName:"ol"},"RSC"),(0,i.kt)("li",{parentName:"ol"},"RSS"),(0,i.kt)("li",{parentName:"ol"},"DCB /DCBx"),(0,i.kt)("li",{parentName:"ol"},"Intel\xae Ethernet Flow Director"),(0,i.kt)("li",{parentName:"ol"},"QinQ"),(0,i.kt)("li",{parentName:"ol"},"XDP / AF-XDP"),(0,i.kt)("li",{parentName:"ol"},"ADQ")),(0,i.kt)("h2",{id:"\u771f\u6b63\u7684\u95ee\u9898"},"\u771f\u6b63\u7684\u95ee\u9898"),(0,i.kt)("p",null,"\u5f53 ice 100G \u7f51\u5361\u521d\u59cb\u5316\u7684\u65f6\u5019\u672a\u6210\u529f\u52a0\u8f7d DDP \u65f6\uff0c\u9a71\u52a8\u4f1a\u8fdb\u5165\u5b89\u5168\u6a21\u5f0f\uff0c\u5728\u6b64\u6a21\u5f0f\u4e0b rss\u3001\u591a\u961f\u5217\u90fd\u88ab\u5173\u95ed\u3002"),(0,i.kt)("h2",{id:"\u89e3\u51b3\u65b9\u6cd5"},"\u89e3\u51b3\u65b9\u6cd5"),(0,i.kt)("p",null,"\u4e0b\u8f7d\u5b98\u65b9\u63a8\u8350\u7684 ddp \u5305\u5e76\u590d\u5236\u5230 lib/firmware/intel/ice/ddp \u76ee\u5f55\u4e2d\uff0c\u91cd\u65b0\u542f\u52a8 testpmd\uff0c\u95ee\u9898\u5f97\u5230\u89e3\u51b3\u3002"))}k.isMDXComponent=!0}}]);