"use strict";(self.webpackChunklongyu_website=self.webpackChunklongyu_website||[]).push([[7093],{3905:function(n,e,t){t.d(e,{Zo:function(){return _},kt:function(){return c}});var l=t(7294);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function p(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(n);e&&(l=l.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,l)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?p(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function o(n,e){if(null==n)return{};var t,l,r=function(n,e){if(null==n)return{};var t,l,r={},p=Object.keys(n);for(l=0;l<p.length;l++)t=p[l],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(n);for(l=0;l<p.length;l++)t=p[l],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var a=l.createContext({}),s=function(n){var e=l.useContext(a),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},_=function(n){var e=s(n.components);return l.createElement(a.Provider,{value:e},n.children)},k={inlineCode:"code",wrapper:function(n){var e=n.children;return l.createElement(l.Fragment,{},e)}},u=l.forwardRef((function(n,e){var t=n.components,r=n.mdxType,p=n.originalType,a=n.parentName,_=o(n,["components","mdxType","originalType","parentName"]),u=s(t),c=r,d=u["".concat(a,".").concat(c)]||u[c]||k[c]||p;return t?l.createElement(d,i(i({ref:e},_),{},{components:t})):l.createElement(d,i({ref:e},_))}));function c(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var p=t.length,i=new Array(p);i[0]=u;var o={};for(var a in e)hasOwnProperty.call(e,a)&&(o[a]=e[a]);o.originalType=n,o.mdxType="string"==typeof n?n:r,i[1]=o;for(var s=2;s<p;s++)i[s]=t[s];return l.createElement.apply(null,i)}return l.createElement.apply(null,t)}u.displayName="MDXCreateElement"},3443:function(n,e,t){t.r(e),t.d(e,{assets:function(){return _},contentTitle:function(){return a},default:function(){return c},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return k}});var l=t(7462),r=t(3366),p=(t(7294),t(3905)),i=["components"],o={},a="\u4f7f\u7528 nlmon \u9a71\u52a8\u6293\u53d6 netlink \u62a5\u6587\u7684\u539f\u7406",s={unversionedId:"\u6280\u672f\u535a\u5ba2/linux-system/\u5185\u6838\u539f\u7406\u5206\u6790/netlink/\u4f7f\u7528 nlmon \u9a71\u52a8\u6293\u53d6 netlink \u62a5\u6587\u7684\u539f\u7406",id:"\u6280\u672f\u535a\u5ba2/linux-system/\u5185\u6838\u539f\u7406\u5206\u6790/netlink/\u4f7f\u7528 nlmon \u9a71\u52a8\u6293\u53d6 netlink \u62a5\u6587\u7684\u539f\u7406",title:"\u4f7f\u7528 nlmon \u9a71\u52a8\u6293\u53d6 netlink \u62a5\u6587\u7684\u539f\u7406",description:"\u524d\u8a00",source:"@site/docs/\u6280\u672f\u535a\u5ba2/linux-system/\u5185\u6838\u539f\u7406\u5206\u6790/netlink/\u4f7f\u7528 nlmon \u9a71\u52a8\u6293\u53d6 netlink \u62a5\u6587\u7684\u539f\u7406.md",sourceDirName:"\u6280\u672f\u535a\u5ba2/linux-system/\u5185\u6838\u539f\u7406\u5206\u6790/netlink",slug:"/\u6280\u672f\u535a\u5ba2/linux-system/\u5185\u6838\u539f\u7406\u5206\u6790/netlink/\u4f7f\u7528 nlmon \u9a71\u52a8\u6293\u53d6 netlink \u62a5\u6587\u7684\u539f\u7406",permalink:"/longyu.github.io/\u6280\u672f\u535a\u5ba2/linux-system/\u5185\u6838\u539f\u7406\u5206\u6790/netlink/\u4f7f\u7528 nlmon \u9a71\u52a8\u6293\u53d6 netlink \u62a5\u6587\u7684\u539f\u7406",draft:!1,editUrl:"https://github.com/longyuwlz/longyu.github.io/docs/\u6280\u672f\u535a\u5ba2/linux-system/\u5185\u6838\u539f\u7406\u5206\u6790/netlink/\u4f7f\u7528 nlmon \u9a71\u52a8\u6293\u53d6 netlink \u62a5\u6587\u7684\u539f\u7406.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"nlmon \u9a71\u52a8\u53ea\u80fd\u6293\u53d6\u90e8\u5206 netlink \u62a5\u6587\u7684\u539f\u56e0",permalink:"/longyu.github.io/\u6280\u672f\u535a\u5ba2/linux-system/\u5185\u6838\u539f\u7406\u5206\u6790/netlink/nlmon \u9a71\u52a8\u53ea\u80fd\u6293\u53d6\u90e8\u5206 netlink \u62a5\u6587\u7684\u539f\u56e0"},next:{title:"linux \u5185\u6838\u60c5\u666f\u5206\u6790\u4e4b chroot \u547d\u4ee4\u80cc\u540e\u7684\u5185\u6838\u6001\u884c\u4e3a",permalink:"/longyu.github.io/\u6280\u672f\u535a\u5ba2/linux-system/\u5185\u6838\u539f\u7406\u5206\u6790/\u6587\u4ef6\u7cfb\u7edf/linux \u5185\u6838\u60c5\u666f\u5206\u6790\u4e4b chroot \u547d\u4ee4\u80cc\u540e\u7684\u5185\u6838\u6001\u884c\u4e3a"}},_={},k=[{value:"\u524d\u8a00",id:"\u524d\u8a00",level:2},{value:"nlmon \u9a71\u52a8",id:"nlmon-\u9a71\u52a8",level:2},{value:"rtnetlink link_ops \u94fe\u8868",id:"rtnetlink-link_ops-\u94fe\u8868",level:2},{value:"\u8fd9\u91cc\u63cf\u8ff0\u7684 rtnl_link_ops \u662f\u4ec0\u4e48\u4e1c\u897f\u5462\uff1f",id:"\u8fd9\u91cc\u63cf\u8ff0\u7684-rtnl_link_ops-\u662f\u4ec0\u4e48\u4e1c\u897f\u5462",level:2},{value:"rtnl_link_register \u51fd\u6570",id:"rtnl_link_register-\u51fd\u6570",level:2},{value:"rtnl_link_unregister \u51fd\u6570",id:"rtnl_link_unregister-\u51fd\u6570",level:2},{value:"nlmon_link_ops",id:"nlmon_link_ops",level:2},{value:"tcpdump \u6293\u53d6 netlink \u5305\u7684\u539f\u7406",id:"tcpdump-\u6293\u53d6-netlink-\u5305\u7684\u539f\u7406",level:2},{value:"\u603b\u7ed3",id:"\u603b\u7ed3",level:2}],u={toc:k};function c(n){var e=n.components,t=(0,r.Z)(n,i);return(0,p.kt)("wrapper",(0,l.Z)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,p.kt)("h1",{id:"\u4f7f\u7528-nlmon-\u9a71\u52a8\u6293\u53d6-netlink-\u62a5\u6587\u7684\u539f\u7406"},"\u4f7f\u7528 nlmon \u9a71\u52a8\u6293\u53d6 netlink \u62a5\u6587\u7684\u539f\u7406"),(0,p.kt)("h2",{id:"\u524d\u8a00"},"\u524d\u8a00"),(0,p.kt)("p",null,"\u5728 ",(0,p.kt)("a",{parentName:"p",href:"https://blog.csdn.net/Longyu_wlz/article/details/108879156"},"\u5982\u4f55\u6293\u53d6 netlink \u62a5\u6587")," \u8fd9\u7bc7\u535a\u5ba2\u4e2d\uff0c\u6211\u63cf\u8ff0\u4e86\u4f7f\u7528 nlmon \u9a71\u52a8\u521b\u5efa\u865a\u62df tap \u53e3\u6293\u53d6 netlink \u62a5\u6587\u7684\u8fc7\u7a0b\uff0c\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u63a2\u8ba8\u4e0b\u8fd9\u4e00\u8fc7\u7a0b\u80cc\u540e\u7684\u539f\u7406\u3002"),(0,p.kt)("h2",{id:"nlmon-\u9a71\u52a8"},"nlmon \u9a71\u52a8"),(0,p.kt)("p",null,"nlmon \u9a71\u52a8\u6e90\u7801\u4f4d\u4e8e\u5185\u6838\u6e90\u7801\u6811\u4e2d drivers/net/ \u76ee\u5f55\u4e2d\uff0c\u7531\u5355\u4e2a\u6e90\u6587\u4ef6\u2014\u2014nlmon.c \u7ec4\u6210\uff0c\u5176\u4ee3\u7801\u957f\u5ea6\u53ea\u6709 150 \u591a\u884c\u3002"),(0,p.kt)("p",null,"\u4e0e\u666e\u901a\u7684\u9a71\u52a8\u4ee3\u7801\u4e00\u6837\uff0c\u5b83\u4e5f\u6709\u4e00\u4e2a\u521d\u59cb\u5316\u4e0e\u89e3\u521d\u59cb\u5316\u51fd\u6570\uff0c\u8fd9\u4e24\u4e2a\u51fd\u6570\u5206\u522b\u5b9e\u73b0\u7684\u529f\u80fd\u662f\u5728\u5185\u6838\u4e2d\u6ce8\u518c\u4e00\u4e2a rtnl_link_ops \u7ed3\u6784\uff0c\u89e3\u9664\u6ce8\u518c\u7684 rtnl_link_ops \u7ed3\u6784\u3002"),(0,p.kt)("h2",{id:"rtnetlink-link_ops-\u94fe\u8868"},"rtnetlink link_ops \u94fe\u8868"),(0,p.kt)("p",null,"\u8fd9\u91cc\u9996\u5148\u9700\u8981\u6307\u660e\u7684\u662f\uff0c\u5728 rtnetlink.c \u4e2d\u521b\u5efa\u4e86\u4e00\u4e2a link_ops \u94fe\u8868\uff0c\u8fd9\u4e2a\u94fe\u8868\u5c06",(0,p.kt)("strong",{parentName:"p"},"\u6240\u6709\u7684 rtnl_link_ops \u4ee5 find \u4e3a\u552f\u4e00\u6807\u8bc6\u7b26\u94fe\u63a5\u8d77\u6765"),"\u3002"),(0,p.kt)("h2",{id:"\u8fd9\u91cc\u63cf\u8ff0\u7684-rtnl_link_ops-\u662f\u4ec0\u4e48\u4e1c\u897f\u5462"},"\u8fd9\u91cc\u63cf\u8ff0\u7684 rtnl_link_ops \u662f\u4ec0\u4e48\u4e1c\u897f\u5462\uff1f"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"\u8fd9\u91cc\u7684 rtnl_link_ops \u662f net device \u4e2d netlink \u76f8\u5173\u64cd\u4f5c\u7684\u65b9\u6cd5"),"\uff0c\u5728\u6bcf\u4e2a struct net \u7ed3\u6784\u4f53\u4e2d\u6709\u4e00\u4e2a\u6307\u5411 rtnl_link_ops \u7684\u6307\u9488\uff0c\u7528\u4ee5",(0,p.kt)("strong",{parentName:"p"},"\u5b9e\u4f8b\u5316\u4e0d\u540c\u7684 rtnl_link_ops\u3002")),(0,p.kt)("p",null,"struct net_device \u4e2d\u7684\u76f8\u5173\u5b9a\u4e49\u5982\u4e0b\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-c"},"    const struct rtnl_link_ops *rtnl_link_ops;\n")),(0,p.kt)("p",null,"\u8fd9\u91cc\u6211\u9700\u8981\u8bf4\u660e\u4e24\u70b9\u5185\u5bb9\uff1a"),(0,p.kt)("ol",null,(0,p.kt)("li",{parentName:"ol"},"rtnl_link_register \u51fd\u6570\u4e0e rtnl_link_unregister \u51fd\u6570\u90fd\u6d89\u53ca\u5230\u4e86",(0,p.kt)("strong",{parentName:"li"},"\u5bf9 link_ops \u7684\u64cd\u4f5c\u3002")),(0,p.kt)("li",{parentName:"ol"},"rtnl_link_ops \u901a\u8fc7 struct net_device \u4e2d\u7684 rtnl_link_ops \u6307\u9488\u4e0e\u4e00\u4e2a netdev ",(0,p.kt)("strong",{parentName:"li"},"\u5173\u8054"),"\u8d77\u6765\uff0c\u6ce8\u518c\u4e00\u4e2a rtnl_link_ops \u5e76\u4e0d\u6d89\u53ca\u4e0e netdev \u7684\u5173\u8054\uff0c\u53ea\u9700\u8981\u5728 link_ops \u94fe\u8868\u4e2d",(0,p.kt)("strong",{parentName:"li"},"\u6dfb\u52a0\u4e00\u4e2a\u8282\u70b9"),"\u5c31\u884c\uff0c\u800c\u5f53\u5220\u9664\u4e00\u4e2a rtnl_link_ops \u65f6\uff0c\u5c31\u9700\u8981\u5bf9 netdev \u4e2d\u4f7f\u7528\u5230\u5f85\u5220\u9664\u7684 rtnl_link_ops \u7684\u7f51\u7edc\u8bbe\u5907\u8fdb\u884c\u76f8\u5e94\u5904\u7406\u3002")),(0,p.kt)("p",null,"\u8fd9\u91cc\u4e5f\u8bf4\u660e\u5176\u5b9e rtnl_link_ops \u7c7b\u4f3c\u4e8e\u4e00\u4e2a",(0,p.kt)("strong",{parentName:"p"},"\u6846\u67b6\u6027"),"\u7684\u529f\u80fd\uff0cnetdev \u662f\u5b83\u7684",(0,p.kt)("strong",{parentName:"p"},"\u5ba2\u6237"),"\uff0c\u5b83\u672c\u8eab\u7684\u6ce8\u518c\u7c7b\u4f3c\u4e8e\u6269\u5c55\u529f\u80fd\u7684\u884c\u4e3a\uff0c\u5bf9 netdev \u5ba2\u6237\u7684\u6b63\u5728\u4f7f\u7528\u7684\u529f\u80fd\u6ca1\u6709\u5f71\u54cd\uff0c\u4f46\u662f\u5f53\u89e3\u6ce8\u518c\u65f6\u5c31\u9700\u8981\u8003\u8651\u53ef\u80fd\u6b63\u5728\u88ab\u4e00\u4e2a netdev \u5ba2\u6237\u4f7f\u7528\u7684\u573a\u666f\u3002"),(0,p.kt)("p",null,"\u4e0b\u9762\u6211\u5206\u522b\u63cf\u8ff0\u4e0b rtnl_link_ops \u7684\u6ce8\u518c\u4e0e\u89e3\u6ce8\u518c\u76f8\u5173\u51fd\u6570\u7684\u539f\u7406\u3002"),(0,p.kt)("h2",{id:"rtnl_link_register-\u51fd\u6570"},"rtnl_link_register \u51fd\u6570"),(0,p.kt)("p",null,"rtnl_link_register \u51fd\u6570\u7684\u4e3b\u8981\u903b\u8f91\u53ca\u5982\u4e0b\uff1a"),(0,p.kt)("ol",null,(0,p.kt)("li",{parentName:"ol"},"\u4f7f\u7528 rtnl_link_ops \u4e2d\u7684 ",(0,p.kt)("strong",{parentName:"li"},"find")," \u5b57\u6bb5\u68c0\u7d22 link_ops \u94fe\u8868\uff0c\u5982\u679c",(0,p.kt)("strong",{parentName:"li"},"\u5b58\u5728"),"\u5219\u8fd4\u56de -EEXIST"),(0,p.kt)("li",{parentName:"ol"},"find \u5b57\u6bb5\u68c0\u7d22 link_ops \u94fe\u8868\u53d1\u73b0\u5f85\u94fe\u5165\u7684 ops ",(0,p.kt)("strong",{parentName:"li"},"\u4e0d\u5b58\u5728"),"\u5219\u5c06\u4f20\u5165\u7684 ops \u94fe\u5165\u5230 link_ops \u4e2d\u3002")),(0,p.kt)("p",null,"\u8fd9\u91cc\u5185\u6838\u8fd8\u5bf9\u4f20\u5165\u7684 rtnl_link_ops \u4e2d\u7684\u51fd\u6570\u6307\u9488\u8fdb\u884c\u4e86",(0,p.kt)("strong",{parentName:"p"},"\u5408\u6cd5\u503c\u6821\u9a8c"),"\uff0c",(0,p.kt)("strong",{parentName:"p"},"\u5f53 setup \u51fd\u6570\u503c\u975e\u7a7a\u800c dellink \u4e3a\u7a7a\u7684\u65f6\u5019"),"\uff0c\u5185\u6838\u5c06 dellink \u8bbe\u5b9a\u4e3a ",(0,p.kt)("strong",{parentName:"p"},"unregister_netdevice_queue")," \u51fd\u6570\u3002"),(0,p.kt)("p",null,"\u540c\u65f6\u9700\u8981\u6ce8\u610f\u7684\u662f link_ops \u662f\u4e00\u4e2a",(0,p.kt)("strong",{parentName:"p"},"\u5171\u4eab"),"\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5bf9\u5b83\u7684\u4fee\u6539\u9700\u8981\u8fdb\u884c",(0,p.kt)("strong",{parentName:"p"},"\u4e32\u884c\u5316"),"\u5904\u7406\u3002"),(0,p.kt)("p",null,"\u53ef\u4ee5\u770b\u5230\uff0c\u5728 rtnl_link_register \u4e2d\u5bf9 link_ops \u94fe\u8868\u7684\u4fee\u6539\u662f\u5728\u5360\u7528\u4e86 rtnl \u9501\u7684\u6761\u4ef6\u4e0b\u6267\u884c\u7684\uff0c\u6267\u884c\u5b8c\u6210\u540e\u91ca\u653e rtnl \u9501\u5c31\u5b8c\u6210\u4e86\u6ce8\u518c\u7684\u5b8c\u6574\u8fc7\u7a0b\u3002"),(0,p.kt)("h2",{id:"rtnl_link_unregister-\u51fd\u6570"},"rtnl_link_unregister \u51fd\u6570"),(0,p.kt)("p",null,"\u76f8\u8f83 rtnl_link_register \u800c\u8a00\uff0cunregister \u51fd\u6570\u505a\u4e86\u66f4\u591a\u7684\u4e8b\u60c5\uff0c\u4ece\u8fd9\u4e2a unregister \u51fd\u6570\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e00\u4e9b\u66f4\u5185\u90e8\u7684\u539f\u7406\u3002"),(0,p.kt)("p",null,"\u5176\u4e3b\u8981\u6267\u884c\u903b\u8f91\u5982\u4e0b\uff1a"),(0,p.kt)("ol",null,(0,p.kt)("li",{parentName:"ol"},(0,p.kt)("p",{parentName:"li"},"\u83b7\u53d6 pernet_ops_rwsem \u4fe1\u53f7\u91cf\uff0c\u5c31\u83b7\u53d6\u6b64\u4fe1\u53f7\u91cf\u662f\u4e3a\u4e86\u6d88\u9664\u4e0e setup_net \u53ca cleanup_net \u7684\u7ade\u4e89\u6761\u4ef6\u3002\uff08\u5177\u4f53\u7684\u573a\u666f\u76ee\u524d\u6211\u5e76\u4e0d\u6e05\u695a\uff01\uff09")),(0,p.kt)("li",{parentName:"ol"},(0,p.kt)("p",{parentName:"li"},"\u8c03\u7528 rtnl_lock_unregistering_all"))),(0,p.kt)("p",null,"rtnl_lock_unregisering_all \u51fd\u6570\u503c\u5f97\u7814\u7a76\uff0c\u5176\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-c"},"/* Return with the rtnl_lock held when there are no network\n * devices unregistering in any network namespace.\n */\nstatic void rtnl_lock_unregistering_all(void)\n{\n    struct net *net;\n    bool unregistering;\n    DEFINE_WAIT_FUNC(wait, woken_wake_function);\n\n    add_wait_queue(&netdev_unregistering_wq, &wait);\n    for (;;) {\n        unregistering = false;\n        rtnl_lock();\n        /* We held write locked pernet_ops_rwsem, and parallel\n         * setup_net() and cleanup_net() are not possible.\n         */\n        for_each_net(net) {\n            if (net->dev_unreg_count > 0) {\n                unregistering = true;\n                break;\n            }\n        }\n        if (!unregistering)\n            break;\n        __rtnl_unlock();\n\n        wait_woken(&wait, TASK_UNINTERRUPTIBLE, MAX_SCHEDULE_TIMEOUT);\n    }\n    remove_wait_queue(&netdev_unregistering_wq, &wait);\n}\n")),(0,p.kt)("p",null,"\u4e0a\u8ff0\u51fd\u6570\uff0c\u5f53\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a net namespace \u4e2d\u7684 netdev \u5904\u4e8e unregistering \u72b6\u6001\u65f6\u5b83\u4f1a\u76f4\u63a5\u8fd4\u56de\u5e76\u5360\u6709 rtnl_lock\uff0c\u5f53\u68c0\u6d4b\u5230\u6709 netdev \u5904\u4e8e unregistering \u72b6\u6001\u65f6\uff0c\u5b83\u4f1a\u8bbe\u5b9a timeout \u5e76\u5c06\u5f53\u524d\u7ebf\u7a0b\u6302\u8d77\u7b49\u5f85\uff0c\u6b64\u51fd\u6570",(0,p.kt)("strong",{parentName:"p"},"\u4f1a\u7b49\u5f85\u6240\u6709 namespace \u4e2d\u7684\u5373\u5c06 unregistering \u7684 netdev \u4e8b\u4ef6\u5b8c\u6210\u540e\u8fd4\u56de\u5e76\u5360\u6709 rtnl_lock\u3002\u5728\u8fd9\u4e00\u8fc7\u7a0b\u5b8c\u6210\u540e\u6b64\u51fd\u6570\u4f1a\u5c06\u5f53\u524d\u8fdb\u7a0b\u4ece netdev_unregistering_wq \u7b49\u5f85\u961f\u5217\u4e2d\u79fb\u9664\u3002")),(0,p.kt)("p",null,"\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\u5728 for_each_net \u4e2d\u901a\u8fc7\u5224\u65ad ",(0,p.kt)("strong",{parentName:"p"},"dev_unreg_count")," \u7684",(0,p.kt)("strong",{parentName:"p"},"\u503c"),"\u6765",(0,p.kt)("strong",{parentName:"p"},"\u5224\u65ad\u662f\u5426\u6709 netdev \u5f85\u91ca\u653e"),"\uff0c\u5b9e\u9645\u4e0a netdev \u7684\u91ca\u653e\u8fc7\u7a0b\u4f7f\u7528\u4e86\u7c7b\u4f3c\u5ef6\u540e\u91ca\u653e\u7684\u673a\u5236\uff0c\u771f\u6b63\u91ca\u653e\u662f\u5728\u8c03\u7528\u4e86 netdev_run_todo \u540e\u5b8c\u6210\u7684\uff0c\u5728 netdev_run_todo \u4e2d\u8fd8\u4f1a\u5524\u9192\u7b49\u5f85 netdev_unregistering \u4e8b\u4ef6\u7684\u8fdb\u7a0b\uff0c\u4e0e\u5524\u9192\u76f8\u5173\u7684\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-c"},"        wake_up(&netdev_unregistering_wq);\n")),(0,p.kt)("p",null,"wak_up \u6700\u7ec8\u4f1a\u8c03\u7528 ",(0,p.kt)("strong",{parentName:"p"},"__wake_up_common")," \u6765\u6267\u884c\u9884\u5148\u6ce8\u518c\u7684",(0,p.kt)("strong",{parentName:"p"},"\u5524\u9192\u4e8b\u4ef6\u51fd\u6570"),"\uff0c\u5b9e\u9645\u4e0a\u5c06\u6302\u8d77\u5230\u7b49\u5f85\u961f\u5217\u4e2d\u7684",(0,p.kt)("strong",{parentName:"p"},"\u7a0b\u5e8f\u72b6\u6001\u4fee\u6539\u7684\u8fc7\u7a0b"),"\u4e5f\u662f\u5728\u8fd9\u4e2a\u51fd\u6570\u4e2d\u5b8c\u6210\u7684\u3002"),(0,p.kt)("p",null,"\u4e0a\u9762\u63d0\u5230\u7684\u5524\u9192\u4e8b\u4ef6\u51fd\u6570\u662f wait_queue_entry \u7ed3\u6784\u4f53\u4e2d\u7684 func \u51fd\u6570\u6307\u9488\u3002wait_queue_entry \u7ed3\u6784\u4f53\u5185\u5bb9\u5982\u4e0b\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-\uff43"},"struct wait_queue_entry {\n    unsigned int        flags;\n    void            *private;\n    wait_queue_func_t   func;\n    struct list_head    entry;\n};\n")),(0,p.kt)("ol",{start:3},(0,p.kt)("li",{parentName:"ol"},"\u8c03\u7528 __rtnl_link_unregister")),(0,p.kt)("p",null,"\u6b64\u51fd\u6570\u904d\u5386\u6240\u6709\u7684 netdev \u7ed3\u6784\uff0c\u5e76\u4f7f\u7528 __rtnl_kill_links \u6765\u8c03\u7528 netdev \u4e2d\u4f7f\u7528\u4e86\u4f20\u5165\u7684 rtnl_link_ops \u7684 dellink \u51fd\u6570\uff0c\u7136\u540e\u8c03\u7528 unregister_netdevice_many \u6765 unregister \u8fd9\u4e9b\u76f8\u5173\u7684 netdev\u3002\u6700\u7ec8\u5c06 ops \u4ece\u6ce8\u518c\u94fe\u8868\u4e2d\u79fb\u9664\u5c31\u5b8c\u6210\u4e86\u6240\u6709\u7684\u8fc7\u7a0b\u3002"),(0,p.kt)("ol",{start:4},(0,p.kt)("li",{parentName:"ol"},"\u91ca\u653e pernet_ops_rwsem \u4fe1\u53f7\u91cf")),(0,p.kt)("h2",{id:"nlmon_link_ops"},"nlmon_link_ops"),(0,p.kt)("p",null,"nlmon_link_ops \u662f\u4e00\u4e2a rtnl_link_ops \u7684\u5b9e\u4f8b\uff0c\u5b83\u901a\u8fc7\u8c03\u7528\u4e0a\u6587\u63cf\u8ff0\u7684 rtnl_link_register \u51fd\u6570\u6765\u5b8c\u6210\u5de5\u4f5c\u3002"),(0,p.kt)("p",null,"rtnl_link_ops \u4e2d\u7684 setup \u51fd\u6570\u5728 nlmon \u9a71\u52a8\u4e2d\u6709\u81ea\u5df1\u7684\u5b9e\u73b0\uff0c\u5176\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-c"},"static void nlmon_setup(struct net_device *dev)\n{\n    dev->type = ARPHRD_NETLINK;\n    dev->priv_flags |= IFF_NO_QUEUE;\n\n    dev->netdev_ops = &nlmon_ops;\n    dev->ethtool_ops = &nlmon_ethtool_ops;\n    dev->needs_free_netdev = true;\n\n    dev->features = NETIF_F_SG | NETIF_F_FRAGLIST |\n            NETIF_F_HIGHDMA | NETIF_F_LLTX;\n    dev->flags = IFF_NOARP;\n\n    /* That's rather a softlimit here, which, of course,\n     * can be altered. Not a real MTU, but what is to be\n     * expected in most cases.\n     */\n    dev->mtu = NLMSG_GOODSIZE;\n    dev->min_mtu = sizeof(struct nlmsghdr);\n}\n")),(0,p.kt)("p",null,"\u8fd9\u4e2a nlmon_setup \u51fd\u6570\u4ee3\u7801\u5bf9 netdev \u4e2d\u7684\u591a\u4e2a\u5b57\u6bb5\u8fdb\u884c\u4e86\u8bbe\u5b9a\uff0c\u5176\u4e2d\u9700\u8981\u6ce8\u610f\u7684\u662f netdev_ops \u4e0e ethtool_ops\uff0c\u8fd9\u4e24\u4e2a\u5b57\u6bb5\u8868\u660e nlmon \u5b9e\u73b0\u4e86\u4e00\u7ec4",(0,p.kt)("strong",{parentName:"p"},"\u865a\u62df\u7f51\u5361\u9a71\u52a8"),"\u3002"),(0,p.kt)("p",null,"nlmon \u9a71\u52a8\u4e2d netdev_ops \u7ed3\u6784\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-c"},"static const struct net_device_ops nlmon_ops = {\n    .ndo_init = nlmon_dev_init,\n    .ndo_uninit = nlmon_dev_uninit,\n    .ndo_open = nlmon_open,\n    .ndo_stop = nlmon_close,\n    .ndo_start_xmit = nlmon_xmit,\n    .ndo_get_stats64 = nlmon_get_stats64,\n};\n")),(0,p.kt)("p",null,"\u8fd9\u91cc ndo_open \u4e0e ndo_stop \u662f ifconfig up\u3001ifconfig down \u6700\u7ec8\u8c03\u7528\u5230\u7684\u51fd\u6570\u63a5\u53e3\u3002"),(0,p.kt)("p",null,"\u8fd9\u91cc\u6211\u7740\u91cd\u63cf\u8ff0\u4e0b nlmon_open \u51fd\u6570\u7684\u6267\u884c\u8fc7\u7a0b\u3002\u9996\u5148\u8d34\u4e0a\u51fd\u6570\u7684\u4ee3\u7801\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-c"},"static int nlmon_open(struct net_device *dev)\n{\n    struct nlmon *nlmon = netdev_priv(dev);\n\n    nlmon->nt.dev = dev;\n    nlmon->nt.module = THIS_MODULE;\n    return netlink_add_tap(&nlmon->nt);\n}\n")),(0,p.kt)("p",null,"\u8fd9\u91cc\u8c03\u7528\u4e86 netlink_add_tap \u63a5\u53e3\uff0c\u8fd9\u4e2a\u63a5\u53e3\u53ef\u4ee5\u7406\u89e3\u4e3a\u521b\u5efa\u4e86\u4e00\u4e2a netlink \u7c7b\u578b\u7684 tap \u53e3\uff0ctcpdump \u6293\u53d6 netlink \u6d88\u606f\u5b9e\u9645\u4e0a\u5c31\u662f\u4ece\u8fd9\u4e2a tap \u53e3\u7684\u63a5\u6536\u4e0e\u53d1\u9001\u961f\u5217\u4e2d\u83b7\u53d6 netlink \u6570\u636e\u5305\u7684\u3002"),(0,p.kt)("p",null,"\u7528\u6237\u6001\u53d1\u9001 netlink \u5230\u5185\u6838\u6001\u4ee5\u53ca\u5185\u6838\u6001\u53d1\u9001 netlnk \u5230\u7528\u6237\u6001\uff0c\u62a5\u6587\u90fd\u4f1a\u590d\u5236\u5230\u8fd9\u4e2a\u6ce8\u518c\u7684 netlink tap \u53e3\u4e2d\uff0c\u8fd9\u6837 tcpdump \u5c31\u80fd\u591f\u4ece\u8fd9\u4e2a netlink tap \u53e3\u4e2d\u6293\u53d6\u5230 netlink \u62a5\u6587\u4e86\u3002"),(0,p.kt)("p",null,"\u53ef\u4ee5\u770b\u5230\u5728 netlink \u53d1\u9001\u4e0e\u63a5\u6536\u7684\u63a5\u53e3\u4e2d\u90fd\u6709\u8c03\u7528  netlink_deliver_tap\u3001 netlink_deliver_tap_kernel \u6765\u6295\u9012\u6d88\u606f\u5230 netlink tap \u53e3\u4e2d\u3002"),(0,p.kt)("h2",{id:"tcpdump-\u6293\u53d6-netlink-\u5305\u7684\u539f\u7406"},"tcpdump \u6293\u53d6 netlink \u5305\u7684\u539f\u7406"),(0,p.kt)("p",null,"\u4e0a\u9762\u5df2\u7ecf\u5927\u81f4\u63cf\u8ff0\u5b8c\u4e86\u4f7f\u7528 nlmon \u9a71\u52a8\u6293\u53d6 netlink \u62a5\u6587\u7684\u539f\u7406\uff0c\u4e0d\u8fc7\u5bf9\u4e8e tcpdump \u5982\u4f55\u4ece\u5185\u6838\u6293\u53d6\u62a5\u6587\u5374\u6ca1\u6709\u8fdb\u884c\u63cf\u8ff0\uff0c\u8fd9\u91cc\u7b80\u5355\u7684\u63d0\u4e00\u63d0\u3002"),(0,p.kt)("p",null,"tcpdump \u9996\u5148\u521b\u5efa\u4e00\u4e2a ",(0,p.kt)("strong",{parentName:"p"},"AF_PACKET")," \u7c7b\u578b\u7684 ",(0,p.kt)("strong",{parentName:"p"},"socket"),"\uff0c\u8fd9\u4e2a socket \u6709\u81ea\u5df1",(0,p.kt)("strong",{parentName:"p"},"\u72ec\u7acb\u7684 proto_ops \u64cd\u4f5c"),"\u3002\u7136\u540e tcpdump \u901a\u8fc7 ioctl \u83b7\u53d6 ",(0,p.kt)("strong",{parentName:"p"},"nlmon0 \u7f51\u7edc\u63a5\u53e3"),"\u7684 ",(0,p.kt)("strong",{parentName:"p"},"ifindex"),"\uff0c\u8fd9\u4e2a ifindex \u88ab\u7528\u6765\u83b7\u53d6 ",(0,p.kt)("strong",{parentName:"p"},"net_device")," \u7ed3\u6784\u3002"),(0,p.kt)("p",null,"tcpdump \u7684\u94a9\u5b50\u51fd\u6570\u5728 af_packet \u534f\u8bae\u64cd\u4f5c\u7684 ",(0,p.kt)("strong",{parentName:"p"},"bind")," \u51fd\u6570\u4e2d ",(0,p.kt)("strong",{parentName:"p"},"hook")," \u5230\u5bf9\u5e94\u7684 ",(0,p.kt)("strong",{parentName:"p"},"net_device")," \u7ed3\u6784\u4e2d\uff0c\u5728\u8fd9\u4e2a\u7ed3\u6784\u4e2d",(0,p.kt)("strong",{parentName:"p"},"\u6dfb\u52a0\u4e86\u4e00\u4e2a\u534f\u8bae"),"\u3002"),(0,p.kt)("p",null,"\u6838\u5fc3\u4ee3\u7801\u662f\u8c03\u7528 ",(0,p.kt)("strong",{parentName:"p"},"register_prot_hook")," \u51fd\u6570\uff0c\u6b64\u51fd\u6570\u4e2d\u4e3b\u8981\u901a\u8fc7 ",(0,p.kt)("strong",{parentName:"p"},"dev_add_pack")," \u6765\u5b8c\u6210\u5de5\u4f5c\u3002"),(0,p.kt)("p",null,"dev_add_pack \u51fd\u6570\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-c"},"void dev_add_pack(struct packet_type *pt)\n{\n    struct list_head *head = ptype_head(pt);\n\n    spin_lock(&ptype_lock);\n    list_add_rcu(&pt->list, head);\n    spin_unlock(&ptype_lock);\n}\n")),(0,p.kt)("p",null,"\u8fd9\u91cc\u9700\u8981\u6ce8\u610f ptype_head \u51fd\u6570\uff0c\u5176\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-c"},"static inline struct list_head *ptype_head(const struct packet_type *pt)\n{\n    if (pt->type == htons(ETH_P_ALL))\n        return pt->dev ? &pt->dev->ptype_all : &ptype_all;\n    else\n        return pt->dev ? &pt->dev->ptype_specific :\n                 &ptype_base[ntohs(pt->type) & PTYPE_HASH_MASK];\n}\n")),(0,p.kt)("p",null,"\u8fd9\u91cc pt->dev \u5c31\u662f",(0,p.kt)("strong",{parentName:"p"},"\u5f85 hook")," \u7684 dev\uff0c\u5728\u8c03\u7528\u6b64\u51fd\u6570\u524d\u5df2\u7ecf\u8bbe\u5b9a\u4e86\u6b64\u5b57\u6bb5\uff0c\u8fd9\u91cc\u7684\u76ee\u6807\u5c31\u662f ",(0,p.kt)("strong",{parentName:"p"},"nlmon0 \u7684 net_device \u7ed3\u6784\u4f53"),"\u3002"),(0,p.kt)("p",null,"\u53ef\u4ee5\u770b\u5230 dev_add_pack \u5b9e\u9645\u4e0a\u662f\u4fee\u6539 ",(0,p.kt)("strong",{parentName:"p"},"dev->ptype_all\u3001dev->ptype_specific \u94fe\u8868"),"\u7684\u5185\u5bb9\u3002"),(0,p.kt)("p",null,"\u5e95\u5c42\u63a5\u53e3\u5728\u6536\u5230\u5305\u540e\u8981\u8fdb\u884c",(0,p.kt)("strong",{parentName:"p"},"\u534f\u8bae\u6808\u5206\u53d1"),"\uff0c\u8fd9\u65f6\u5019\u5c31\u4f1a\u8bbf\u95ee ",(0,p.kt)("strong",{parentName:"p"},"ptype_all")," \u4e0e ",(0,p.kt)("strong",{parentName:"p"},"ptype_specific")," \u94fe\u8868\uff0c\u5c06\u62a5\u6587 ",(0,p.kt)("strong",{parentName:"p"},"deliver")," \u5230\u94fe\u8868\u4e2d\u6ce8\u518c\u7684\u534f\u8bae\u4e2d\uff0c\u8fd9\u91cc\u7684\u6ce8\u518c\u7684 af_packet \u534f\u8bae\u4e5f\u4f1a\u88ab",(0,p.kt)("strong",{parentName:"p"},"\u63a8\u9001"),"\u62a5\u6587\uff0c\u8fd9\u6837 af_packet \u534f\u8bae\u5c31\u80fd\u591f\u5f97\u5230\u4e00\u4efd\u62a5\u6587\u7684",(0,p.kt)("strong",{parentName:"p"},"\u62f7\u8d1d"),"\uff0c\u5e76\u4f20\u9012\u7ed9",(0,p.kt)("strong",{parentName:"p"},"\u6293\u5305\u6a21\u5757"),"\uff0c\u5c31\u5b8c\u6210\u4e86\u6293\u5305\u7684\u8fc7\u7a0b\u3002"),(0,p.kt)("p",null,"\u4e0e\u4e0a\u9762\u63cf\u8ff0\u76f8\u5173\u7684\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-c"},"static int __netif_receive_skb_core(struct sk_buff *skb, bool pfmemalloc,\n                    struct packet_type **ppt_prev)\n{\n\n...............\n    list_for_each_entry_rcu(ptype, &ptype_all, list) {\n        if (pt_prev)\n            ret = deliver_skb(skb, pt_prev, orig_dev);\n        pt_prev = ptype;\n    }\n\n    list_for_each_entry_rcu(ptype, &skb->dev->ptype_all, list) {\n        if (pt_prev)\n            ret = deliver_skb(skb, pt_prev, orig_dev);\n        pt_prev = ptype;\n    }\n")),(0,p.kt)("h2",{id:"\u603b\u7ed3"},"\u603b\u7ed3"),(0,p.kt)("p",null,"\u672c\u6587\u5bf9 nlmon \u9a71\u52a8\u4ee5\u53ca tcpdump \u6293\u53d6 netlink \u62a5\u6587\u7684\u5de5\u4f5c\u539f\u7406\u8fdb\u884c\u4e86\u63cf\u8ff0\u3002\u5c3d\u7ba1 nlmon \u9a71\u52a8\u7684\u4ee3\u7801\u5185\u5bb9\u5f88\u5c11\uff0c\u4f46\u662f\u5176",(0,p.kt)("strong",{parentName:"p"},"\u4f9d\u8d56"),"\u7684\u51fd\u6570\u63a5\u53e3\u7684\u4ee3\u7801\u91cf\u5374\u4e0d\u5bb9\u5c0f\u89d1\u3002"),(0,p.kt)("p",null,"\u540c\u65f6\u4e5f\u5fc5\u987b\u6307\u51fa\u7684\u662f tcpdump \u5de5\u5177\u7684\u539f\u7406\u4e5f\u6bd4\u8868\u9762\u4e0a\u770b\u4e0a\u66f4\u590d\u6742\u4e00\u4e9b\uff0c\u4e0d\u8fc7\u5bf9\u5176\u539f\u7406\u8fdb\u884c\u7814\u7a76\u6709\u52a9\u4e8e\u63d0\u9ad8\u6211\u5bf9\u534f\u8bae\u6808\u5de5\u4f5c\u539f\u7406\u7684\u4e86\u89e3\u3002"),(0,p.kt)("p",null,"\u8fd9\u7bc7\u6587\u7ae0\u53d1\u51fa\uff0c\u7b97\u4e0a\u79c1\u5bc6\u7684\u4e24\u7bc7\u6587\u7ae0\uff0c\u5c31\u5b8c\u6210\u4e86 200 \u7bc7\u6587\u7ae0\u7684\u76ee\u6807\uff0c\u8fd9\u4e2a\u76ee\u6807\u7684\u5b9e\u73b0\u503c\u5f97\u5e86\u795d\uff0c\u540c\u65f6\u4e5f\u610f\u5473\u7740\u6211\u80fd\u591f\u6311\u6218\u66f4\u9ad8\u7684\u76ee\u6807\uff0c\u6211\u60f3\u8fd9\u4e5f\u662f\u4e0d\u6210\u95ee\u9898\u7684\u3002"))}c.isMDXComponent=!0}}]);